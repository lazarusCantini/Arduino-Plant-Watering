
Blumenbewaesserung.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000007ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000073a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800100  00800100  000007ae  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007ae  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000820  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000017e8  00000000  00000000  000008c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000092a  00000000  00000000  000020a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009e6  00000000  00000000  000029d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000134  00000000  00000000  000033b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006a9  00000000  00000000  000034ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ae3  00000000  00000000  00003b95  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00004678  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__ctors_end>
   4:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
   8:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
   c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  10:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  14:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  18:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  1c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  20:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  24:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  28:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  2c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  30:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  34:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  38:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__vector_14>
  3c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  40:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  44:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  48:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  4c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  50:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  54:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  58:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  5c:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  60:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  64:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__bad_interrupt>
  68:	54 01       	movw	r10, r8
  6a:	5d 01       	movw	r10, r26
  6c:	66 01       	movw	r12, r12
  6e:	6f 01       	movw	r12, r30
  70:	78 01       	movw	r14, r16
  72:	81 01       	movw	r16, r2
  74:	8a 01       	movw	r16, r20
  76:	93 01       	movw	r18, r6
  78:	ad 01       	movw	r20, r26
  7a:	b6 01       	movw	r22, r12
  7c:	bf 01       	movw	r22, r30
  7e:	c8 01       	movw	r24, r16
  80:	d1 01       	movw	r26, r2
  82:	da 01       	movw	r26, r20
  84:	e3 01       	movw	r28, r6
  86:	fd 01       	movw	r30, r26
  88:	05 02       	muls	r16, r21
  8a:	0d 02       	muls	r16, r29
  8c:	15 02       	muls	r17, r21
  8e:	1d 02       	muls	r17, r29
  90:	25 02       	muls	r18, r21
  92:	2d 02       	muls	r18, r29
  94:	35 02       	muls	r19, r21
  96:	58 02       	muls	r21, r24
  98:	65 02       	muls	r22, r21
  9a:	72 02       	muls	r23, r18
  9c:	7f 02       	muls	r23, r31
  9e:	8c 02       	muls	r24, r28
  a0:	99 02       	muls	r25, r25
  a2:	a6 02       	muls	r26, r22
  a4:	b3 02       	muls	r27, r19
  a6:	d1 02       	muls	r29, r17
  a8:	de 02       	muls	r29, r30
  aa:	eb 02       	muls	r30, r27
  ac:	f8 02       	muls	r31, r24
  ae:	05 03       	mulsu	r16, r21
  b0:	12 03       	mulsu	r17, r18
  b2:	1f 03       	fmul	r17, r23
  b4:	3d 03       	fmul	r19, r21
  b6:	48 03       	fmul	r20, r16
  b8:	53 03       	mulsu	r21, r19
  ba:	5e 03       	fmul	r21, r22
  bc:	69 03       	fmul	r22, r17
  be:	74 03       	mulsu	r23, r20
  c0:	7f 03       	fmul	r23, r23
  c2:	8a 03       	fmulsu	r16, r18

000000c4 <__ctors_end>:
  c4:	11 24       	eor	r1, r1
  c6:	1f be       	out	0x3f, r1	; 63
  c8:	cf ef       	ldi	r28, 0xFF	; 255
  ca:	d8 e0       	ldi	r29, 0x08	; 8
  cc:	de bf       	out	0x3e, r29	; 62
  ce:	cd bf       	out	0x3d, r28	; 61

000000d0 <__do_clear_bss>:
  d0:	21 e0       	ldi	r18, 0x01	; 1
  d2:	a0 e0       	ldi	r26, 0x00	; 0
  d4:	b1 e0       	ldi	r27, 0x01	; 1
  d6:	01 c0       	rjmp	.+2      	; 0xda <.do_clear_bss_start>

000000d8 <.do_clear_bss_loop>:
  d8:	1d 92       	st	X+, r1

000000da <.do_clear_bss_start>:
  da:	a8 30       	cpi	r26, 0x08	; 8
  dc:	b2 07       	cpc	r27, r18
  de:	e1 f7       	brne	.-8      	; 0xd8 <.do_clear_bss_loop>
  e0:	0e 94 76 00 	call	0xec	; 0xec <main>
  e4:	0c 94 9b 03 	jmp	0x736	; 0x736 <_exit>

000000e8 <__bad_interrupt>:
  e8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ec <main>:


//Sensor is High wenn Dry

int main(void)
{
  ec:	cf 93       	push	r28
  ee:	df 93       	push	r29
  f0:	cd b7       	in	r28, 0x3d	; 61
  f2:	de b7       	in	r29, 0x3e	; 62
  f4:	2c 97       	sbiw	r28, 0x0c	; 12
  f6:	0f b6       	in	r0, 0x3f	; 63
  f8:	f8 94       	cli
  fa:	de bf       	out	0x3e, r29	; 62
  fc:	0f be       	out	0x3f, r0	; 63
  fe:	cd bf       	out	0x3d, r28	; 61
	TCCR0A |= (1 << COM0A1);
 100:	84 b5       	in	r24, 0x24	; 36
 102:	80 68       	ori	r24, 0x80	; 128
 104:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << CS01) | (1 << CS00);
 106:	85 b5       	in	r24, 0x25	; 37
 108:	83 60       	ori	r24, 0x03	; 3
 10a:	85 bd       	out	0x25, r24	; 37
	 // ((1000000/8)/1000) = 125
	 OCR0A = 125-1;
 10c:	8c e7       	ldi	r24, 0x7C	; 124
 10e:	87 bd       	out	0x27, r24	; 39
	 
	   // Compare Interrupt erlauben
	   TIMSK0 |= (1<<OCIE0A);
 110:	ee e6       	ldi	r30, 0x6E	; 110
 112:	f0 e0       	ldi	r31, 0x00	; 0
 114:	80 81       	ld	r24, Z
 116:	82 60       	ori	r24, 0x02	; 2
 118:	80 83       	st	Z, r24
	   
	  // Global Interrupts aktivieren
	  sei();
 11a:	78 94       	sei
	   
	Pin WateringPump('C', 5, false);
 11c:	20 e0       	ldi	r18, 0x00	; 0
 11e:	45 e0       	ldi	r20, 0x05	; 5
 120:	63 e4       	ldi	r22, 0x43	; 67
 122:	ce 01       	movw	r24, r28
 124:	01 96       	adiw	r24, 0x01	; 1
 126:	0e 94 3d 02 	call	0x47a	; 0x47a <_ZN3PinC1Echb>
	Pin PoweringHumidMeter ('C', 4, false);
 12a:	20 e0       	ldi	r18, 0x00	; 0
 12c:	44 e0       	ldi	r20, 0x04	; 4
 12e:	63 e4       	ldi	r22, 0x43	; 67
 130:	ce 01       	movw	r24, r28
 132:	05 96       	adiw	r24, 0x05	; 5
 134:	0e 94 3d 02 	call	0x47a	; 0x47a <_ZN3PinC1Echb>
	Pin PlantToDry('C', 3, true);
 138:	21 e0       	ldi	r18, 0x01	; 1
 13a:	43 e0       	ldi	r20, 0x03	; 3
 13c:	63 e4       	ldi	r22, 0x43	; 67
 13e:	ce 01       	movw	r24, r28
 140:	09 96       	adiw	r24, 0x09	; 9
 142:	0e 94 3d 02 	call	0x47a	; 0x47a <_ZN3PinC1Echb>
	
    //Init all	WateringPump.setze_Status(false);
	PoweringHumidMeter.setze_Status(false);
 146:	60 e0       	ldi	r22, 0x00	; 0
 148:	ce 01       	movw	r24, r28
 14a:	05 96       	adiw	r24, 0x05	; 5
 14c:	0e 94 44 02 	call	0x488	; 0x488 <_ZN3Pin12setze_StatusEb>
	
    while (1) 
    {
		//_delay_ms(1000);
		//WateringPump.toggle_Pin();
		if (stunde % 4 == 0)
 150:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 154:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 158:	83 70       	andi	r24, 0x03	; 3
 15a:	99 27       	eor	r25, r25
 15c:	89 2b       	or	r24, r25
 15e:	c1 f7       	brne	.-16     	; 0x150 <main+0x64>
		{
			if (minute == 0)
 160:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <minute>
 164:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <minute+0x1>
 168:	89 2b       	or	r24, r25
 16a:	71 f4       	brne	.+28     	; 0x188 <main+0x9c>
			{
				PoweringHumidMeter.setze_Status(true);
 16c:	61 e0       	ldi	r22, 0x01	; 1
 16e:	ce 01       	movw	r24, r28
 170:	05 96       	adiw	r24, 0x05	; 5
 172:	0e 94 44 02 	call	0x488	; 0x488 <_ZN3Pin12setze_StatusEb>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 176:	2f ef       	ldi	r18, 0xFF	; 255
 178:	87 ea       	ldi	r24, 0xA7	; 167
 17a:	91 e6       	ldi	r25, 0x61	; 97
 17c:	21 50       	subi	r18, 0x01	; 1
 17e:	80 40       	sbci	r24, 0x00	; 0
 180:	90 40       	sbci	r25, 0x00	; 0
 182:	e1 f7       	brne	.-8      	; 0x17c <main+0x90>
 184:	00 c0       	rjmp	.+0      	; 0x186 <main+0x9a>
 186:	00 00       	nop
				_delay_ms(2000);
			}

			if ((minute < 1) && (PlantToDry.lese_status()))
 188:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <minute>
 18c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <minute+0x1>
 190:	89 2b       	or	r24, r25
 192:	61 f4       	brne	.+24     	; 0x1ac <main+0xc0>
 194:	ce 01       	movw	r24, r28
 196:	09 96       	adiw	r24, 0x09	; 9
 198:	0e 94 3e 01 	call	0x27c	; 0x27c <_ZN3Pin11lese_statusEv>
 19c:	88 23       	and	r24, r24
 19e:	31 f0       	breq	.+12     	; 0x1ac <main+0xc0>
			{
				WateringPump.setze_Status(false); 
 1a0:	60 e0       	ldi	r22, 0x00	; 0
 1a2:	ce 01       	movw	r24, r28
 1a4:	01 96       	adiw	r24, 0x01	; 1
 1a6:	0e 94 44 02 	call	0x488	; 0x488 <_ZN3Pin12setze_StatusEb>
 1aa:	d2 cf       	rjmp	.-92     	; 0x150 <main+0x64>
			}
			else
			{
				WateringPump.setze_Status(true);
 1ac:	61 e0       	ldi	r22, 0x01	; 1
 1ae:	ce 01       	movw	r24, r28
 1b0:	01 96       	adiw	r24, 0x01	; 1
 1b2:	0e 94 44 02 	call	0x488	; 0x488 <_ZN3Pin12setze_StatusEb>
				PoweringHumidMeter.setze_Status(false);
 1b6:	60 e0       	ldi	r22, 0x00	; 0
 1b8:	ce 01       	movw	r24, r28
 1ba:	05 96       	adiw	r24, 0x05	; 5
 1bc:	0e 94 44 02 	call	0x488	; 0x488 <_ZN3Pin12setze_StatusEb>
 1c0:	c7 cf       	rjmp	.-114    	; 0x150 <main+0x64>

000001c2 <__vector_14>:
wird aufgerufen, wenn
TCNT0 = OCR0A = 125-1
ist (125 Schritte), d.h. genau alle 1 ms
*/
ISR (TIMER0_COMPA_vect)
{
 1c2:	1f 92       	push	r1
 1c4:	0f 92       	push	r0
 1c6:	0f b6       	in	r0, 0x3f	; 63
 1c8:	0f 92       	push	r0
 1ca:	11 24       	eor	r1, r1
 1cc:	2f 93       	push	r18
 1ce:	8f 93       	push	r24
 1d0:	9f 93       	push	r25
	millisekunden++;
 1d2:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <millisekunden>
 1d6:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <millisekunden+0x1>
 1da:	01 96       	adiw	r24, 0x01	; 1
 1dc:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <millisekunden+0x1>
 1e0:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <millisekunden>
	if(millisekunden == 1000)
 1e4:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <millisekunden>
 1e8:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <millisekunden+0x1>
 1ec:	88 3e       	cpi	r24, 0xE8	; 232
 1ee:	93 40       	sbci	r25, 0x03	; 3
 1f0:	e9 f5       	brne	.+122    	; 0x26c <__vector_14+0xaa>
	{
		sekunde++;
 1f2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <sekunde>
 1f6:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <sekunde+0x1>
 1fa:	01 96       	adiw	r24, 0x01	; 1
 1fc:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <sekunde+0x1>
 200:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <sekunde>
		millisekunden = 0;
 204:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <millisekunden+0x1>
 208:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <millisekunden>
		if(sekunde == 60)
 20c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <sekunde>
 210:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <sekunde+0x1>
 214:	cc 97       	sbiw	r24, 0x3c	; 60
 216:	69 f4       	brne	.+26     	; 0x232 <__vector_14+0x70>
		{
			minute++;
 218:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <minute>
 21c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <minute+0x1>
 220:	01 96       	adiw	r24, 0x01	; 1
 222:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <minute+0x1>
 226:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <minute>
			sekunde = 0;
 22a:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <sekunde+0x1>
 22e:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <sekunde>
		}
		if(minute == 60)
 232:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <minute>
 236:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <minute+0x1>
 23a:	cc 97       	sbiw	r24, 0x3c	; 60
 23c:	69 f4       	brne	.+26     	; 0x258 <__vector_14+0x96>
		{
			stunde++;
 23e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 242:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 246:	01 96       	adiw	r24, 0x01	; 1
 248:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 24c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
			minute = 0;
 250:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <minute+0x1>
 254:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <minute>
		}
		if(stunde == 24)
 258:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 25c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 260:	48 97       	sbiw	r24, 0x18	; 24
 262:	21 f4       	brne	.+8      	; 0x26c <__vector_14+0xaa>
		{
			stunde = 0;
 264:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
 268:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
		}
	}
}
 26c:	9f 91       	pop	r25
 26e:	8f 91       	pop	r24
 270:	2f 91       	pop	r18
 272:	0f 90       	pop	r0
 274:	0f be       	out	0x3f, r0	; 63
 276:	0f 90       	pop	r0
 278:	1f 90       	pop	r1
 27a:	18 95       	reti

0000027c <_ZN3Pin11lese_statusEv>:
	private_Nummer_Pin = Pin_Nummer;
}

void Pin::setze_Richtung(bool is_Eingang)
{
	private_Eingang = is_Eingang;
 27c:	fc 01       	movw	r30, r24
 27e:	83 81       	ldd	r24, Z+3	; 0x03
 280:	08 95       	ret

00000282 <_ZN3Pin16initialisierePinEv>:
}

void Pin::initialisierePin()
{
 282:	dc 01       	movw	r26, r24
	if (private_Port == 'A')
	{
		
	}

	if (private_Port == 'B')
 284:	8c 91       	ld	r24, X
 286:	82 34       	cpi	r24, 0x42	; 66
 288:	09 f0       	breq	.+2      	; 0x28c <_ZN3Pin16initialisierePinEv+0xa>
 28a:	55 c0       	rjmp	.+170    	; 0x336 <_ZN3Pin16initialisierePinEv+0xb4>
	{
		switch(private_Nummer_Pin)
 28c:	11 96       	adiw	r26, 0x01	; 1
 28e:	ec 91       	ld	r30, X
 290:	11 97       	sbiw	r26, 0x01	; 1
 292:	4e 2f       	mov	r20, r30
 294:	50 e0       	ldi	r21, 0x00	; 0
 296:	48 30       	cpi	r20, 0x08	; 8
 298:	51 05       	cpc	r21, r1
 29a:	08 f0       	brcs	.+2      	; 0x29e <_ZN3Pin16initialisierePinEv+0x1c>
 29c:	4c c0       	rjmp	.+152    	; 0x336 <_ZN3Pin16initialisierePinEv+0xb4>
 29e:	fa 01       	movw	r30, r20
 2a0:	ec 5c       	subi	r30, 0xCC	; 204
 2a2:	ff 4f       	sbci	r31, 0xFF	; 255
 2a4:	0c 94 95 03 	jmp	0x72a	; 0x72a <__tablejump2__>
		{
			case 0:	if (private_Eingang == true)
 2a8:	12 96       	adiw	r26, 0x02	; 2
 2aa:	8c 91       	ld	r24, X
 2ac:	12 97       	sbiw	r26, 0x02	; 2
 2ae:	88 23       	and	r24, r24
 2b0:	11 f0       	breq	.+4      	; 0x2b6 <_ZN3Pin16initialisierePinEv+0x34>
			{DDRB &= ~(1 << DDB0);}
 2b2:	20 98       	cbi	0x04, 0	; 4
 2b4:	40 c0       	rjmp	.+128    	; 0x336 <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB0);}
 2b6:	20 9a       	sbi	0x04, 0	; 4
 2b8:	3e c0       	rjmp	.+124    	; 0x336 <_ZN3Pin16initialisierePinEv+0xb4>
			break;
			
			case 1:	if (private_Eingang == true)
 2ba:	12 96       	adiw	r26, 0x02	; 2
 2bc:	8c 91       	ld	r24, X
 2be:	12 97       	sbiw	r26, 0x02	; 2
 2c0:	88 23       	and	r24, r24
 2c2:	11 f0       	breq	.+4      	; 0x2c8 <_ZN3Pin16initialisierePinEv+0x46>
			{DDRB &= ~(1 << DDB1);}
 2c4:	21 98       	cbi	0x04, 1	; 4
 2c6:	37 c0       	rjmp	.+110    	; 0x336 <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB1);}
 2c8:	21 9a       	sbi	0x04, 1	; 4
 2ca:	35 c0       	rjmp	.+106    	; 0x336 <_ZN3Pin16initialisierePinEv+0xb4>
			break;
			
			case 2:	if (private_Eingang == true)
 2cc:	12 96       	adiw	r26, 0x02	; 2
 2ce:	8c 91       	ld	r24, X
 2d0:	12 97       	sbiw	r26, 0x02	; 2
 2d2:	88 23       	and	r24, r24
 2d4:	11 f0       	breq	.+4      	; 0x2da <_ZN3Pin16initialisierePinEv+0x58>
			{DDRB &= ~(1 << DDB2);}
 2d6:	22 98       	cbi	0x04, 2	; 4
 2d8:	2e c0       	rjmp	.+92     	; 0x336 <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB2);}
 2da:	22 9a       	sbi	0x04, 2	; 4
 2dc:	2c c0       	rjmp	.+88     	; 0x336 <_ZN3Pin16initialisierePinEv+0xb4>
			break;
			
			case 3:	if (private_Eingang == true)
 2de:	12 96       	adiw	r26, 0x02	; 2
 2e0:	8c 91       	ld	r24, X
 2e2:	12 97       	sbiw	r26, 0x02	; 2
 2e4:	88 23       	and	r24, r24
 2e6:	11 f0       	breq	.+4      	; 0x2ec <_ZN3Pin16initialisierePinEv+0x6a>
			{DDRB &= ~(1 << DDB3);}
 2e8:	23 98       	cbi	0x04, 3	; 4
 2ea:	25 c0       	rjmp	.+74     	; 0x336 <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB3);}
 2ec:	23 9a       	sbi	0x04, 3	; 4
 2ee:	23 c0       	rjmp	.+70     	; 0x336 <_ZN3Pin16initialisierePinEv+0xb4>
			break;
			
			case 4:	if (private_Eingang == true)
 2f0:	12 96       	adiw	r26, 0x02	; 2
 2f2:	8c 91       	ld	r24, X
 2f4:	12 97       	sbiw	r26, 0x02	; 2
 2f6:	88 23       	and	r24, r24
 2f8:	11 f0       	breq	.+4      	; 0x2fe <_ZN3Pin16initialisierePinEv+0x7c>
			{DDRB &= ~(1 << DDB4);}
 2fa:	24 98       	cbi	0x04, 4	; 4
 2fc:	1c c0       	rjmp	.+56     	; 0x336 <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB4);}
 2fe:	24 9a       	sbi	0x04, 4	; 4
 300:	1a c0       	rjmp	.+52     	; 0x336 <_ZN3Pin16initialisierePinEv+0xb4>
			break;
			
			case 5:	if (private_Eingang == true)
 302:	12 96       	adiw	r26, 0x02	; 2
 304:	8c 91       	ld	r24, X
 306:	12 97       	sbiw	r26, 0x02	; 2
 308:	88 23       	and	r24, r24
 30a:	11 f0       	breq	.+4      	; 0x310 <_ZN3Pin16initialisierePinEv+0x8e>
			{DDRB &= ~(1 << DDB5);}
 30c:	25 98       	cbi	0x04, 5	; 4
 30e:	13 c0       	rjmp	.+38     	; 0x336 <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB5);}
 310:	25 9a       	sbi	0x04, 5	; 4
 312:	11 c0       	rjmp	.+34     	; 0x336 <_ZN3Pin16initialisierePinEv+0xb4>
			break;
			
			case 6:	if (private_Eingang == true)
 314:	12 96       	adiw	r26, 0x02	; 2
 316:	8c 91       	ld	r24, X
 318:	12 97       	sbiw	r26, 0x02	; 2
 31a:	88 23       	and	r24, r24
 31c:	11 f0       	breq	.+4      	; 0x322 <_ZN3Pin16initialisierePinEv+0xa0>
			{DDRB &= ~(1 << DDB6);}
 31e:	26 98       	cbi	0x04, 6	; 4
 320:	0a c0       	rjmp	.+20     	; 0x336 <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB6);}
 322:	26 9a       	sbi	0x04, 6	; 4
 324:	08 c0       	rjmp	.+16     	; 0x336 <_ZN3Pin16initialisierePinEv+0xb4>
			break;
			
			case 7:	if (private_Eingang == true)
 326:	12 96       	adiw	r26, 0x02	; 2
 328:	8c 91       	ld	r24, X
 32a:	12 97       	sbiw	r26, 0x02	; 2
 32c:	88 23       	and	r24, r24
 32e:	11 f0       	breq	.+4      	; 0x334 <_ZN3Pin16initialisierePinEv+0xb2>
			{DDRB &= ~(1 << DDB7);}
 330:	27 98       	cbi	0x04, 7	; 4
 332:	01 c0       	rjmp	.+2      	; 0x336 <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB7);}
 334:	27 9a       	sbi	0x04, 7	; 4
			break;
			
		}
	}

	if (private_Port == 'C')
 336:	8c 91       	ld	r24, X
 338:	83 34       	cpi	r24, 0x43	; 67
 33a:	09 f0       	breq	.+2      	; 0x33e <_ZN3Pin16initialisierePinEv+0xbc>
 33c:	4c c0       	rjmp	.+152    	; 0x3d6 <_ZN3Pin16initialisierePinEv+0x154>
	{
		switch(private_Nummer_Pin)
 33e:	11 96       	adiw	r26, 0x01	; 1
 340:	ec 91       	ld	r30, X
 342:	11 97       	sbiw	r26, 0x01	; 1
 344:	4e 2f       	mov	r20, r30
 346:	50 e0       	ldi	r21, 0x00	; 0
 348:	47 30       	cpi	r20, 0x07	; 7
 34a:	51 05       	cpc	r21, r1
 34c:	08 f0       	brcs	.+2      	; 0x350 <_ZN3Pin16initialisierePinEv+0xce>
 34e:	43 c0       	rjmp	.+134    	; 0x3d6 <_ZN3Pin16initialisierePinEv+0x154>
 350:	fa 01       	movw	r30, r20
 352:	e4 5c       	subi	r30, 0xC4	; 196
 354:	ff 4f       	sbci	r31, 0xFF	; 255
 356:	0c 94 95 03 	jmp	0x72a	; 0x72a <__tablejump2__>
		{
			case 0:	if (private_Eingang == true)
 35a:	12 96       	adiw	r26, 0x02	; 2
 35c:	8c 91       	ld	r24, X
 35e:	12 97       	sbiw	r26, 0x02	; 2
 360:	88 23       	and	r24, r24
 362:	11 f0       	breq	.+4      	; 0x368 <_ZN3Pin16initialisierePinEv+0xe6>
			{DDRC &= ~(1 << DDC0);}
 364:	38 98       	cbi	0x07, 0	; 7
 366:	37 c0       	rjmp	.+110    	; 0x3d6 <_ZN3Pin16initialisierePinEv+0x154>
			else
			{DDRC |= (1 << DDC0);}
 368:	38 9a       	sbi	0x07, 0	; 7
 36a:	35 c0       	rjmp	.+106    	; 0x3d6 <_ZN3Pin16initialisierePinEv+0x154>
			break;
			
			case 1:	if (private_Eingang == true)
 36c:	12 96       	adiw	r26, 0x02	; 2
 36e:	8c 91       	ld	r24, X
 370:	12 97       	sbiw	r26, 0x02	; 2
 372:	88 23       	and	r24, r24
 374:	11 f0       	breq	.+4      	; 0x37a <_ZN3Pin16initialisierePinEv+0xf8>
			{DDRC &= ~(1 << DDC1);}
 376:	39 98       	cbi	0x07, 1	; 7
 378:	2e c0       	rjmp	.+92     	; 0x3d6 <_ZN3Pin16initialisierePinEv+0x154>
			else
			{DDRC |= (1 << DDC1);}
 37a:	39 9a       	sbi	0x07, 1	; 7
 37c:	2c c0       	rjmp	.+88     	; 0x3d6 <_ZN3Pin16initialisierePinEv+0x154>
			break;
			
			case 2:	if (private_Eingang == true)
 37e:	12 96       	adiw	r26, 0x02	; 2
 380:	8c 91       	ld	r24, X
 382:	12 97       	sbiw	r26, 0x02	; 2
 384:	88 23       	and	r24, r24
 386:	11 f0       	breq	.+4      	; 0x38c <_ZN3Pin16initialisierePinEv+0x10a>
			{DDRC &= ~(1 << DDC2);}
 388:	3a 98       	cbi	0x07, 2	; 7
 38a:	25 c0       	rjmp	.+74     	; 0x3d6 <_ZN3Pin16initialisierePinEv+0x154>
			else
			{DDRC |= (1 << DDC2);}
 38c:	3a 9a       	sbi	0x07, 2	; 7
 38e:	23 c0       	rjmp	.+70     	; 0x3d6 <_ZN3Pin16initialisierePinEv+0x154>
			break;
			
			case 3:	if (private_Eingang == true)
 390:	12 96       	adiw	r26, 0x02	; 2
 392:	8c 91       	ld	r24, X
 394:	12 97       	sbiw	r26, 0x02	; 2
 396:	88 23       	and	r24, r24
 398:	11 f0       	breq	.+4      	; 0x39e <_ZN3Pin16initialisierePinEv+0x11c>
			{DDRC &= ~(1 << DDC3);}
 39a:	3b 98       	cbi	0x07, 3	; 7
 39c:	1c c0       	rjmp	.+56     	; 0x3d6 <_ZN3Pin16initialisierePinEv+0x154>
			else
			{DDRC |= (1 << DDC3);}
 39e:	3b 9a       	sbi	0x07, 3	; 7
 3a0:	1a c0       	rjmp	.+52     	; 0x3d6 <_ZN3Pin16initialisierePinEv+0x154>
			break;
			
			case 4:	if (private_Eingang == true)
 3a2:	12 96       	adiw	r26, 0x02	; 2
 3a4:	8c 91       	ld	r24, X
 3a6:	12 97       	sbiw	r26, 0x02	; 2
 3a8:	88 23       	and	r24, r24
 3aa:	11 f0       	breq	.+4      	; 0x3b0 <_ZN3Pin16initialisierePinEv+0x12e>
			{DDRC &= ~(1 << DDC4);}
 3ac:	3c 98       	cbi	0x07, 4	; 7
 3ae:	13 c0       	rjmp	.+38     	; 0x3d6 <_ZN3Pin16initialisierePinEv+0x154>
			else
			{DDRC |= (1 << DDC4);}
 3b0:	3c 9a       	sbi	0x07, 4	; 7
 3b2:	11 c0       	rjmp	.+34     	; 0x3d6 <_ZN3Pin16initialisierePinEv+0x154>
			break;
			
			case 5:	if (private_Eingang == true)
 3b4:	12 96       	adiw	r26, 0x02	; 2
 3b6:	8c 91       	ld	r24, X
 3b8:	12 97       	sbiw	r26, 0x02	; 2
 3ba:	88 23       	and	r24, r24
 3bc:	11 f0       	breq	.+4      	; 0x3c2 <_ZN3Pin16initialisierePinEv+0x140>
			{DDRC &= ~(1 << DDC5);}
 3be:	3d 98       	cbi	0x07, 5	; 7
 3c0:	0a c0       	rjmp	.+20     	; 0x3d6 <_ZN3Pin16initialisierePinEv+0x154>
			else
			{DDRC |= (1 << DDC5);}
 3c2:	3d 9a       	sbi	0x07, 5	; 7
 3c4:	08 c0       	rjmp	.+16     	; 0x3d6 <_ZN3Pin16initialisierePinEv+0x154>
			break;
			
			case 6:	if (private_Eingang == true)
 3c6:	12 96       	adiw	r26, 0x02	; 2
 3c8:	8c 91       	ld	r24, X
 3ca:	12 97       	sbiw	r26, 0x02	; 2
 3cc:	88 23       	and	r24, r24
 3ce:	11 f0       	breq	.+4      	; 0x3d4 <_ZN3Pin16initialisierePinEv+0x152>
			{DDRC &= ~(1 << DDC6);}
 3d0:	3e 98       	cbi	0x07, 6	; 7
 3d2:	01 c0       	rjmp	.+2      	; 0x3d6 <_ZN3Pin16initialisierePinEv+0x154>
			else
			{DDRC |= (1 << DDC6);}
 3d4:	3e 9a       	sbi	0x07, 6	; 7
			break;
			
		}
	}
	
	if (private_Port == 'D')
 3d6:	8c 91       	ld	r24, X
 3d8:	84 34       	cpi	r24, 0x44	; 68
 3da:	09 f0       	breq	.+2      	; 0x3de <_ZN3Pin16initialisierePinEv+0x15c>
 3dc:	4d c0       	rjmp	.+154    	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
	{
		switch(private_Nummer_Pin)
 3de:	11 96       	adiw	r26, 0x01	; 1
 3e0:	ec 91       	ld	r30, X
 3e2:	11 97       	sbiw	r26, 0x01	; 1
 3e4:	4e 2f       	mov	r20, r30
 3e6:	50 e0       	ldi	r21, 0x00	; 0
 3e8:	48 30       	cpi	r20, 0x08	; 8
 3ea:	51 05       	cpc	r21, r1
 3ec:	08 f0       	brcs	.+2      	; 0x3f0 <_ZN3Pin16initialisierePinEv+0x16e>
 3ee:	44 c0       	rjmp	.+136    	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 3f0:	fa 01       	movw	r30, r20
 3f2:	ed 5b       	subi	r30, 0xBD	; 189
 3f4:	ff 4f       	sbci	r31, 0xFF	; 255
 3f6:	0c 94 95 03 	jmp	0x72a	; 0x72a <__tablejump2__>
		{
			case 0:	if (private_Eingang == true)
 3fa:	12 96       	adiw	r26, 0x02	; 2
 3fc:	8c 91       	ld	r24, X
 3fe:	88 23       	and	r24, r24
 400:	11 f0       	breq	.+4      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
			{DDRD &= ~(1 << DDD0);}
 402:	50 98       	cbi	0x0a, 0	; 10
 404:	08 95       	ret
			else
			{DDRD |= (1 << DDD0);}
 406:	50 9a       	sbi	0x0a, 0	; 10
 408:	08 95       	ret
			break;
			
			case 1:	if (private_Eingang == true)
 40a:	12 96       	adiw	r26, 0x02	; 2
 40c:	8c 91       	ld	r24, X
 40e:	88 23       	and	r24, r24
 410:	11 f0       	breq	.+4      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
			{DDRD &= ~(1 << DDD1);}
 412:	51 98       	cbi	0x0a, 1	; 10
 414:	08 95       	ret
			else
			{DDRD |= (1 << DDD1);}
 416:	51 9a       	sbi	0x0a, 1	; 10
 418:	08 95       	ret
			break;
			
			case 2:	if (private_Eingang == true)
 41a:	12 96       	adiw	r26, 0x02	; 2
 41c:	8c 91       	ld	r24, X
 41e:	88 23       	and	r24, r24
 420:	11 f0       	breq	.+4      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
			{DDRD &= ~(1 << DDD2);}
 422:	52 98       	cbi	0x0a, 2	; 10
 424:	08 95       	ret
			else
			{DDRD |= (1 << DDD2);}
 426:	52 9a       	sbi	0x0a, 2	; 10
 428:	08 95       	ret
			break;
			
			case 3:	if (private_Eingang == true)
 42a:	12 96       	adiw	r26, 0x02	; 2
 42c:	8c 91       	ld	r24, X
 42e:	88 23       	and	r24, r24
 430:	11 f0       	breq	.+4      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
			{DDRD &= ~(1 << DDD3);}
 432:	53 98       	cbi	0x0a, 3	; 10
 434:	08 95       	ret
			else
			{DDRD |= (1 << DDD3);}
 436:	53 9a       	sbi	0x0a, 3	; 10
 438:	08 95       	ret
			break;
			
			case 4:	if (private_Eingang == true)
 43a:	12 96       	adiw	r26, 0x02	; 2
 43c:	8c 91       	ld	r24, X
 43e:	88 23       	and	r24, r24
 440:	11 f0       	breq	.+4      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
			{DDRD &= ~(1 << DDD4);}
 442:	54 98       	cbi	0x0a, 4	; 10
 444:	08 95       	ret
			else
			{DDRD |= (1 << DDD4);}
 446:	54 9a       	sbi	0x0a, 4	; 10
 448:	08 95       	ret
			break;
			
			case 5:	if (private_Eingang == true)
 44a:	12 96       	adiw	r26, 0x02	; 2
 44c:	8c 91       	ld	r24, X
 44e:	88 23       	and	r24, r24
 450:	11 f0       	breq	.+4      	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
			{DDRD &= ~(1 << DDD5);}
 452:	55 98       	cbi	0x0a, 5	; 10
 454:	08 95       	ret
			else
			{DDRD |= (1 << DDD5);}
 456:	55 9a       	sbi	0x0a, 5	; 10
 458:	08 95       	ret
			break;
			
			case 6:	if (private_Eingang == true)
 45a:	12 96       	adiw	r26, 0x02	; 2
 45c:	8c 91       	ld	r24, X
 45e:	88 23       	and	r24, r24
 460:	11 f0       	breq	.+4      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
			{DDRD &= ~(1 << DDD6);}
 462:	56 98       	cbi	0x0a, 6	; 10
 464:	08 95       	ret
			else
			{DDRD |= (1 << DDD6);}
 466:	56 9a       	sbi	0x0a, 6	; 10
 468:	08 95       	ret
			break;
			
			case 7:	if (private_Eingang == true)
 46a:	12 96       	adiw	r26, 0x02	; 2
 46c:	8c 91       	ld	r24, X
 46e:	88 23       	and	r24, r24
 470:	11 f0       	breq	.+4      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
			{DDRD &= ~(1 << DDD7);}
 472:	57 98       	cbi	0x0a, 7	; 10
 474:	08 95       	ret
			else
			{DDRD |= (1 << DDD7);}
 476:	57 9a       	sbi	0x0a, 7	; 10
 478:	08 95       	ret

0000047a <_ZN3PinC1Echb>:
	return private_Nummer_Pin;
}

void Pin::setze_Port(char PortBuchstabe)
{
	private_Port = PortBuchstabe;
 47a:	fc 01       	movw	r30, r24
 47c:	60 83       	st	Z, r22
}

void Pin::setze_PinNummer(uint8_t Pin_Nummer)
{
	private_Nummer_Pin = Pin_Nummer;
 47e:	41 83       	std	Z+1, r20	; 0x01
}

void Pin::setze_Richtung(bool is_Eingang)
{
	private_Eingang = is_Eingang;
 480:	22 83       	std	Z+2, r18	; 0x02
{
	//ctor
	setze_Port(PublicPort);
	setze_PinNummer(Public_Nummer_Pin);
	setze_Richtung(Eingang);
	initialisierePin();  
 482:	0e 94 41 01 	call	0x282	; 0x282 <_ZN3Pin16initialisierePinEv>
 486:	08 95       	ret

00000488 <_ZN3Pin12setze_StatusEb>:


}

void Pin::setze_Status(bool Status)
{
 488:	dc 01       	movw	r26, r24
 48a:	96 2f       	mov	r25, r22

		if (private_Port == 'B')
 48c:	8c 91       	ld	r24, X
 48e:	82 34       	cpi	r24, 0x42	; 66
 490:	09 f0       	breq	.+2      	; 0x494 <_ZN3Pin12setze_StatusEb+0xc>
 492:	75 c0       	rjmp	.+234    	; 0x57e <_ZN3Pin12setze_StatusEb+0xf6>
		{
			switch(private_Nummer_Pin)
 494:	11 96       	adiw	r26, 0x01	; 1
 496:	ec 91       	ld	r30, X
 498:	11 97       	sbiw	r26, 0x01	; 1
 49a:	4e 2f       	mov	r20, r30
 49c:	50 e0       	ldi	r21, 0x00	; 0
 49e:	48 30       	cpi	r20, 0x08	; 8
 4a0:	51 05       	cpc	r21, r1
 4a2:	08 f0       	brcs	.+2      	; 0x4a6 <_ZN3Pin12setze_StatusEb+0x1e>
 4a4:	6c c0       	rjmp	.+216    	; 0x57e <_ZN3Pin12setze_StatusEb+0xf6>
 4a6:	fa 01       	movw	r30, r20
 4a8:	e5 5b       	subi	r30, 0xB5	; 181
 4aa:	ff 4f       	sbci	r31, 0xFF	; 255
 4ac:	0c 94 95 03 	jmp	0x72a	; 0x72a <__tablejump2__>
			{
				case 0:	if (Status == true)
 4b0:	99 23       	and	r25, r25
 4b2:	31 f0       	breq	.+12     	; 0x4c0 <_ZN3Pin12setze_StatusEb+0x38>
				{ PORTB |= (1<< PINB0);
 4b4:	28 9a       	sbi	0x05, 0	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 4b6:	81 e0       	ldi	r24, 0x01	; 1
 4b8:	13 96       	adiw	r26, 0x03	; 3
 4ba:	8c 93       	st	X, r24
 4bc:	13 97       	sbiw	r26, 0x03	; 3
 4be:	5f c0       	rjmp	.+190    	; 0x57e <_ZN3Pin12setze_StatusEb+0xf6>
			{
				case 0:	if (Status == true)
				{ PORTB |= (1<< PINB0);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB0);
 4c0:	28 98       	cbi	0x05, 0	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 4c2:	13 96       	adiw	r26, 0x03	; 3
 4c4:	1c 92       	st	X, r1
 4c6:	13 97       	sbiw	r26, 0x03	; 3
 4c8:	5a c0       	rjmp	.+180    	; 0x57e <_ZN3Pin12setze_StatusEb+0xf6>
				else
				{PORTB &= ~(1<<PINB0);
					merke_status(false);}
				break;
				
				case 1:	if (Status == true)
 4ca:	99 23       	and	r25, r25
 4cc:	31 f0       	breq	.+12     	; 0x4da <_ZN3Pin12setze_StatusEb+0x52>
				{ PORTB |= (1<< PINB1);
 4ce:	29 9a       	sbi	0x05, 1	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 4d0:	81 e0       	ldi	r24, 0x01	; 1
 4d2:	13 96       	adiw	r26, 0x03	; 3
 4d4:	8c 93       	st	X, r24
 4d6:	13 97       	sbiw	r26, 0x03	; 3
 4d8:	52 c0       	rjmp	.+164    	; 0x57e <_ZN3Pin12setze_StatusEb+0xf6>
				
				case 1:	if (Status == true)
				{ PORTB |= (1<< PINB1);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB1);
 4da:	29 98       	cbi	0x05, 1	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 4dc:	13 96       	adiw	r26, 0x03	; 3
 4de:	1c 92       	st	X, r1
 4e0:	13 97       	sbiw	r26, 0x03	; 3
 4e2:	4d c0       	rjmp	.+154    	; 0x57e <_ZN3Pin12setze_StatusEb+0xf6>
				else
				{PORTB &= ~(1<<PINB1);
					merke_status(false);}
				break;
				
				case 2:	if (Status == true)
 4e4:	99 23       	and	r25, r25
 4e6:	31 f0       	breq	.+12     	; 0x4f4 <_ZN3Pin12setze_StatusEb+0x6c>
				{ PORTB |= (1<< PINB2);
 4e8:	2a 9a       	sbi	0x05, 2	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 4ea:	81 e0       	ldi	r24, 0x01	; 1
 4ec:	13 96       	adiw	r26, 0x03	; 3
 4ee:	8c 93       	st	X, r24
 4f0:	13 97       	sbiw	r26, 0x03	; 3
 4f2:	45 c0       	rjmp	.+138    	; 0x57e <_ZN3Pin12setze_StatusEb+0xf6>
				
				case 2:	if (Status == true)
				{ PORTB |= (1<< PINB2);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB2);
 4f4:	2a 98       	cbi	0x05, 2	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 4f6:	13 96       	adiw	r26, 0x03	; 3
 4f8:	1c 92       	st	X, r1
 4fa:	13 97       	sbiw	r26, 0x03	; 3
 4fc:	40 c0       	rjmp	.+128    	; 0x57e <_ZN3Pin12setze_StatusEb+0xf6>
				else
				{PORTB &= ~(1<<PINB2);
					merke_status(false);}
				break;
				
				case 3:	if (Status == true)
 4fe:	99 23       	and	r25, r25
 500:	31 f0       	breq	.+12     	; 0x50e <_ZN3Pin12setze_StatusEb+0x86>
				{ PORTB |= (1<< PINB3);
 502:	2b 9a       	sbi	0x05, 3	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 504:	81 e0       	ldi	r24, 0x01	; 1
 506:	13 96       	adiw	r26, 0x03	; 3
 508:	8c 93       	st	X, r24
 50a:	13 97       	sbiw	r26, 0x03	; 3
 50c:	38 c0       	rjmp	.+112    	; 0x57e <_ZN3Pin12setze_StatusEb+0xf6>
				
				case 3:	if (Status == true)
				{ PORTB |= (1<< PINB3);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB3);
 50e:	2b 98       	cbi	0x05, 3	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 510:	13 96       	adiw	r26, 0x03	; 3
 512:	1c 92       	st	X, r1
 514:	13 97       	sbiw	r26, 0x03	; 3
 516:	33 c0       	rjmp	.+102    	; 0x57e <_ZN3Pin12setze_StatusEb+0xf6>
				else
				{PORTB &= ~(1<<PINB3);
					merke_status(false);}
				break;
				
				case 4:	if (Status == true)
 518:	99 23       	and	r25, r25
 51a:	31 f0       	breq	.+12     	; 0x528 <_ZN3Pin12setze_StatusEb+0xa0>
				{ PORTB |= (1<< PINB4);
 51c:	2c 9a       	sbi	0x05, 4	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 51e:	81 e0       	ldi	r24, 0x01	; 1
 520:	13 96       	adiw	r26, 0x03	; 3
 522:	8c 93       	st	X, r24
 524:	13 97       	sbiw	r26, 0x03	; 3
 526:	2b c0       	rjmp	.+86     	; 0x57e <_ZN3Pin12setze_StatusEb+0xf6>
				
				case 4:	if (Status == true)
				{ PORTB |= (1<< PINB4);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB4);
 528:	2c 98       	cbi	0x05, 4	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 52a:	13 96       	adiw	r26, 0x03	; 3
 52c:	1c 92       	st	X, r1
 52e:	13 97       	sbiw	r26, 0x03	; 3
 530:	26 c0       	rjmp	.+76     	; 0x57e <_ZN3Pin12setze_StatusEb+0xf6>
				else
				{PORTB &= ~(1<<PINB4);
					merke_status(false);}
				break;
				
				case 5:	if (Status == true)
 532:	99 23       	and	r25, r25
 534:	31 f0       	breq	.+12     	; 0x542 <_ZN3Pin12setze_StatusEb+0xba>
				{ PORTB |= (1<< PINB5);
 536:	2d 9a       	sbi	0x05, 5	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 538:	81 e0       	ldi	r24, 0x01	; 1
 53a:	13 96       	adiw	r26, 0x03	; 3
 53c:	8c 93       	st	X, r24
 53e:	13 97       	sbiw	r26, 0x03	; 3
 540:	1e c0       	rjmp	.+60     	; 0x57e <_ZN3Pin12setze_StatusEb+0xf6>
				
				case 5:	if (Status == true)
				{ PORTB |= (1<< PINB5);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB5);
 542:	2d 98       	cbi	0x05, 5	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 544:	13 96       	adiw	r26, 0x03	; 3
 546:	1c 92       	st	X, r1
 548:	13 97       	sbiw	r26, 0x03	; 3
 54a:	19 c0       	rjmp	.+50     	; 0x57e <_ZN3Pin12setze_StatusEb+0xf6>
				else
				{PORTB &= ~(1<<PINB5);
					merke_status(false);}
				break;
				
				case 6:	if (Status == true)
 54c:	99 23       	and	r25, r25
 54e:	31 f0       	breq	.+12     	; 0x55c <_ZN3Pin12setze_StatusEb+0xd4>
				{ PORTB |= (1<< PINB6);
 550:	2e 9a       	sbi	0x05, 6	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 552:	81 e0       	ldi	r24, 0x01	; 1
 554:	13 96       	adiw	r26, 0x03	; 3
 556:	8c 93       	st	X, r24
 558:	13 97       	sbiw	r26, 0x03	; 3
 55a:	11 c0       	rjmp	.+34     	; 0x57e <_ZN3Pin12setze_StatusEb+0xf6>
				
				case 6:	if (Status == true)
				{ PORTB |= (1<< PINB6);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB6);
 55c:	2e 98       	cbi	0x05, 6	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 55e:	13 96       	adiw	r26, 0x03	; 3
 560:	1c 92       	st	X, r1
 562:	13 97       	sbiw	r26, 0x03	; 3
 564:	0c c0       	rjmp	.+24     	; 0x57e <_ZN3Pin12setze_StatusEb+0xf6>
				else
				{PORTB &= ~(1<<PINB6);
					merke_status(false);}
				break;
				
				case 7:	if (Status == true)
 566:	99 23       	and	r25, r25
 568:	31 f0       	breq	.+12     	; 0x576 <_ZN3Pin12setze_StatusEb+0xee>
				{ PORTB |= (1<< PINB7);
 56a:	2f 9a       	sbi	0x05, 7	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 56c:	81 e0       	ldi	r24, 0x01	; 1
 56e:	13 96       	adiw	r26, 0x03	; 3
 570:	8c 93       	st	X, r24
 572:	13 97       	sbiw	r26, 0x03	; 3
 574:	04 c0       	rjmp	.+8      	; 0x57e <_ZN3Pin12setze_StatusEb+0xf6>
				
				case 7:	if (Status == true)
				{ PORTB |= (1<< PINB7);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB7);
 576:	2f 98       	cbi	0x05, 7	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 578:	13 96       	adiw	r26, 0x03	; 3
 57a:	1c 92       	st	X, r1
 57c:	13 97       	sbiw	r26, 0x03	; 3
				break;
				
			}
		}

		if (private_Port == 'C')
 57e:	8c 91       	ld	r24, X
 580:	83 34       	cpi	r24, 0x43	; 67
 582:	09 f0       	breq	.+2      	; 0x586 <_ZN3Pin12setze_StatusEb+0xfe>
 584:	68 c0       	rjmp	.+208    	; 0x656 <_ZN3Pin12setze_StatusEb+0x1ce>
		{
			switch(private_Nummer_Pin)
 586:	11 96       	adiw	r26, 0x01	; 1
 588:	ec 91       	ld	r30, X
 58a:	11 97       	sbiw	r26, 0x01	; 1
 58c:	4e 2f       	mov	r20, r30
 58e:	50 e0       	ldi	r21, 0x00	; 0
 590:	47 30       	cpi	r20, 0x07	; 7
 592:	51 05       	cpc	r21, r1
 594:	08 f0       	brcs	.+2      	; 0x598 <_ZN3Pin12setze_StatusEb+0x110>
 596:	5f c0       	rjmp	.+190    	; 0x656 <_ZN3Pin12setze_StatusEb+0x1ce>
 598:	fa 01       	movw	r30, r20
 59a:	ed 5a       	subi	r30, 0xAD	; 173
 59c:	ff 4f       	sbci	r31, 0xFF	; 255
 59e:	0c 94 95 03 	jmp	0x72a	; 0x72a <__tablejump2__>
			{
				case 0:	if (Status == true)
 5a2:	99 23       	and	r25, r25
 5a4:	31 f0       	breq	.+12     	; 0x5b2 <_ZN3Pin12setze_StatusEb+0x12a>
				{ PORTC |= (1<< PINC0);
 5a6:	40 9a       	sbi	0x08, 0	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 5a8:	81 e0       	ldi	r24, 0x01	; 1
 5aa:	13 96       	adiw	r26, 0x03	; 3
 5ac:	8c 93       	st	X, r24
 5ae:	13 97       	sbiw	r26, 0x03	; 3
 5b0:	52 c0       	rjmp	.+164    	; 0x656 <_ZN3Pin12setze_StatusEb+0x1ce>
			{
				case 0:	if (Status == true)
				{ PORTC |= (1<< PINC0);
					merke_status(true);}
				else
				{PORTC &= ~(1<<PINC0);
 5b2:	40 98       	cbi	0x08, 0	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 5b4:	13 96       	adiw	r26, 0x03	; 3
 5b6:	1c 92       	st	X, r1
 5b8:	13 97       	sbiw	r26, 0x03	; 3
 5ba:	4d c0       	rjmp	.+154    	; 0x656 <_ZN3Pin12setze_StatusEb+0x1ce>
				else
				{PORTC &= ~(1<<PINC0);
					merke_status(false);}
				break;
				
				case 1:	if (Status == true)
 5bc:	99 23       	and	r25, r25
 5be:	31 f0       	breq	.+12     	; 0x5cc <_ZN3Pin12setze_StatusEb+0x144>
				{ PORTC |= (1<< PINC1);
 5c0:	41 9a       	sbi	0x08, 1	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 5c2:	81 e0       	ldi	r24, 0x01	; 1
 5c4:	13 96       	adiw	r26, 0x03	; 3
 5c6:	8c 93       	st	X, r24
 5c8:	13 97       	sbiw	r26, 0x03	; 3
 5ca:	45 c0       	rjmp	.+138    	; 0x656 <_ZN3Pin12setze_StatusEb+0x1ce>
				
				case 1:	if (Status == true)
				{ PORTC |= (1<< PINC1);
					merke_status(true);}
				else
				{PORTC &= ~(1<<PINC1);
 5cc:	41 98       	cbi	0x08, 1	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 5ce:	13 96       	adiw	r26, 0x03	; 3
 5d0:	1c 92       	st	X, r1
 5d2:	13 97       	sbiw	r26, 0x03	; 3
 5d4:	40 c0       	rjmp	.+128    	; 0x656 <_ZN3Pin12setze_StatusEb+0x1ce>
				else
				{PORTC &= ~(1<<PINC1);
					merke_status(false);}
				break;
				
				case 2:	if (Status == true)
 5d6:	99 23       	and	r25, r25
 5d8:	31 f0       	breq	.+12     	; 0x5e6 <_ZN3Pin12setze_StatusEb+0x15e>
				{ PORTC |= (1<< PINC2);
 5da:	42 9a       	sbi	0x08, 2	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 5dc:	81 e0       	ldi	r24, 0x01	; 1
 5de:	13 96       	adiw	r26, 0x03	; 3
 5e0:	8c 93       	st	X, r24
 5e2:	13 97       	sbiw	r26, 0x03	; 3
 5e4:	38 c0       	rjmp	.+112    	; 0x656 <_ZN3Pin12setze_StatusEb+0x1ce>
				
				case 2:	if (Status == true)
				{ PORTC |= (1<< PINC2);
					merke_status(true);}
				else
				{PORTC &= ~(1<<PINC2);
 5e6:	42 98       	cbi	0x08, 2	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 5e8:	13 96       	adiw	r26, 0x03	; 3
 5ea:	1c 92       	st	X, r1
 5ec:	13 97       	sbiw	r26, 0x03	; 3
 5ee:	33 c0       	rjmp	.+102    	; 0x656 <_ZN3Pin12setze_StatusEb+0x1ce>
				else
				{PORTC &= ~(1<<PINC2);
					merke_status(false);}
				break;
				
				case 3:	if (Status == true)
 5f0:	99 23       	and	r25, r25
 5f2:	31 f0       	breq	.+12     	; 0x600 <_ZN3Pin12setze_StatusEb+0x178>
				{ PORTC |= (1<< PINC3);
 5f4:	43 9a       	sbi	0x08, 3	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 5f6:	81 e0       	ldi	r24, 0x01	; 1
 5f8:	13 96       	adiw	r26, 0x03	; 3
 5fa:	8c 93       	st	X, r24
 5fc:	13 97       	sbiw	r26, 0x03	; 3
 5fe:	2b c0       	rjmp	.+86     	; 0x656 <_ZN3Pin12setze_StatusEb+0x1ce>
				
				case 3:	if (Status == true)
				{ PORTC |= (1<< PINC3);
					merke_status(true);}
				else
				{PORTC &= ~(1<<PINC3);
 600:	43 98       	cbi	0x08, 3	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 602:	13 96       	adiw	r26, 0x03	; 3
 604:	1c 92       	st	X, r1
 606:	13 97       	sbiw	r26, 0x03	; 3
 608:	26 c0       	rjmp	.+76     	; 0x656 <_ZN3Pin12setze_StatusEb+0x1ce>
				else
				{PORTC &= ~(1<<PINC3);
					merke_status(false);}
				break;
				
				case 4:	if (Status == true)
 60a:	99 23       	and	r25, r25
 60c:	31 f0       	breq	.+12     	; 0x61a <_ZN3Pin12setze_StatusEb+0x192>
				{ PORTC |= (1<< PINC4);
 60e:	44 9a       	sbi	0x08, 4	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 610:	81 e0       	ldi	r24, 0x01	; 1
 612:	13 96       	adiw	r26, 0x03	; 3
 614:	8c 93       	st	X, r24
 616:	13 97       	sbiw	r26, 0x03	; 3
 618:	1e c0       	rjmp	.+60     	; 0x656 <_ZN3Pin12setze_StatusEb+0x1ce>
				
				case 4:	if (Status == true)
				{ PORTC |= (1<< PINC4);
					merke_status(true);}
				else
				{PORTC &= ~(1<<PINC4);
 61a:	44 98       	cbi	0x08, 4	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 61c:	13 96       	adiw	r26, 0x03	; 3
 61e:	1c 92       	st	X, r1
 620:	13 97       	sbiw	r26, 0x03	; 3
 622:	19 c0       	rjmp	.+50     	; 0x656 <_ZN3Pin12setze_StatusEb+0x1ce>
				else
				{PORTC &= ~(1<<PINC4);
					merke_status(false);}
				break;
				
				case 5:	if (Status == true)
 624:	99 23       	and	r25, r25
 626:	31 f0       	breq	.+12     	; 0x634 <_ZN3Pin12setze_StatusEb+0x1ac>
				{ PORTC |= (1<< PINC5);
 628:	45 9a       	sbi	0x08, 5	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 62a:	81 e0       	ldi	r24, 0x01	; 1
 62c:	13 96       	adiw	r26, 0x03	; 3
 62e:	8c 93       	st	X, r24
 630:	13 97       	sbiw	r26, 0x03	; 3
 632:	11 c0       	rjmp	.+34     	; 0x656 <_ZN3Pin12setze_StatusEb+0x1ce>
				
				case 5:	if (Status == true)
				{ PORTC |= (1<< PINC5);
					merke_status(true);}
				else
				{PORTC &= ~(1<<PINC5);
 634:	45 98       	cbi	0x08, 5	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 636:	13 96       	adiw	r26, 0x03	; 3
 638:	1c 92       	st	X, r1
 63a:	13 97       	sbiw	r26, 0x03	; 3
 63c:	0c c0       	rjmp	.+24     	; 0x656 <_ZN3Pin12setze_StatusEb+0x1ce>
				else
				{PORTC &= ~(1<<PINC5);
					merke_status(false);}
				break;
				
				case 6:	if (Status == true)
 63e:	99 23       	and	r25, r25
 640:	31 f0       	breq	.+12     	; 0x64e <_ZN3Pin12setze_StatusEb+0x1c6>
				{ PORTC |= (1<< PINC6);
 642:	46 9a       	sbi	0x08, 6	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 644:	81 e0       	ldi	r24, 0x01	; 1
 646:	13 96       	adiw	r26, 0x03	; 3
 648:	8c 93       	st	X, r24
 64a:	13 97       	sbiw	r26, 0x03	; 3
 64c:	04 c0       	rjmp	.+8      	; 0x656 <_ZN3Pin12setze_StatusEb+0x1ce>
				
				case 6:	if (Status == true)
				{ PORTC |= (1<< PINC6);
					merke_status(true);}
				else
				{PORTC &= ~(1<<PINC6);
 64e:	46 98       	cbi	0x08, 6	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 650:	13 96       	adiw	r26, 0x03	; 3
 652:	1c 92       	st	X, r1
 654:	13 97       	sbiw	r26, 0x03	; 3
				default: //# warning "The choosen pin number is not valid. Only 0-6 are allowed on Port C"
				break;
							}
		}
		
		if (private_Port == 'D')
 656:	8c 91       	ld	r24, X
 658:	84 34       	cpi	r24, 0x44	; 68
 65a:	09 f0       	breq	.+2      	; 0x65e <_ZN3Pin12setze_StatusEb+0x1d6>
 65c:	65 c0       	rjmp	.+202    	; 0x728 <_ZN3Pin12setze_StatusEb+0x2a0>
		{
			switch(private_Nummer_Pin)
 65e:	11 96       	adiw	r26, 0x01	; 1
 660:	ec 91       	ld	r30, X
 662:	11 97       	sbiw	r26, 0x01	; 1
 664:	4e 2f       	mov	r20, r30
 666:	50 e0       	ldi	r21, 0x00	; 0
 668:	48 30       	cpi	r20, 0x08	; 8
 66a:	51 05       	cpc	r21, r1
 66c:	08 f0       	brcs	.+2      	; 0x670 <_ZN3Pin12setze_StatusEb+0x1e8>
 66e:	5c c0       	rjmp	.+184    	; 0x728 <_ZN3Pin12setze_StatusEb+0x2a0>
 670:	fa 01       	movw	r30, r20
 672:	e6 5a       	subi	r30, 0xA6	; 166
 674:	ff 4f       	sbci	r31, 0xFF	; 255
 676:	0c 94 95 03 	jmp	0x72a	; 0x72a <__tablejump2__>
			{
				case 0:	if (Status == true)
 67a:	99 23       	and	r25, r25
 67c:	29 f0       	breq	.+10     	; 0x688 <_ZN3Pin12setze_StatusEb+0x200>
				{ PORTD |= (1<< PIND0);
 67e:	58 9a       	sbi	0x0b, 0	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 680:	81 e0       	ldi	r24, 0x01	; 1
 682:	13 96       	adiw	r26, 0x03	; 3
 684:	8c 93       	st	X, r24
 686:	08 95       	ret
			{
				case 0:	if (Status == true)
				{ PORTD |= (1<< PIND0);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND0);
 688:	58 98       	cbi	0x0b, 0	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 68a:	13 96       	adiw	r26, 0x03	; 3
 68c:	1c 92       	st	X, r1
 68e:	08 95       	ret
				else
				{PORTD &= ~(1<<PIND0);
					merke_status(false);}
				break;
				
				case 1:	if (Status == true)
 690:	99 23       	and	r25, r25
 692:	29 f0       	breq	.+10     	; 0x69e <_ZN3Pin12setze_StatusEb+0x216>
				{ PORTD |= (1<< PIND1);
 694:	59 9a       	sbi	0x0b, 1	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 696:	81 e0       	ldi	r24, 0x01	; 1
 698:	13 96       	adiw	r26, 0x03	; 3
 69a:	8c 93       	st	X, r24
 69c:	08 95       	ret
				
				case 1:	if (Status == true)
				{ PORTD |= (1<< PIND1);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND1);
 69e:	59 98       	cbi	0x0b, 1	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 6a0:	13 96       	adiw	r26, 0x03	; 3
 6a2:	1c 92       	st	X, r1
 6a4:	08 95       	ret
				else
				{PORTD &= ~(1<<PIND1);
					merke_status(false);}
				break;
				
				case 2:	if (Status == true)
 6a6:	99 23       	and	r25, r25
 6a8:	29 f0       	breq	.+10     	; 0x6b4 <_ZN3Pin12setze_StatusEb+0x22c>
				{ PORTD |= (1<< PIND2);
 6aa:	5a 9a       	sbi	0x0b, 2	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 6ac:	81 e0       	ldi	r24, 0x01	; 1
 6ae:	13 96       	adiw	r26, 0x03	; 3
 6b0:	8c 93       	st	X, r24
 6b2:	08 95       	ret
				
				case 2:	if (Status == true)
				{ PORTD |= (1<< PIND2);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND2);
 6b4:	5a 98       	cbi	0x0b, 2	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 6b6:	13 96       	adiw	r26, 0x03	; 3
 6b8:	1c 92       	st	X, r1
 6ba:	08 95       	ret
				else
				{PORTD &= ~(1<<PIND2);
					merke_status(false);}
				break;
				
				case 3:	if (Status == true)
 6bc:	99 23       	and	r25, r25
 6be:	29 f0       	breq	.+10     	; 0x6ca <_ZN3Pin12setze_StatusEb+0x242>
				{ PORTD |= (1<< PIND3);
 6c0:	5b 9a       	sbi	0x0b, 3	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 6c2:	81 e0       	ldi	r24, 0x01	; 1
 6c4:	13 96       	adiw	r26, 0x03	; 3
 6c6:	8c 93       	st	X, r24
 6c8:	08 95       	ret
				
				case 3:	if (Status == true)
				{ PORTD |= (1<< PIND3);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND3);
 6ca:	5b 98       	cbi	0x0b, 3	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 6cc:	13 96       	adiw	r26, 0x03	; 3
 6ce:	1c 92       	st	X, r1
 6d0:	08 95       	ret
				else
				{PORTD &= ~(1<<PIND3);
					merke_status(false);}
				break;
				
				case 4:	if (Status == true)
 6d2:	99 23       	and	r25, r25
 6d4:	29 f0       	breq	.+10     	; 0x6e0 <_ZN3Pin12setze_StatusEb+0x258>
				{ PORTD |= (1<< PIND4);
 6d6:	5c 9a       	sbi	0x0b, 4	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 6d8:	81 e0       	ldi	r24, 0x01	; 1
 6da:	13 96       	adiw	r26, 0x03	; 3
 6dc:	8c 93       	st	X, r24
 6de:	08 95       	ret
				
				case 4:	if (Status == true)
				{ PORTD |= (1<< PIND4);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND4);
 6e0:	5c 98       	cbi	0x0b, 4	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 6e2:	13 96       	adiw	r26, 0x03	; 3
 6e4:	1c 92       	st	X, r1
 6e6:	08 95       	ret
				else
				{PORTD &= ~(1<<PIND4);
					merke_status(false);}
				break;
				
				case 5:	if (Status == true)
 6e8:	99 23       	and	r25, r25
 6ea:	29 f0       	breq	.+10     	; 0x6f6 <_ZN3Pin12setze_StatusEb+0x26e>
				{ PORTD |= (1<< PIND5);
 6ec:	5d 9a       	sbi	0x0b, 5	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 6ee:	81 e0       	ldi	r24, 0x01	; 1
 6f0:	13 96       	adiw	r26, 0x03	; 3
 6f2:	8c 93       	st	X, r24
 6f4:	08 95       	ret
				
				case 5:	if (Status == true)
				{ PORTD |= (1<< PIND5);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND5);
 6f6:	5d 98       	cbi	0x0b, 5	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 6f8:	13 96       	adiw	r26, 0x03	; 3
 6fa:	1c 92       	st	X, r1
 6fc:	08 95       	ret
				else
				{PORTD &= ~(1<<PIND5);
					merke_status(false);}
				break;
				
				case 6:	if (Status == true)
 6fe:	99 23       	and	r25, r25
 700:	29 f0       	breq	.+10     	; 0x70c <_ZN3Pin12setze_StatusEb+0x284>
				{ PORTD |= (1<< PIND6);
 702:	5e 9a       	sbi	0x0b, 6	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 704:	81 e0       	ldi	r24, 0x01	; 1
 706:	13 96       	adiw	r26, 0x03	; 3
 708:	8c 93       	st	X, r24
 70a:	08 95       	ret
				
				case 6:	if (Status == true)
				{ PORTD |= (1<< PIND6);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND6);
 70c:	5e 98       	cbi	0x0b, 6	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 70e:	13 96       	adiw	r26, 0x03	; 3
 710:	1c 92       	st	X, r1
 712:	08 95       	ret
				else
				{PORTD &= ~(1<<PIND6);
					merke_status(false);}
				break;
				
				case 7:	if (Status == true)
 714:	99 23       	and	r25, r25
 716:	29 f0       	breq	.+10     	; 0x722 <_ZN3Pin12setze_StatusEb+0x29a>
				{ PORTD |= (1<< PIND7);
 718:	5f 9a       	sbi	0x0b, 7	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 71a:	81 e0       	ldi	r24, 0x01	; 1
 71c:	13 96       	adiw	r26, 0x03	; 3
 71e:	8c 93       	st	X, r24
 720:	08 95       	ret
				
				case 7:	if (Status == true)
				{ PORTD |= (1<< PIND7);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND7);
 722:	5f 98       	cbi	0x0b, 7	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 724:	13 96       	adiw	r26, 0x03	; 3
 726:	1c 92       	st	X, r1
 728:	08 95       	ret

0000072a <__tablejump2__>:
 72a:	ee 0f       	add	r30, r30
 72c:	ff 1f       	adc	r31, r31
 72e:	05 90       	lpm	r0, Z+
 730:	f4 91       	lpm	r31, Z
 732:	e0 2d       	mov	r30, r0
 734:	09 94       	ijmp

00000736 <_exit>:
 736:	f8 94       	cli

00000738 <__stop_program>:
 738:	ff cf       	rjmp	.-2      	; 0x738 <__stop_program>
