
Blumenbewaesserung.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000640  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005ec  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000640  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000670  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000098  00000000  00000000  000006b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000016a4  00000000  00000000  00000748  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008fa  00000000  00000000  00001dec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000935  00000000  00000000  000026e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000108  00000000  00000000  0000301c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000659  00000000  00000000  00003124  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a8e  00000000  00000000  0000377d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  0000420b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__ctors_end>
   4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  10:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  14:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  18:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  1c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  20:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  24:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  28:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  2c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  30:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  34:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  38:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  3c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  40:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  44:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  48:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  4c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  50:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  54:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  58:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  5c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  60:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  64:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  68:	a1 00       	.word	0x00a1	; ????
  6a:	aa 00       	.word	0x00aa	; ????
  6c:	b3 00       	.word	0x00b3	; ????
  6e:	bc 00       	.word	0x00bc	; ????
  70:	c5 00       	.word	0x00c5	; ????
  72:	ce 00       	.word	0x00ce	; ????
  74:	d7 00       	.word	0x00d7	; ????
  76:	e0 00       	.word	0x00e0	; ????
  78:	fa 00       	.word	0x00fa	; ????
  7a:	03 01       	movw	r0, r6
  7c:	0c 01       	movw	r0, r24
  7e:	15 01       	movw	r2, r10
  80:	1e 01       	movw	r2, r28
  82:	27 01       	movw	r4, r14
  84:	30 01       	movw	r6, r0
  86:	4a 01       	movw	r8, r20
  88:	52 01       	movw	r10, r4
  8a:	5a 01       	movw	r10, r20
  8c:	62 01       	movw	r12, r4
  8e:	6a 01       	movw	r12, r20
  90:	72 01       	movw	r14, r4
  92:	7a 01       	movw	r14, r20
  94:	82 01       	movw	r16, r4
  96:	a5 01       	movw	r20, r10
  98:	b2 01       	movw	r22, r4
  9a:	bf 01       	movw	r22, r30
  9c:	cc 01       	movw	r24, r24
  9e:	d9 01       	movw	r26, r18
  a0:	e6 01       	movw	r28, r12
  a2:	f3 01       	movw	r30, r6
  a4:	00 02       	muls	r16, r16
  a6:	1e 02       	muls	r17, r30
  a8:	2b 02       	muls	r18, r27
  aa:	38 02       	muls	r19, r24
  ac:	45 02       	muls	r20, r21
  ae:	52 02       	muls	r21, r18
  b0:	5f 02       	muls	r21, r31
  b2:	6c 02       	muls	r22, r28
  b4:	8a 02       	muls	r24, r26
  b6:	95 02       	muls	r25, r21
  b8:	a0 02       	muls	r26, r16
  ba:	ab 02       	muls	r26, r27
  bc:	b6 02       	muls	r27, r22
  be:	c1 02       	muls	r28, r17
  c0:	cc 02       	muls	r28, r28
  c2:	d7 02       	muls	r29, r23

000000c4 <__ctors_end>:
  c4:	11 24       	eor	r1, r1
  c6:	1f be       	out	0x3f, r1	; 63
  c8:	cf ef       	ldi	r28, 0xFF	; 255
  ca:	d8 e0       	ldi	r29, 0x08	; 8
  cc:	de bf       	out	0x3e, r29	; 62
  ce:	cd bf       	out	0x3d, r28	; 61
  d0:	0e 94 6e 00 	call	0xdc	; 0xdc <main>
  d4:	0c 94 f4 02 	jmp	0x5e8	; 0x5e8 <_exit>

000000d8 <__bad_interrupt>:
  d8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000dc <main>:




int main(void)
{
  dc:	cf 93       	push	r28
  de:	df 93       	push	r29
  e0:	00 d0       	rcall	.+0      	; 0xe2 <main+0x6>
  e2:	00 d0       	rcall	.+0      	; 0xe4 <main+0x8>
  e4:	cd b7       	in	r28, 0x3d	; 61
  e6:	de b7       	in	r29, 0x3e	; 62
	Pin BuildInLed('C', 5, true);
  e8:	21 e0       	ldi	r18, 0x01	; 1
  ea:	45 e0       	ldi	r20, 0x05	; 5
  ec:	63 e4       	ldi	r22, 0x43	; 67
  ee:	ce 01       	movw	r24, r28
  f0:	01 96       	adiw	r24, 0x01	; 1
  f2:	0e 94 8a 01 	call	0x314	; 0x314 <_ZN3PinC1Echb>
	
    /* Replace with your application code */
	BuildInLed.setze_Status(true);
  f6:	61 e0       	ldi	r22, 0x01	; 1
  f8:	ce 01       	movw	r24, r28
  fa:	01 96       	adiw	r24, 0x01	; 1
  fc:	0e 94 91 01 	call	0x322	; 0x322 <_ZN3Pin12setze_StatusEb>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 100:	2f ef       	ldi	r18, 0xFF	; 255
 102:	83 ed       	ldi	r24, 0xD3	; 211
 104:	90 e3       	ldi	r25, 0x30	; 48
 106:	21 50       	subi	r18, 0x01	; 1
 108:	80 40       	sbci	r24, 0x00	; 0
 10a:	90 40       	sbci	r25, 0x00	; 0
 10c:	e1 f7       	brne	.-8      	; 0x106 <main+0x2a>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <main+0x34>
 110:	00 00       	nop
    while (1) 
    {
		_delay_ms(1000);
		BuildInLed.toggle_Pin();
 112:	ce 01       	movw	r24, r28
 114:	01 96       	adiw	r24, 0x01	; 1
 116:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <_ZN3Pin10toggle_PinEv>
 11a:	f2 cf       	rjmp	.-28     	; 0x100 <main+0x24>

0000011c <_ZN3Pin16initialisierePinEv>:
{
	private_Eingang = is_Eingang;
}

void Pin::initialisierePin()
{
 11c:	dc 01       	movw	r26, r24
	if (private_Port == 'A')
	{
		
	}

	if (private_Port == 'B')
 11e:	8c 91       	ld	r24, X
 120:	82 34       	cpi	r24, 0x42	; 66
 122:	09 f0       	breq	.+2      	; 0x126 <_ZN3Pin16initialisierePinEv+0xa>
 124:	55 c0       	rjmp	.+170    	; 0x1d0 <_ZN3Pin16initialisierePinEv+0xb4>
	{
		switch(private_Nummer_Pin)
 126:	11 96       	adiw	r26, 0x01	; 1
 128:	ec 91       	ld	r30, X
 12a:	11 97       	sbiw	r26, 0x01	; 1
 12c:	4e 2f       	mov	r20, r30
 12e:	50 e0       	ldi	r21, 0x00	; 0
 130:	48 30       	cpi	r20, 0x08	; 8
 132:	51 05       	cpc	r21, r1
 134:	08 f0       	brcs	.+2      	; 0x138 <_ZN3Pin16initialisierePinEv+0x1c>
 136:	4c c0       	rjmp	.+152    	; 0x1d0 <_ZN3Pin16initialisierePinEv+0xb4>
 138:	fa 01       	movw	r30, r20
 13a:	ec 5c       	subi	r30, 0xCC	; 204
 13c:	ff 4f       	sbci	r31, 0xFF	; 255
 13e:	0c 94 ee 02 	jmp	0x5dc	; 0x5dc <__tablejump2__>
		{
			case 0:	if (private_Eingang == true)
 142:	12 96       	adiw	r26, 0x02	; 2
 144:	8c 91       	ld	r24, X
 146:	12 97       	sbiw	r26, 0x02	; 2
 148:	88 23       	and	r24, r24
 14a:	11 f0       	breq	.+4      	; 0x150 <_ZN3Pin16initialisierePinEv+0x34>
			{DDRB &= ~(1 << DDB0);}
 14c:	20 98       	cbi	0x04, 0	; 4
 14e:	40 c0       	rjmp	.+128    	; 0x1d0 <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB0);}
 150:	20 9a       	sbi	0x04, 0	; 4
 152:	3e c0       	rjmp	.+124    	; 0x1d0 <_ZN3Pin16initialisierePinEv+0xb4>
			break;
			
			case 1:	if (private_Eingang == true)
 154:	12 96       	adiw	r26, 0x02	; 2
 156:	8c 91       	ld	r24, X
 158:	12 97       	sbiw	r26, 0x02	; 2
 15a:	88 23       	and	r24, r24
 15c:	11 f0       	breq	.+4      	; 0x162 <_ZN3Pin16initialisierePinEv+0x46>
			{DDRB &= ~(1 << DDB1);}
 15e:	21 98       	cbi	0x04, 1	; 4
 160:	37 c0       	rjmp	.+110    	; 0x1d0 <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB1);}
 162:	21 9a       	sbi	0x04, 1	; 4
 164:	35 c0       	rjmp	.+106    	; 0x1d0 <_ZN3Pin16initialisierePinEv+0xb4>
			break;
			
			case 2:	if (private_Eingang == true)
 166:	12 96       	adiw	r26, 0x02	; 2
 168:	8c 91       	ld	r24, X
 16a:	12 97       	sbiw	r26, 0x02	; 2
 16c:	88 23       	and	r24, r24
 16e:	11 f0       	breq	.+4      	; 0x174 <_ZN3Pin16initialisierePinEv+0x58>
			{DDRB &= ~(1 << DDB2);}
 170:	22 98       	cbi	0x04, 2	; 4
 172:	2e c0       	rjmp	.+92     	; 0x1d0 <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB2);}
 174:	22 9a       	sbi	0x04, 2	; 4
 176:	2c c0       	rjmp	.+88     	; 0x1d0 <_ZN3Pin16initialisierePinEv+0xb4>
			break;
			
			case 3:	if (private_Eingang == true)
 178:	12 96       	adiw	r26, 0x02	; 2
 17a:	8c 91       	ld	r24, X
 17c:	12 97       	sbiw	r26, 0x02	; 2
 17e:	88 23       	and	r24, r24
 180:	11 f0       	breq	.+4      	; 0x186 <_ZN3Pin16initialisierePinEv+0x6a>
			{DDRB &= ~(1 << DDB3);}
 182:	23 98       	cbi	0x04, 3	; 4
 184:	25 c0       	rjmp	.+74     	; 0x1d0 <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB3);}
 186:	23 9a       	sbi	0x04, 3	; 4
 188:	23 c0       	rjmp	.+70     	; 0x1d0 <_ZN3Pin16initialisierePinEv+0xb4>
			break;
			
			case 4:	if (private_Eingang == true)
 18a:	12 96       	adiw	r26, 0x02	; 2
 18c:	8c 91       	ld	r24, X
 18e:	12 97       	sbiw	r26, 0x02	; 2
 190:	88 23       	and	r24, r24
 192:	11 f0       	breq	.+4      	; 0x198 <_ZN3Pin16initialisierePinEv+0x7c>
			{DDRB &= ~(1 << DDB4);}
 194:	24 98       	cbi	0x04, 4	; 4
 196:	1c c0       	rjmp	.+56     	; 0x1d0 <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB4);}
 198:	24 9a       	sbi	0x04, 4	; 4
 19a:	1a c0       	rjmp	.+52     	; 0x1d0 <_ZN3Pin16initialisierePinEv+0xb4>
			break;
			
			case 5:	if (private_Eingang == true)
 19c:	12 96       	adiw	r26, 0x02	; 2
 19e:	8c 91       	ld	r24, X
 1a0:	12 97       	sbiw	r26, 0x02	; 2
 1a2:	88 23       	and	r24, r24
 1a4:	11 f0       	breq	.+4      	; 0x1aa <_ZN3Pin16initialisierePinEv+0x8e>
			{DDRB &= ~(1 << DDB5);}
 1a6:	25 98       	cbi	0x04, 5	; 4
 1a8:	13 c0       	rjmp	.+38     	; 0x1d0 <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB5);}
 1aa:	25 9a       	sbi	0x04, 5	; 4
 1ac:	11 c0       	rjmp	.+34     	; 0x1d0 <_ZN3Pin16initialisierePinEv+0xb4>
			break;
			
			case 6:	if (private_Eingang == true)
 1ae:	12 96       	adiw	r26, 0x02	; 2
 1b0:	8c 91       	ld	r24, X
 1b2:	12 97       	sbiw	r26, 0x02	; 2
 1b4:	88 23       	and	r24, r24
 1b6:	11 f0       	breq	.+4      	; 0x1bc <_ZN3Pin16initialisierePinEv+0xa0>
			{DDRB &= ~(1 << DDB6);}
 1b8:	26 98       	cbi	0x04, 6	; 4
 1ba:	0a c0       	rjmp	.+20     	; 0x1d0 <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB6);}
 1bc:	26 9a       	sbi	0x04, 6	; 4
 1be:	08 c0       	rjmp	.+16     	; 0x1d0 <_ZN3Pin16initialisierePinEv+0xb4>
			break;
			
			case 7:	if (private_Eingang == true)
 1c0:	12 96       	adiw	r26, 0x02	; 2
 1c2:	8c 91       	ld	r24, X
 1c4:	12 97       	sbiw	r26, 0x02	; 2
 1c6:	88 23       	and	r24, r24
 1c8:	11 f0       	breq	.+4      	; 0x1ce <_ZN3Pin16initialisierePinEv+0xb2>
			{DDRB &= ~(1 << DDB7);}
 1ca:	27 98       	cbi	0x04, 7	; 4
 1cc:	01 c0       	rjmp	.+2      	; 0x1d0 <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB7);}
 1ce:	27 9a       	sbi	0x04, 7	; 4
			break;
			
		}
	}

	if (private_Port == 'C')
 1d0:	8c 91       	ld	r24, X
 1d2:	83 34       	cpi	r24, 0x43	; 67
 1d4:	09 f0       	breq	.+2      	; 0x1d8 <_ZN3Pin16initialisierePinEv+0xbc>
 1d6:	4c c0       	rjmp	.+152    	; 0x270 <_ZN3Pin16initialisierePinEv+0x154>
	{
		switch(private_Nummer_Pin)
 1d8:	11 96       	adiw	r26, 0x01	; 1
 1da:	ec 91       	ld	r30, X
 1dc:	11 97       	sbiw	r26, 0x01	; 1
 1de:	4e 2f       	mov	r20, r30
 1e0:	50 e0       	ldi	r21, 0x00	; 0
 1e2:	47 30       	cpi	r20, 0x07	; 7
 1e4:	51 05       	cpc	r21, r1
 1e6:	08 f0       	brcs	.+2      	; 0x1ea <_ZN3Pin16initialisierePinEv+0xce>
 1e8:	43 c0       	rjmp	.+134    	; 0x270 <_ZN3Pin16initialisierePinEv+0x154>
 1ea:	fa 01       	movw	r30, r20
 1ec:	e4 5c       	subi	r30, 0xC4	; 196
 1ee:	ff 4f       	sbci	r31, 0xFF	; 255
 1f0:	0c 94 ee 02 	jmp	0x5dc	; 0x5dc <__tablejump2__>
		{
			case 0:	if (private_Eingang == true)
 1f4:	12 96       	adiw	r26, 0x02	; 2
 1f6:	8c 91       	ld	r24, X
 1f8:	12 97       	sbiw	r26, 0x02	; 2
 1fa:	88 23       	and	r24, r24
 1fc:	11 f0       	breq	.+4      	; 0x202 <_ZN3Pin16initialisierePinEv+0xe6>
			{DDRC &= ~(1 << DDC0);}
 1fe:	38 98       	cbi	0x07, 0	; 7
 200:	37 c0       	rjmp	.+110    	; 0x270 <_ZN3Pin16initialisierePinEv+0x154>
			else
			{DDRC |= (1 << DDC0);}
 202:	38 9a       	sbi	0x07, 0	; 7
 204:	35 c0       	rjmp	.+106    	; 0x270 <_ZN3Pin16initialisierePinEv+0x154>
			break;
			
			case 1:	if (private_Eingang == true)
 206:	12 96       	adiw	r26, 0x02	; 2
 208:	8c 91       	ld	r24, X
 20a:	12 97       	sbiw	r26, 0x02	; 2
 20c:	88 23       	and	r24, r24
 20e:	11 f0       	breq	.+4      	; 0x214 <_ZN3Pin16initialisierePinEv+0xf8>
			{DDRC &= ~(1 << DDC1);}
 210:	39 98       	cbi	0x07, 1	; 7
 212:	2e c0       	rjmp	.+92     	; 0x270 <_ZN3Pin16initialisierePinEv+0x154>
			else
			{DDRC |= (1 << DDC1);}
 214:	39 9a       	sbi	0x07, 1	; 7
 216:	2c c0       	rjmp	.+88     	; 0x270 <_ZN3Pin16initialisierePinEv+0x154>
			break;
			
			case 2:	if (private_Eingang == true)
 218:	12 96       	adiw	r26, 0x02	; 2
 21a:	8c 91       	ld	r24, X
 21c:	12 97       	sbiw	r26, 0x02	; 2
 21e:	88 23       	and	r24, r24
 220:	11 f0       	breq	.+4      	; 0x226 <_ZN3Pin16initialisierePinEv+0x10a>
			{DDRC &= ~(1 << DDC2);}
 222:	3a 98       	cbi	0x07, 2	; 7
 224:	25 c0       	rjmp	.+74     	; 0x270 <_ZN3Pin16initialisierePinEv+0x154>
			else
			{DDRC |= (1 << DDC2);}
 226:	3a 9a       	sbi	0x07, 2	; 7
 228:	23 c0       	rjmp	.+70     	; 0x270 <_ZN3Pin16initialisierePinEv+0x154>
			break;
			
			case 3:	if (private_Eingang == true)
 22a:	12 96       	adiw	r26, 0x02	; 2
 22c:	8c 91       	ld	r24, X
 22e:	12 97       	sbiw	r26, 0x02	; 2
 230:	88 23       	and	r24, r24
 232:	11 f0       	breq	.+4      	; 0x238 <_ZN3Pin16initialisierePinEv+0x11c>
			{DDRC &= ~(1 << DDC3);}
 234:	3b 98       	cbi	0x07, 3	; 7
 236:	1c c0       	rjmp	.+56     	; 0x270 <_ZN3Pin16initialisierePinEv+0x154>
			else
			{DDRC |= (1 << DDC3);}
 238:	3b 9a       	sbi	0x07, 3	; 7
 23a:	1a c0       	rjmp	.+52     	; 0x270 <_ZN3Pin16initialisierePinEv+0x154>
			break;
			
			case 4:	if (private_Eingang == true)
 23c:	12 96       	adiw	r26, 0x02	; 2
 23e:	8c 91       	ld	r24, X
 240:	12 97       	sbiw	r26, 0x02	; 2
 242:	88 23       	and	r24, r24
 244:	11 f0       	breq	.+4      	; 0x24a <_ZN3Pin16initialisierePinEv+0x12e>
			{DDRC &= ~(1 << DDC4);}
 246:	3c 98       	cbi	0x07, 4	; 7
 248:	13 c0       	rjmp	.+38     	; 0x270 <_ZN3Pin16initialisierePinEv+0x154>
			else
			{DDRC |= (1 << DDC4);}
 24a:	3c 9a       	sbi	0x07, 4	; 7
 24c:	11 c0       	rjmp	.+34     	; 0x270 <_ZN3Pin16initialisierePinEv+0x154>
			break;
			
			case 5:	if (private_Eingang == true)
 24e:	12 96       	adiw	r26, 0x02	; 2
 250:	8c 91       	ld	r24, X
 252:	12 97       	sbiw	r26, 0x02	; 2
 254:	88 23       	and	r24, r24
 256:	11 f0       	breq	.+4      	; 0x25c <_ZN3Pin16initialisierePinEv+0x140>
			{DDRC &= ~(1 << DDC5);}
 258:	3d 98       	cbi	0x07, 5	; 7
 25a:	0a c0       	rjmp	.+20     	; 0x270 <_ZN3Pin16initialisierePinEv+0x154>
			else
			{DDRC |= (1 << DDC5);}
 25c:	3d 9a       	sbi	0x07, 5	; 7
 25e:	08 c0       	rjmp	.+16     	; 0x270 <_ZN3Pin16initialisierePinEv+0x154>
			break;
			
			case 6:	if (private_Eingang == true)
 260:	12 96       	adiw	r26, 0x02	; 2
 262:	8c 91       	ld	r24, X
 264:	12 97       	sbiw	r26, 0x02	; 2
 266:	88 23       	and	r24, r24
 268:	11 f0       	breq	.+4      	; 0x26e <_ZN3Pin16initialisierePinEv+0x152>
			{DDRC &= ~(1 << DDC6);}
 26a:	3e 98       	cbi	0x07, 6	; 7
 26c:	01 c0       	rjmp	.+2      	; 0x270 <_ZN3Pin16initialisierePinEv+0x154>
			else
			{DDRC |= (1 << DDC6);}
 26e:	3e 9a       	sbi	0x07, 6	; 7
			break;
			
		}
	}
	
	if (private_Port == 'D')
 270:	8c 91       	ld	r24, X
 272:	84 34       	cpi	r24, 0x44	; 68
 274:	09 f0       	breq	.+2      	; 0x278 <_ZN3Pin16initialisierePinEv+0x15c>
 276:	4d c0       	rjmp	.+154    	; 0x312 <_ZN3Pin16initialisierePinEv+0x1f6>
	{
		switch(private_Nummer_Pin)
 278:	11 96       	adiw	r26, 0x01	; 1
 27a:	ec 91       	ld	r30, X
 27c:	11 97       	sbiw	r26, 0x01	; 1
 27e:	4e 2f       	mov	r20, r30
 280:	50 e0       	ldi	r21, 0x00	; 0
 282:	48 30       	cpi	r20, 0x08	; 8
 284:	51 05       	cpc	r21, r1
 286:	08 f0       	brcs	.+2      	; 0x28a <_ZN3Pin16initialisierePinEv+0x16e>
 288:	44 c0       	rjmp	.+136    	; 0x312 <_ZN3Pin16initialisierePinEv+0x1f6>
 28a:	fa 01       	movw	r30, r20
 28c:	ed 5b       	subi	r30, 0xBD	; 189
 28e:	ff 4f       	sbci	r31, 0xFF	; 255
 290:	0c 94 ee 02 	jmp	0x5dc	; 0x5dc <__tablejump2__>
		{
			case 0:	if (private_Eingang == true)
 294:	12 96       	adiw	r26, 0x02	; 2
 296:	8c 91       	ld	r24, X
 298:	88 23       	and	r24, r24
 29a:	11 f0       	breq	.+4      	; 0x2a0 <_ZN3Pin16initialisierePinEv+0x184>
			{DDRD &= ~(1 << DDD0);}
 29c:	50 98       	cbi	0x0a, 0	; 10
 29e:	08 95       	ret
			else
			{DDRD |= (1 << DDD0);}
 2a0:	50 9a       	sbi	0x0a, 0	; 10
 2a2:	08 95       	ret
			break;
			
			case 1:	if (private_Eingang == true)
 2a4:	12 96       	adiw	r26, 0x02	; 2
 2a6:	8c 91       	ld	r24, X
 2a8:	88 23       	and	r24, r24
 2aa:	11 f0       	breq	.+4      	; 0x2b0 <_ZN3Pin16initialisierePinEv+0x194>
			{DDRD &= ~(1 << DDD1);}
 2ac:	51 98       	cbi	0x0a, 1	; 10
 2ae:	08 95       	ret
			else
			{DDRD |= (1 << DDD1);}
 2b0:	51 9a       	sbi	0x0a, 1	; 10
 2b2:	08 95       	ret
			break;
			
			case 2:	if (private_Eingang == true)
 2b4:	12 96       	adiw	r26, 0x02	; 2
 2b6:	8c 91       	ld	r24, X
 2b8:	88 23       	and	r24, r24
 2ba:	11 f0       	breq	.+4      	; 0x2c0 <_ZN3Pin16initialisierePinEv+0x1a4>
			{DDRD &= ~(1 << DDD2);}
 2bc:	52 98       	cbi	0x0a, 2	; 10
 2be:	08 95       	ret
			else
			{DDRD |= (1 << DDD2);}
 2c0:	52 9a       	sbi	0x0a, 2	; 10
 2c2:	08 95       	ret
			break;
			
			case 3:	if (private_Eingang == true)
 2c4:	12 96       	adiw	r26, 0x02	; 2
 2c6:	8c 91       	ld	r24, X
 2c8:	88 23       	and	r24, r24
 2ca:	11 f0       	breq	.+4      	; 0x2d0 <_ZN3Pin16initialisierePinEv+0x1b4>
			{DDRD &= ~(1 << DDD3);}
 2cc:	53 98       	cbi	0x0a, 3	; 10
 2ce:	08 95       	ret
			else
			{DDRD |= (1 << DDD3);}
 2d0:	53 9a       	sbi	0x0a, 3	; 10
 2d2:	08 95       	ret
			break;
			
			case 4:	if (private_Eingang == true)
 2d4:	12 96       	adiw	r26, 0x02	; 2
 2d6:	8c 91       	ld	r24, X
 2d8:	88 23       	and	r24, r24
 2da:	11 f0       	breq	.+4      	; 0x2e0 <_ZN3Pin16initialisierePinEv+0x1c4>
			{DDRD &= ~(1 << DDD4);}
 2dc:	54 98       	cbi	0x0a, 4	; 10
 2de:	08 95       	ret
			else
			{DDRD |= (1 << DDD4);}
 2e0:	54 9a       	sbi	0x0a, 4	; 10
 2e2:	08 95       	ret
			break;
			
			case 5:	if (private_Eingang == true)
 2e4:	12 96       	adiw	r26, 0x02	; 2
 2e6:	8c 91       	ld	r24, X
 2e8:	88 23       	and	r24, r24
 2ea:	11 f0       	breq	.+4      	; 0x2f0 <_ZN3Pin16initialisierePinEv+0x1d4>
			{DDRD &= ~(1 << DDD5);}
 2ec:	55 98       	cbi	0x0a, 5	; 10
 2ee:	08 95       	ret
			else
			{DDRD |= (1 << DDD5);}
 2f0:	55 9a       	sbi	0x0a, 5	; 10
 2f2:	08 95       	ret
			break;
			
			case 6:	if (private_Eingang == true)
 2f4:	12 96       	adiw	r26, 0x02	; 2
 2f6:	8c 91       	ld	r24, X
 2f8:	88 23       	and	r24, r24
 2fa:	11 f0       	breq	.+4      	; 0x300 <_ZN3Pin16initialisierePinEv+0x1e4>
			{DDRD &= ~(1 << DDD6);}
 2fc:	56 98       	cbi	0x0a, 6	; 10
 2fe:	08 95       	ret
			else
			{DDRD |= (1 << DDD6);}
 300:	56 9a       	sbi	0x0a, 6	; 10
 302:	08 95       	ret
			break;
			
			case 7:	if (private_Eingang == true)
 304:	12 96       	adiw	r26, 0x02	; 2
 306:	8c 91       	ld	r24, X
 308:	88 23       	and	r24, r24
 30a:	11 f0       	breq	.+4      	; 0x310 <_ZN3Pin16initialisierePinEv+0x1f4>
			{DDRD &= ~(1 << DDD7);}
 30c:	57 98       	cbi	0x0a, 7	; 10
 30e:	08 95       	ret
			else
			{DDRD |= (1 << DDD7);}
 310:	57 9a       	sbi	0x0a, 7	; 10
 312:	08 95       	ret

00000314 <_ZN3PinC1Echb>:
	return private_Nummer_Pin;
}

void Pin::setze_Port(char PortBuchstabe)
{
	private_Port = PortBuchstabe;
 314:	fc 01       	movw	r30, r24
 316:	60 83       	st	Z, r22
}

void Pin::setze_PinNummer(uint8_t Pin_Nummer)
{
	private_Nummer_Pin = Pin_Nummer;
 318:	41 83       	std	Z+1, r20	; 0x01
}

void Pin::setze_Richtung(bool is_Eingang)
{
	private_Eingang = is_Eingang;
 31a:	22 83       	std	Z+2, r18	; 0x02
{
	//ctor
	setze_Port(PublicPort);
	setze_PinNummer(Public_Nummer_Pin);
	setze_Richtung(Eingang);
	initialisierePin();  
 31c:	0e 94 8e 00 	call	0x11c	; 0x11c <_ZN3Pin16initialisierePinEv>
 320:	08 95       	ret

00000322 <_ZN3Pin12setze_StatusEb>:


}

void Pin::setze_Status(bool Status)
{
 322:	dc 01       	movw	r26, r24
 324:	96 2f       	mov	r25, r22

		if (private_Port == 'B')
 326:	8c 91       	ld	r24, X
 328:	82 34       	cpi	r24, 0x42	; 66
 32a:	09 f0       	breq	.+2      	; 0x32e <_ZN3Pin12setze_StatusEb+0xc>
 32c:	75 c0       	rjmp	.+234    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
		{
			switch(private_Nummer_Pin)
 32e:	11 96       	adiw	r26, 0x01	; 1
 330:	ec 91       	ld	r30, X
 332:	11 97       	sbiw	r26, 0x01	; 1
 334:	4e 2f       	mov	r20, r30
 336:	50 e0       	ldi	r21, 0x00	; 0
 338:	48 30       	cpi	r20, 0x08	; 8
 33a:	51 05       	cpc	r21, r1
 33c:	08 f0       	brcs	.+2      	; 0x340 <_ZN3Pin12setze_StatusEb+0x1e>
 33e:	6c c0       	rjmp	.+216    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 340:	fa 01       	movw	r30, r20
 342:	e5 5b       	subi	r30, 0xB5	; 181
 344:	ff 4f       	sbci	r31, 0xFF	; 255
 346:	0c 94 ee 02 	jmp	0x5dc	; 0x5dc <__tablejump2__>
			{
				case 0:	if (Status == true)
 34a:	99 23       	and	r25, r25
 34c:	31 f0       	breq	.+12     	; 0x35a <_ZN3Pin12setze_StatusEb+0x38>
				{ PORTB |= (1<< PINB0);
 34e:	28 9a       	sbi	0x05, 0	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	13 96       	adiw	r26, 0x03	; 3
 354:	8c 93       	st	X, r24
 356:	13 97       	sbiw	r26, 0x03	; 3
 358:	5f c0       	rjmp	.+190    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
			{
				case 0:	if (Status == true)
				{ PORTB |= (1<< PINB0);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB0);
 35a:	28 98       	cbi	0x05, 0	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 35c:	13 96       	adiw	r26, 0x03	; 3
 35e:	1c 92       	st	X, r1
 360:	13 97       	sbiw	r26, 0x03	; 3
 362:	5a c0       	rjmp	.+180    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
				else
				{PORTB &= ~(1<<PINB0);
					merke_status(false);}
				break;
				
				case 1:	if (Status == true)
 364:	99 23       	and	r25, r25
 366:	31 f0       	breq	.+12     	; 0x374 <_ZN3Pin12setze_StatusEb+0x52>
				{ PORTB |= (1<< PINB1);
 368:	29 9a       	sbi	0x05, 1	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 36a:	81 e0       	ldi	r24, 0x01	; 1
 36c:	13 96       	adiw	r26, 0x03	; 3
 36e:	8c 93       	st	X, r24
 370:	13 97       	sbiw	r26, 0x03	; 3
 372:	52 c0       	rjmp	.+164    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
				
				case 1:	if (Status == true)
				{ PORTB |= (1<< PINB1);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB1);
 374:	29 98       	cbi	0x05, 1	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 376:	13 96       	adiw	r26, 0x03	; 3
 378:	1c 92       	st	X, r1
 37a:	13 97       	sbiw	r26, 0x03	; 3
 37c:	4d c0       	rjmp	.+154    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
				else
				{PORTB &= ~(1<<PINB1);
					merke_status(false);}
				break;
				
				case 2:	if (Status == true)
 37e:	99 23       	and	r25, r25
 380:	31 f0       	breq	.+12     	; 0x38e <_ZN3Pin12setze_StatusEb+0x6c>
				{ PORTB |= (1<< PINB2);
 382:	2a 9a       	sbi	0x05, 2	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	13 96       	adiw	r26, 0x03	; 3
 388:	8c 93       	st	X, r24
 38a:	13 97       	sbiw	r26, 0x03	; 3
 38c:	45 c0       	rjmp	.+138    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
				
				case 2:	if (Status == true)
				{ PORTB |= (1<< PINB2);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB2);
 38e:	2a 98       	cbi	0x05, 2	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 390:	13 96       	adiw	r26, 0x03	; 3
 392:	1c 92       	st	X, r1
 394:	13 97       	sbiw	r26, 0x03	; 3
 396:	40 c0       	rjmp	.+128    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
				else
				{PORTB &= ~(1<<PINB2);
					merke_status(false);}
				break;
				
				case 3:	if (Status == true)
 398:	99 23       	and	r25, r25
 39a:	31 f0       	breq	.+12     	; 0x3a8 <_ZN3Pin12setze_StatusEb+0x86>
				{ PORTB |= (1<< PINB3);
 39c:	2b 9a       	sbi	0x05, 3	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 39e:	81 e0       	ldi	r24, 0x01	; 1
 3a0:	13 96       	adiw	r26, 0x03	; 3
 3a2:	8c 93       	st	X, r24
 3a4:	13 97       	sbiw	r26, 0x03	; 3
 3a6:	38 c0       	rjmp	.+112    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
				
				case 3:	if (Status == true)
				{ PORTB |= (1<< PINB3);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB3);
 3a8:	2b 98       	cbi	0x05, 3	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 3aa:	13 96       	adiw	r26, 0x03	; 3
 3ac:	1c 92       	st	X, r1
 3ae:	13 97       	sbiw	r26, 0x03	; 3
 3b0:	33 c0       	rjmp	.+102    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
				else
				{PORTB &= ~(1<<PINB3);
					merke_status(false);}
				break;
				
				case 4:	if (Status == true)
 3b2:	99 23       	and	r25, r25
 3b4:	31 f0       	breq	.+12     	; 0x3c2 <_ZN3Pin12setze_StatusEb+0xa0>
				{ PORTB |= (1<< PINB4);
 3b6:	2c 9a       	sbi	0x05, 4	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	13 96       	adiw	r26, 0x03	; 3
 3bc:	8c 93       	st	X, r24
 3be:	13 97       	sbiw	r26, 0x03	; 3
 3c0:	2b c0       	rjmp	.+86     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
				
				case 4:	if (Status == true)
				{ PORTB |= (1<< PINB4);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB4);
 3c2:	2c 98       	cbi	0x05, 4	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 3c4:	13 96       	adiw	r26, 0x03	; 3
 3c6:	1c 92       	st	X, r1
 3c8:	13 97       	sbiw	r26, 0x03	; 3
 3ca:	26 c0       	rjmp	.+76     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
				else
				{PORTB &= ~(1<<PINB4);
					merke_status(false);}
				break;
				
				case 5:	if (Status == true)
 3cc:	99 23       	and	r25, r25
 3ce:	31 f0       	breq	.+12     	; 0x3dc <_ZN3Pin12setze_StatusEb+0xba>
				{ PORTB |= (1<< PINB5);
 3d0:	2d 9a       	sbi	0x05, 5	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 3d2:	81 e0       	ldi	r24, 0x01	; 1
 3d4:	13 96       	adiw	r26, 0x03	; 3
 3d6:	8c 93       	st	X, r24
 3d8:	13 97       	sbiw	r26, 0x03	; 3
 3da:	1e c0       	rjmp	.+60     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
				
				case 5:	if (Status == true)
				{ PORTB |= (1<< PINB5);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB5);
 3dc:	2d 98       	cbi	0x05, 5	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 3de:	13 96       	adiw	r26, 0x03	; 3
 3e0:	1c 92       	st	X, r1
 3e2:	13 97       	sbiw	r26, 0x03	; 3
 3e4:	19 c0       	rjmp	.+50     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
				else
				{PORTB &= ~(1<<PINB5);
					merke_status(false);}
				break;
				
				case 6:	if (Status == true)
 3e6:	99 23       	and	r25, r25
 3e8:	31 f0       	breq	.+12     	; 0x3f6 <_ZN3Pin12setze_StatusEb+0xd4>
				{ PORTB |= (1<< PINB6);
 3ea:	2e 9a       	sbi	0x05, 6	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 3ec:	81 e0       	ldi	r24, 0x01	; 1
 3ee:	13 96       	adiw	r26, 0x03	; 3
 3f0:	8c 93       	st	X, r24
 3f2:	13 97       	sbiw	r26, 0x03	; 3
 3f4:	11 c0       	rjmp	.+34     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
				
				case 6:	if (Status == true)
				{ PORTB |= (1<< PINB6);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB6);
 3f6:	2e 98       	cbi	0x05, 6	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 3f8:	13 96       	adiw	r26, 0x03	; 3
 3fa:	1c 92       	st	X, r1
 3fc:	13 97       	sbiw	r26, 0x03	; 3
 3fe:	0c c0       	rjmp	.+24     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
				else
				{PORTB &= ~(1<<PINB6);
					merke_status(false);}
				break;
				
				case 7:	if (Status == true)
 400:	99 23       	and	r25, r25
 402:	31 f0       	breq	.+12     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
				{ PORTB |= (1<< PINB7);
 404:	2f 9a       	sbi	0x05, 7	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 406:	81 e0       	ldi	r24, 0x01	; 1
 408:	13 96       	adiw	r26, 0x03	; 3
 40a:	8c 93       	st	X, r24
 40c:	13 97       	sbiw	r26, 0x03	; 3
 40e:	04 c0       	rjmp	.+8      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
				
				case 7:	if (Status == true)
				{ PORTB |= (1<< PINB7);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB7);
 410:	2f 98       	cbi	0x05, 7	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 412:	13 96       	adiw	r26, 0x03	; 3
 414:	1c 92       	st	X, r1
 416:	13 97       	sbiw	r26, 0x03	; 3
				break;
				
			}
		}

		if (private_Port == 'C')
 418:	8c 91       	ld	r24, X
 41a:	83 34       	cpi	r24, 0x43	; 67
 41c:	09 f0       	breq	.+2      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 41e:	68 c0       	rjmp	.+208    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
		{
			switch(private_Nummer_Pin)
 420:	11 96       	adiw	r26, 0x01	; 1
 422:	ec 91       	ld	r30, X
 424:	11 97       	sbiw	r26, 0x01	; 1
 426:	4e 2f       	mov	r20, r30
 428:	50 e0       	ldi	r21, 0x00	; 0
 42a:	47 30       	cpi	r20, 0x07	; 7
 42c:	51 05       	cpc	r21, r1
 42e:	08 f0       	brcs	.+2      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 430:	5f c0       	rjmp	.+190    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 432:	fa 01       	movw	r30, r20
 434:	ed 5a       	subi	r30, 0xAD	; 173
 436:	ff 4f       	sbci	r31, 0xFF	; 255
 438:	0c 94 ee 02 	jmp	0x5dc	; 0x5dc <__tablejump2__>
			{
				case 0:	if (Status == true)
 43c:	99 23       	and	r25, r25
 43e:	31 f0       	breq	.+12     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
				{ PORTC |= (1<< PINC0);
 440:	40 9a       	sbi	0x08, 0	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 442:	81 e0       	ldi	r24, 0x01	; 1
 444:	13 96       	adiw	r26, 0x03	; 3
 446:	8c 93       	st	X, r24
 448:	13 97       	sbiw	r26, 0x03	; 3
 44a:	52 c0       	rjmp	.+164    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
			{
				case 0:	if (Status == true)
				{ PORTC |= (1<< PINC0);
					merke_status(true);}
				else
				{PORTC &= ~(1<<PINC0);
 44c:	40 98       	cbi	0x08, 0	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 44e:	13 96       	adiw	r26, 0x03	; 3
 450:	1c 92       	st	X, r1
 452:	13 97       	sbiw	r26, 0x03	; 3
 454:	4d c0       	rjmp	.+154    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
				else
				{PORTC &= ~(1<<PINC0);
					merke_status(false);}
				break;
				
				case 1:	if (Status == true)
 456:	99 23       	and	r25, r25
 458:	31 f0       	breq	.+12     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
				{ PORTC |= (1<< PINC1);
 45a:	41 9a       	sbi	0x08, 1	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	13 96       	adiw	r26, 0x03	; 3
 460:	8c 93       	st	X, r24
 462:	13 97       	sbiw	r26, 0x03	; 3
 464:	45 c0       	rjmp	.+138    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
				
				case 1:	if (Status == true)
				{ PORTC |= (1<< PINC1);
					merke_status(true);}
				else
				{PORTC &= ~(1<<PINC1);
 466:	41 98       	cbi	0x08, 1	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 468:	13 96       	adiw	r26, 0x03	; 3
 46a:	1c 92       	st	X, r1
 46c:	13 97       	sbiw	r26, 0x03	; 3
 46e:	40 c0       	rjmp	.+128    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
				else
				{PORTC &= ~(1<<PINC1);
					merke_status(false);}
				break;
				
				case 2:	if (Status == true)
 470:	99 23       	and	r25, r25
 472:	31 f0       	breq	.+12     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
				{ PORTC |= (1<< PINC2);
 474:	42 9a       	sbi	0x08, 2	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 476:	81 e0       	ldi	r24, 0x01	; 1
 478:	13 96       	adiw	r26, 0x03	; 3
 47a:	8c 93       	st	X, r24
 47c:	13 97       	sbiw	r26, 0x03	; 3
 47e:	38 c0       	rjmp	.+112    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
				
				case 2:	if (Status == true)
				{ PORTC |= (1<< PINC2);
					merke_status(true);}
				else
				{PORTC &= ~(1<<PINC2);
 480:	42 98       	cbi	0x08, 2	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 482:	13 96       	adiw	r26, 0x03	; 3
 484:	1c 92       	st	X, r1
 486:	13 97       	sbiw	r26, 0x03	; 3
 488:	33 c0       	rjmp	.+102    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
				else
				{PORTC &= ~(1<<PINC2);
					merke_status(false);}
				break;
				
				case 3:	if (Status == true)
 48a:	99 23       	and	r25, r25
 48c:	31 f0       	breq	.+12     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
				{ PORTC |= (1<< PINC3);
 48e:	43 9a       	sbi	0x08, 3	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 490:	81 e0       	ldi	r24, 0x01	; 1
 492:	13 96       	adiw	r26, 0x03	; 3
 494:	8c 93       	st	X, r24
 496:	13 97       	sbiw	r26, 0x03	; 3
 498:	2b c0       	rjmp	.+86     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
				
				case 3:	if (Status == true)
				{ PORTC |= (1<< PINC3);
					merke_status(true);}
				else
				{PORTC &= ~(1<<PINC3);
 49a:	43 98       	cbi	0x08, 3	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 49c:	13 96       	adiw	r26, 0x03	; 3
 49e:	1c 92       	st	X, r1
 4a0:	13 97       	sbiw	r26, 0x03	; 3
 4a2:	26 c0       	rjmp	.+76     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
				else
				{PORTC &= ~(1<<PINC3);
					merke_status(false);}
				break;
				
				case 4:	if (Status == true)
 4a4:	99 23       	and	r25, r25
 4a6:	31 f0       	breq	.+12     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
				{ PORTC |= (1<< PINC4);
 4a8:	44 9a       	sbi	0x08, 4	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 4aa:	81 e0       	ldi	r24, 0x01	; 1
 4ac:	13 96       	adiw	r26, 0x03	; 3
 4ae:	8c 93       	st	X, r24
 4b0:	13 97       	sbiw	r26, 0x03	; 3
 4b2:	1e c0       	rjmp	.+60     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
				
				case 4:	if (Status == true)
				{ PORTC |= (1<< PINC4);
					merke_status(true);}
				else
				{PORTC &= ~(1<<PINC4);
 4b4:	44 98       	cbi	0x08, 4	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 4b6:	13 96       	adiw	r26, 0x03	; 3
 4b8:	1c 92       	st	X, r1
 4ba:	13 97       	sbiw	r26, 0x03	; 3
 4bc:	19 c0       	rjmp	.+50     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
				else
				{PORTC &= ~(1<<PINC4);
					merke_status(false);}
				break;
				
				case 5:	if (Status == true)
 4be:	99 23       	and	r25, r25
 4c0:	31 f0       	breq	.+12     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
				{ PORTC |= (1<< PINC5);
 4c2:	45 9a       	sbi	0x08, 5	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 4c4:	81 e0       	ldi	r24, 0x01	; 1
 4c6:	13 96       	adiw	r26, 0x03	; 3
 4c8:	8c 93       	st	X, r24
 4ca:	13 97       	sbiw	r26, 0x03	; 3
 4cc:	11 c0       	rjmp	.+34     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
				
				case 5:	if (Status == true)
				{ PORTC |= (1<< PINC5);
					merke_status(true);}
				else
				{PORTC &= ~(1<<PINC5);
 4ce:	45 98       	cbi	0x08, 5	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 4d0:	13 96       	adiw	r26, 0x03	; 3
 4d2:	1c 92       	st	X, r1
 4d4:	13 97       	sbiw	r26, 0x03	; 3
 4d6:	0c c0       	rjmp	.+24     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
				else
				{PORTC &= ~(1<<PINC5);
					merke_status(false);}
				break;
				
				case 6:	if (Status == true)
 4d8:	99 23       	and	r25, r25
 4da:	31 f0       	breq	.+12     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
				{ PORTC |= (1<< PINC6);
 4dc:	46 9a       	sbi	0x08, 6	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 4de:	81 e0       	ldi	r24, 0x01	; 1
 4e0:	13 96       	adiw	r26, 0x03	; 3
 4e2:	8c 93       	st	X, r24
 4e4:	13 97       	sbiw	r26, 0x03	; 3
 4e6:	04 c0       	rjmp	.+8      	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
				
				case 6:	if (Status == true)
				{ PORTC |= (1<< PINC6);
					merke_status(true);}
				else
				{PORTC &= ~(1<<PINC6);
 4e8:	46 98       	cbi	0x08, 6	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 4ea:	13 96       	adiw	r26, 0x03	; 3
 4ec:	1c 92       	st	X, r1
 4ee:	13 97       	sbiw	r26, 0x03	; 3
				default: //# warning "The choosen pin number is not valid. Only 0-6 are allowed on Port C"
				break;
							}
		}
		
		if (private_Port == 'D')
 4f0:	8c 91       	ld	r24, X
 4f2:	84 34       	cpi	r24, 0x44	; 68
 4f4:	09 f0       	breq	.+2      	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4f6:	65 c0       	rjmp	.+202    	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
		{
			switch(private_Nummer_Pin)
 4f8:	11 96       	adiw	r26, 0x01	; 1
 4fa:	ec 91       	ld	r30, X
 4fc:	11 97       	sbiw	r26, 0x01	; 1
 4fe:	4e 2f       	mov	r20, r30
 500:	50 e0       	ldi	r21, 0x00	; 0
 502:	48 30       	cpi	r20, 0x08	; 8
 504:	51 05       	cpc	r21, r1
 506:	08 f0       	brcs	.+2      	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 508:	5c c0       	rjmp	.+184    	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 50a:	fa 01       	movw	r30, r20
 50c:	e6 5a       	subi	r30, 0xA6	; 166
 50e:	ff 4f       	sbci	r31, 0xFF	; 255
 510:	0c 94 ee 02 	jmp	0x5dc	; 0x5dc <__tablejump2__>
			{
				case 0:	if (Status == true)
 514:	99 23       	and	r25, r25
 516:	29 f0       	breq	.+10     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
				{ PORTD |= (1<< PIND0);
 518:	58 9a       	sbi	0x0b, 0	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 51a:	81 e0       	ldi	r24, 0x01	; 1
 51c:	13 96       	adiw	r26, 0x03	; 3
 51e:	8c 93       	st	X, r24
 520:	08 95       	ret
			{
				case 0:	if (Status == true)
				{ PORTD |= (1<< PIND0);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND0);
 522:	58 98       	cbi	0x0b, 0	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 524:	13 96       	adiw	r26, 0x03	; 3
 526:	1c 92       	st	X, r1
 528:	08 95       	ret
				else
				{PORTD &= ~(1<<PIND0);
					merke_status(false);}
				break;
				
				case 1:	if (Status == true)
 52a:	99 23       	and	r25, r25
 52c:	29 f0       	breq	.+10     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
				{ PORTD |= (1<< PIND1);
 52e:	59 9a       	sbi	0x0b, 1	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 530:	81 e0       	ldi	r24, 0x01	; 1
 532:	13 96       	adiw	r26, 0x03	; 3
 534:	8c 93       	st	X, r24
 536:	08 95       	ret
				
				case 1:	if (Status == true)
				{ PORTD |= (1<< PIND1);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND1);
 538:	59 98       	cbi	0x0b, 1	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 53a:	13 96       	adiw	r26, 0x03	; 3
 53c:	1c 92       	st	X, r1
 53e:	08 95       	ret
				else
				{PORTD &= ~(1<<PIND1);
					merke_status(false);}
				break;
				
				case 2:	if (Status == true)
 540:	99 23       	and	r25, r25
 542:	29 f0       	breq	.+10     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
				{ PORTD |= (1<< PIND2);
 544:	5a 9a       	sbi	0x0b, 2	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 546:	81 e0       	ldi	r24, 0x01	; 1
 548:	13 96       	adiw	r26, 0x03	; 3
 54a:	8c 93       	st	X, r24
 54c:	08 95       	ret
				
				case 2:	if (Status == true)
				{ PORTD |= (1<< PIND2);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND2);
 54e:	5a 98       	cbi	0x0b, 2	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 550:	13 96       	adiw	r26, 0x03	; 3
 552:	1c 92       	st	X, r1
 554:	08 95       	ret
				else
				{PORTD &= ~(1<<PIND2);
					merke_status(false);}
				break;
				
				case 3:	if (Status == true)
 556:	99 23       	and	r25, r25
 558:	29 f0       	breq	.+10     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
				{ PORTD |= (1<< PIND3);
 55a:	5b 9a       	sbi	0x0b, 3	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 55c:	81 e0       	ldi	r24, 0x01	; 1
 55e:	13 96       	adiw	r26, 0x03	; 3
 560:	8c 93       	st	X, r24
 562:	08 95       	ret
				
				case 3:	if (Status == true)
				{ PORTD |= (1<< PIND3);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND3);
 564:	5b 98       	cbi	0x0b, 3	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 566:	13 96       	adiw	r26, 0x03	; 3
 568:	1c 92       	st	X, r1
 56a:	08 95       	ret
				else
				{PORTD &= ~(1<<PIND3);
					merke_status(false);}
				break;
				
				case 4:	if (Status == true)
 56c:	99 23       	and	r25, r25
 56e:	29 f0       	breq	.+10     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
				{ PORTD |= (1<< PIND4);
 570:	5c 9a       	sbi	0x0b, 4	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 572:	81 e0       	ldi	r24, 0x01	; 1
 574:	13 96       	adiw	r26, 0x03	; 3
 576:	8c 93       	st	X, r24
 578:	08 95       	ret
				
				case 4:	if (Status == true)
				{ PORTD |= (1<< PIND4);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND4);
 57a:	5c 98       	cbi	0x0b, 4	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 57c:	13 96       	adiw	r26, 0x03	; 3
 57e:	1c 92       	st	X, r1
 580:	08 95       	ret
				else
				{PORTD &= ~(1<<PIND4);
					merke_status(false);}
				break;
				
				case 5:	if (Status == true)
 582:	99 23       	and	r25, r25
 584:	29 f0       	breq	.+10     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
				{ PORTD |= (1<< PIND5);
 586:	5d 9a       	sbi	0x0b, 5	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 588:	81 e0       	ldi	r24, 0x01	; 1
 58a:	13 96       	adiw	r26, 0x03	; 3
 58c:	8c 93       	st	X, r24
 58e:	08 95       	ret
				
				case 5:	if (Status == true)
				{ PORTD |= (1<< PIND5);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND5);
 590:	5d 98       	cbi	0x0b, 5	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 592:	13 96       	adiw	r26, 0x03	; 3
 594:	1c 92       	st	X, r1
 596:	08 95       	ret
				else
				{PORTD &= ~(1<<PIND5);
					merke_status(false);}
				break;
				
				case 6:	if (Status == true)
 598:	99 23       	and	r25, r25
 59a:	29 f0       	breq	.+10     	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
				{ PORTD |= (1<< PIND6);
 59c:	5e 9a       	sbi	0x0b, 6	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 59e:	81 e0       	ldi	r24, 0x01	; 1
 5a0:	13 96       	adiw	r26, 0x03	; 3
 5a2:	8c 93       	st	X, r24
 5a4:	08 95       	ret
				
				case 6:	if (Status == true)
				{ PORTD |= (1<< PIND6);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND6);
 5a6:	5e 98       	cbi	0x0b, 6	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 5a8:	13 96       	adiw	r26, 0x03	; 3
 5aa:	1c 92       	st	X, r1
 5ac:	08 95       	ret
				else
				{PORTD &= ~(1<<PIND6);
					merke_status(false);}
				break;
				
				case 7:	if (Status == true)
 5ae:	99 23       	and	r25, r25
 5b0:	29 f0       	breq	.+10     	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
				{ PORTD |= (1<< PIND7);
 5b2:	5f 9a       	sbi	0x0b, 7	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 5b4:	81 e0       	ldi	r24, 0x01	; 1
 5b6:	13 96       	adiw	r26, 0x03	; 3
 5b8:	8c 93       	st	X, r24
 5ba:	08 95       	ret
				
				case 7:	if (Status == true)
				{ PORTD |= (1<< PIND7);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND7);
 5bc:	5f 98       	cbi	0x0b, 7	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 5be:	13 96       	adiw	r26, 0x03	; 3
 5c0:	1c 92       	st	X, r1
 5c2:	08 95       	ret

000005c4 <_ZN3Pin10toggle_PinEv>:
}

void Pin::toggle_Pin()
{
	if (lese_status())
 5c4:	fc 01       	movw	r30, r24
 5c6:	23 81       	ldd	r18, Z+3	; 0x03
 5c8:	22 23       	and	r18, r18
 5ca:	21 f0       	breq	.+8      	; 0x5d4 <_ZN3Pin10toggle_PinEv+0x10>
	{
		setze_Status(false);
 5cc:	60 e0       	ldi	r22, 0x00	; 0
 5ce:	0e 94 91 01 	call	0x322	; 0x322 <_ZN3Pin12setze_StatusEb>
 5d2:	08 95       	ret
	} 
	else
	{
		setze_Status(true);
 5d4:	61 e0       	ldi	r22, 0x01	; 1
 5d6:	0e 94 91 01 	call	0x322	; 0x322 <_ZN3Pin12setze_StatusEb>
 5da:	08 95       	ret

000005dc <__tablejump2__>:
 5dc:	ee 0f       	add	r30, r30
 5de:	ff 1f       	adc	r31, r31
 5e0:	05 90       	lpm	r0, Z+
 5e2:	f4 91       	lpm	r31, Z
 5e4:	e0 2d       	mov	r30, r0
 5e6:	09 94       	ijmp

000005e8 <_exit>:
 5e8:	f8 94       	cli

000005ea <__stop_program>:
 5ea:	ff cf       	rjmp	.-2      	; 0x5ea <__stop_program>
