
Blumenbewaesserung.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000a86  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a12  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800100  00800100  00000a86  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a86  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ab8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000af8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001e4a  00000000  00000000  00000b98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008df  00000000  00000000  000029e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b1f  00000000  00000000  000032c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000140  00000000  00000000  00003de0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000661  00000000  00000000  00003f20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000012a4  00000000  00000000  00004581  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00005825  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 79 00 	jmp	0xf2	; 0xf2 <__ctors_end>
   4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
   8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
   c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  10:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  14:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  18:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  1c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  20:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  24:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  28:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  2c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  30:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  34:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  38:	0c 94 1c 01 	jmp	0x238	; 0x238 <__vector_14>
  3c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  40:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  44:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  48:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  4c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  50:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  54:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  58:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  5c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  60:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  64:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  68:	8c 01       	movw	r16, r24
  6a:	97 01       	movw	r18, r14
  6c:	a2 01       	movw	r20, r4
  6e:	ad 01       	movw	r20, r26
  70:	b8 01       	movw	r22, r16
  72:	c3 01       	movw	r24, r6
  74:	ce 01       	movw	r24, r28
  76:	d9 01       	movw	r26, r18
  78:	f5 01       	movw	r30, r10
  7a:	00 02       	muls	r16, r16
  7c:	0b 02       	muls	r16, r27
  7e:	16 02       	muls	r17, r22
  80:	21 02       	muls	r18, r17
  82:	2c 02       	muls	r18, r28
  84:	37 02       	muls	r19, r23
  86:	53 02       	muls	r21, r19
  88:	5e 02       	muls	r21, r30
  8a:	69 02       	muls	r22, r25
  8c:	74 02       	muls	r23, r20
  8e:	7f 02       	muls	r23, r31
  90:	8a 02       	muls	r24, r26
  92:	95 02       	muls	r25, r21
  94:	a0 02       	muls	r26, r16
  96:	c0 02       	muls	r28, r16
  98:	c9 02       	muls	r28, r25
  9a:	d2 02       	muls	r29, r18
  9c:	db 02       	muls	r29, r27
  9e:	e4 02       	muls	r30, r20
  a0:	ed 02       	muls	r30, r29
  a2:	f6 02       	muls	r31, r22
  a4:	ff 02       	muls	r31, r31
  a6:	19 03       	fmul	r17, r17
  a8:	22 03       	mulsu	r18, r18
  aa:	2b 03       	fmul	r18, r19
  ac:	34 03       	mulsu	r19, r20
  ae:	3d 03       	fmul	r19, r21
  b0:	46 03       	mulsu	r20, r22
  b2:	4f 03       	fmul	r20, r23
  b4:	69 03       	fmul	r22, r17
  b6:	71 03       	mulsu	r23, r17
  b8:	79 03       	fmul	r23, r17
  ba:	81 03       	fmuls	r16, r17
  bc:	89 03       	fmulsu	r16, r17
  be:	91 03       	fmuls	r17, r17
  c0:	99 03       	fmulsu	r17, r17
  c2:	a1 03       	fmuls	r18, r17
  c4:	c4 03       	fmuls	r20, r20
  c6:	d1 03       	fmuls	r21, r17
  c8:	de 03       	fmulsu	r21, r22
  ca:	eb 03       	fmulsu	r22, r19
  cc:	f8 03       	fmulsu	r23, r16
  ce:	05 04       	cpc	r0, r5
  d0:	12 04       	cpc	r1, r2
  d2:	1f 04       	cpc	r1, r15
  d4:	3d 04       	cpc	r3, r13
  d6:	4a 04       	cpc	r4, r10
  d8:	57 04       	cpc	r5, r7
  da:	64 04       	cpc	r6, r4
  dc:	71 04       	cpc	r7, r1
  de:	7e 04       	cpc	r7, r14
  e0:	8b 04       	cpc	r8, r11
  e2:	a9 04       	cpc	r10, r9
  e4:	b4 04       	cpc	r11, r4
  e6:	bf 04       	cpc	r11, r15
  e8:	ca 04       	cpc	r12, r10
  ea:	d5 04       	cpc	r13, r5
  ec:	e0 04       	cpc	r14, r0
  ee:	eb 04       	cpc	r14, r11
  f0:	f6 04       	cpc	r15, r6

000000f2 <__ctors_end>:
  f2:	11 24       	eor	r1, r1
  f4:	1f be       	out	0x3f, r1	; 63
  f6:	cf ef       	ldi	r28, 0xFF	; 255
  f8:	d8 e0       	ldi	r29, 0x08	; 8
  fa:	de bf       	out	0x3e, r29	; 62
  fc:	cd bf       	out	0x3d, r28	; 61

000000fe <__do_clear_bss>:
  fe:	21 e0       	ldi	r18, 0x01	; 1
 100:	a0 e0       	ldi	r26, 0x00	; 0
 102:	b1 e0       	ldi	r27, 0x01	; 1
 104:	01 c0       	rjmp	.+2      	; 0x108 <.do_clear_bss_start>

00000106 <.do_clear_bss_loop>:
 106:	1d 92       	st	X+, r1

00000108 <.do_clear_bss_start>:
 108:	a8 30       	cpi	r26, 0x08	; 8
 10a:	b2 07       	cpc	r27, r18
 10c:	e1 f7       	brne	.-8      	; 0x106 <.do_clear_bss_loop>
 10e:	0e 94 8d 00 	call	0x11a	; 0x11a <main>
 112:	0c 94 07 05 	jmp	0xa0e	; 0xa0e <_exit>

00000116 <__bad_interrupt>:
 116:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000011a <main>:

//Sensor is High wenn Dry

__attribute__((optimize(0)))
int main(void)
{
 11a:	cf 93       	push	r28
 11c:	df 93       	push	r29
 11e:	cd b7       	in	r28, 0x3d	; 61
 120:	de b7       	in	r29, 0x3e	; 62
 122:	2c 97       	sbiw	r28, 0x0c	; 12
 124:	0f b6       	in	r0, 0x3f	; 63
 126:	f8 94       	cli
 128:	de bf       	out	0x3e, r29	; 62
 12a:	0f be       	out	0x3f, r0	; 63
 12c:	cd bf       	out	0x3d, r28	; 61
	TCCR0A |= (1 << COM0A1);
 12e:	84 e4       	ldi	r24, 0x44	; 68
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	24 e4       	ldi	r18, 0x44	; 68
 134:	30 e0       	ldi	r19, 0x00	; 0
 136:	f9 01       	movw	r30, r18
 138:	20 81       	ld	r18, Z
 13a:	20 68       	ori	r18, 0x80	; 128
 13c:	fc 01       	movw	r30, r24
 13e:	20 83       	st	Z, r18
	TCCR0B |= (1 << CS01) | (1 << CS00);
 140:	85 e4       	ldi	r24, 0x45	; 69
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	25 e4       	ldi	r18, 0x45	; 69
 146:	30 e0       	ldi	r19, 0x00	; 0
 148:	f9 01       	movw	r30, r18
 14a:	20 81       	ld	r18, Z
 14c:	23 60       	ori	r18, 0x03	; 3
 14e:	fc 01       	movw	r30, r24
 150:	20 83       	st	Z, r18
	 // ((1000000/8)/1000) = 125
	 OCR0A = 125-1;
 152:	87 e4       	ldi	r24, 0x47	; 71
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	2c e7       	ldi	r18, 0x7C	; 124
 158:	fc 01       	movw	r30, r24
 15a:	20 83       	st	Z, r18
	 
	   // Compare Interrupt erlauben
	   TIMSK0 |= (1<<OCIE0A);
 15c:	8e e6       	ldi	r24, 0x6E	; 110
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	2e e6       	ldi	r18, 0x6E	; 110
 162:	30 e0       	ldi	r19, 0x00	; 0
 164:	f9 01       	movw	r30, r18
 166:	20 81       	ld	r18, Z
 168:	22 60       	ori	r18, 0x02	; 2
 16a:	fc 01       	movw	r30, r24
 16c:	20 83       	st	Z, r18
	   
	  // Global Interrupts aktivieren
	  sei();
 16e:	78 94       	sei
	   
	Pin WateringPump('C', 5, false);
 170:	20 e0       	ldi	r18, 0x00	; 0
 172:	45 e0       	ldi	r20, 0x05	; 5
 174:	63 e4       	ldi	r22, 0x43	; 67
 176:	ce 01       	movw	r24, r28
 178:	01 96       	adiw	r24, 0x01	; 1
 17a:	0e 94 a9 03 	call	0x752	; 0x752 <_ZN3PinC1Echb>
	Pin PoweringHumidMeter ('C', 4, false);
 17e:	ce 01       	movw	r24, r28
 180:	05 96       	adiw	r24, 0x05	; 5
 182:	20 e0       	ldi	r18, 0x00	; 0
 184:	44 e0       	ldi	r20, 0x04	; 4
 186:	63 e4       	ldi	r22, 0x43	; 67
 188:	0e 94 a9 03 	call	0x752	; 0x752 <_ZN3PinC1Echb>
	Pin PlantToDry('C', 3, true);
 18c:	ce 01       	movw	r24, r28
 18e:	09 96       	adiw	r24, 0x09	; 9
 190:	21 e0       	ldi	r18, 0x01	; 1
 192:	43 e0       	ldi	r20, 0x03	; 3
 194:	63 e4       	ldi	r22, 0x43	; 67
 196:	0e 94 a9 03 	call	0x752	; 0x752 <_ZN3PinC1Echb>
	
    //Init all	WateringPump.setze_Status(false);
	PoweringHumidMeter.setze_Status(false);
 19a:	ce 01       	movw	r24, r28
 19c:	05 96       	adiw	r24, 0x05	; 5
 19e:	60 e0       	ldi	r22, 0x00	; 0
 1a0:	0e 94 b0 03 	call	0x760	; 0x760 <_ZN3Pin12setze_StatusEb>
	WateringPump.setze_Status(true);
 1a4:	61 e0       	ldi	r22, 0x01	; 1
 1a6:	ce 01       	movw	r24, r28
 1a8:	01 96       	adiw	r24, 0x01	; 1
 1aa:	0e 94 b0 03 	call	0x760	; 0x760 <_ZN3Pin12setze_StatusEb>
	
    while (1) 
    {
		//_delay_ms(1000);
		//WateringPump.toggle_Pin();
		if (stunde % 4 == 0)
 1ae:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <stunde>
 1b2:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <stunde+0x1>
 1b6:	83 70       	andi	r24, 0x03	; 3
 1b8:	99 27       	eor	r25, r25
 1ba:	21 e0       	ldi	r18, 0x01	; 1
 1bc:	89 2b       	or	r24, r25
 1be:	09 f0       	breq	.+2      	; 0x1c2 <main+0xa8>
 1c0:	20 e0       	ldi	r18, 0x00	; 0
 1c2:	22 23       	and	r18, r18
 1c4:	a1 f3       	breq	.-24     	; 0x1ae <main+0x94>
		{
			if ((minute == 0) && (sekunde < 2))
 1c6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <minute>
 1ca:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <minute+0x1>
 1ce:	89 2b       	or	r24, r25
 1d0:	41 f4       	brne	.+16     	; 0x1e2 <main+0xc8>
 1d2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <sekunde>
 1d6:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <sekunde+0x1>
 1da:	02 97       	sbiw	r24, 0x02	; 2
 1dc:	10 f4       	brcc	.+4      	; 0x1e2 <main+0xc8>
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	01 c0       	rjmp	.+2      	; 0x1e4 <main+0xca>
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	88 23       	and	r24, r24
 1e6:	31 f0       	breq	.+12     	; 0x1f4 <main+0xda>
			{
				PoweringHumidMeter.setze_Status(true);
 1e8:	ce 01       	movw	r24, r28
 1ea:	05 96       	adiw	r24, 0x05	; 5
 1ec:	61 e0       	ldi	r22, 0x01	; 1
 1ee:	0e 94 b0 03 	call	0x760	; 0x760 <_ZN3Pin12setze_StatusEb>
 1f2:	dd cf       	rjmp	.-70     	; 0x1ae <main+0x94>
				//_delay_ms(2000);
			}
			else
			{
				if ((minute < 1) && (PlantToDry.lese_status()))
 1f4:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <minute>
 1f8:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <minute+0x1>
 1fc:	89 2b       	or	r24, r25
 1fe:	41 f4       	brne	.+16     	; 0x210 <main+0xf6>
 200:	ce 01       	movw	r24, r28
 202:	09 96       	adiw	r24, 0x09	; 9
 204:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_ZN3Pin11lese_statusEv>
 208:	88 23       	and	r24, r24
 20a:	11 f0       	breq	.+4      	; 0x210 <main+0xf6>
 20c:	81 e0       	ldi	r24, 0x01	; 1
 20e:	01 c0       	rjmp	.+2      	; 0x212 <main+0xf8>
 210:	80 e0       	ldi	r24, 0x00	; 0
 212:	88 23       	and	r24, r24
 214:	31 f0       	breq	.+12     	; 0x222 <main+0x108>
				{
					WateringPump.setze_Status(false);
 216:	60 e0       	ldi	r22, 0x00	; 0
 218:	ce 01       	movw	r24, r28
 21a:	01 96       	adiw	r24, 0x01	; 1
 21c:	0e 94 b0 03 	call	0x760	; 0x760 <_ZN3Pin12setze_StatusEb>
 220:	c6 cf       	rjmp	.-116    	; 0x1ae <main+0x94>
				}
				else
				{
					WateringPump.setze_Status(true);
 222:	61 e0       	ldi	r22, 0x01	; 1
 224:	ce 01       	movw	r24, r28
 226:	01 96       	adiw	r24, 0x01	; 1
 228:	0e 94 b0 03 	call	0x760	; 0x760 <_ZN3Pin12setze_StatusEb>
					PoweringHumidMeter.setze_Status(false);
 22c:	ce 01       	movw	r24, r28
 22e:	05 96       	adiw	r24, 0x05	; 5
 230:	60 e0       	ldi	r22, 0x00	; 0
 232:	0e 94 b0 03 	call	0x760	; 0x760 <_ZN3Pin12setze_StatusEb>
	
    //Init all	WateringPump.setze_Status(false);
	PoweringHumidMeter.setze_Status(false);
	WateringPump.setze_Status(true);
	
    while (1) 
 236:	bb cf       	rjmp	.-138    	; 0x1ae <main+0x94>

00000238 <__vector_14>:
wird aufgerufen, wenn
TCNT0 = OCR0A = 125-1
ist (125 Schritte), d.h. genau alle 1 ms
*/
ISR (TIMER0_COMPA_vect)
{
 238:	1f 92       	push	r1
 23a:	0f 92       	push	r0
 23c:	0f b6       	in	r0, 0x3f	; 63
 23e:	0f 92       	push	r0
 240:	11 24       	eor	r1, r1
 242:	2f 93       	push	r18
 244:	8f 93       	push	r24
 246:	9f 93       	push	r25
	millisekunden++;
 248:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 24c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 250:	01 96       	adiw	r24, 0x01	; 1
 252:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 256:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	if(millisekunden == 1000)
 25a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 25e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 262:	88 3e       	cpi	r24, 0xE8	; 232
 264:	93 40       	sbci	r25, 0x03	; 3
 266:	e9 f5       	brne	.+122    	; 0x2e2 <__vector_14+0xaa>
	{
		sekunde++;
 268:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <sekunde>
 26c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <sekunde+0x1>
 270:	01 96       	adiw	r24, 0x01	; 1
 272:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <sekunde+0x1>
 276:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <sekunde>
		millisekunden = 0;
 27a:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
 27e:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
		if(sekunde == 60)
 282:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <sekunde>
 286:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <sekunde+0x1>
 28a:	cc 97       	sbiw	r24, 0x3c	; 60
 28c:	69 f4       	brne	.+26     	; 0x2a8 <__vector_14+0x70>
		{
			minute++;
 28e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <minute>
 292:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <minute+0x1>
 296:	01 96       	adiw	r24, 0x01	; 1
 298:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <minute+0x1>
 29c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <minute>
			sekunde = 0;
 2a0:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <sekunde+0x1>
 2a4:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <sekunde>
		}
		if(minute == 60)
 2a8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <minute>
 2ac:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <minute+0x1>
 2b0:	cc 97       	sbiw	r24, 0x3c	; 60
 2b2:	69 f4       	brne	.+26     	; 0x2ce <__vector_14+0x96>
		{
			stunde++;
 2b4:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <stunde>
 2b8:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <stunde+0x1>
 2bc:	01 96       	adiw	r24, 0x01	; 1
 2be:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <stunde+0x1>
 2c2:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <stunde>
			minute = 0;
 2c6:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <minute+0x1>
 2ca:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <minute>
		}
		if(stunde == 24)
 2ce:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <stunde>
 2d2:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <stunde+0x1>
 2d6:	48 97       	sbiw	r24, 0x18	; 24
 2d8:	21 f4       	brne	.+8      	; 0x2e2 <__vector_14+0xaa>
		{
			stunde = 0;
 2da:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <stunde+0x1>
 2de:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <stunde>
		}
	}
}
 2e2:	9f 91       	pop	r25
 2e4:	8f 91       	pop	r24
 2e6:	2f 91       	pop	r18
 2e8:	0f 90       	pop	r0
 2ea:	0f be       	out	0x3f, r0	; 63
 2ec:	0f 90       	pop	r0
 2ee:	1f 90       	pop	r1
 2f0:	18 95       	reti

000002f2 <_ZN3Pin11lese_statusEv>:
	private_Nummer_Pin = Pin_Nummer;
}

void Pin::setze_Richtung(bool is_Eingang)
{
	private_Eingang = is_Eingang;
 2f2:	dc 01       	movw	r26, r24
 2f4:	8c 91       	ld	r24, X
 2f6:	82 34       	cpi	r24, 0x42	; 66
 2f8:	09 f0       	breq	.+2      	; 0x2fc <_ZN3Pin11lese_statusEv+0xa>
 2fa:	66 c0       	rjmp	.+204    	; 0x3c8 <_ZN3Pin11lese_statusEv+0xd6>
 2fc:	11 96       	adiw	r26, 0x01	; 1
 2fe:	ec 91       	ld	r30, X
 300:	11 97       	sbiw	r26, 0x01	; 1
 302:	4e 2f       	mov	r20, r30
 304:	50 e0       	ldi	r21, 0x00	; 0
 306:	48 30       	cpi	r20, 0x08	; 8
 308:	51 05       	cpc	r21, r1
 30a:	08 f0       	brcs	.+2      	; 0x30e <_ZN3Pin11lese_statusEv+0x1c>
 30c:	5d c0       	rjmp	.+186    	; 0x3c8 <_ZN3Pin11lese_statusEv+0xd6>
 30e:	fa 01       	movw	r30, r20
 310:	ec 5c       	subi	r30, 0xCC	; 204
 312:	ff 4f       	sbci	r31, 0xFF	; 255
 314:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__tablejump2__>
 318:	18 9b       	sbis	0x03, 0	; 3
 31a:	05 c0       	rjmp	.+10     	; 0x326 <_ZN3Pin11lese_statusEv+0x34>
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	13 96       	adiw	r26, 0x03	; 3
 320:	8c 93       	st	X, r24
 322:	13 97       	sbiw	r26, 0x03	; 3
 324:	17 c1       	rjmp	.+558    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 326:	13 96       	adiw	r26, 0x03	; 3
 328:	1c 92       	st	X, r1
 32a:	13 97       	sbiw	r26, 0x03	; 3
 32c:	13 c1       	rjmp	.+550    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 32e:	19 9b       	sbis	0x03, 1	; 3
 330:	05 c0       	rjmp	.+10     	; 0x33c <_ZN3Pin11lese_statusEv+0x4a>
 332:	81 e0       	ldi	r24, 0x01	; 1
 334:	13 96       	adiw	r26, 0x03	; 3
 336:	8c 93       	st	X, r24
 338:	13 97       	sbiw	r26, 0x03	; 3
 33a:	0c c1       	rjmp	.+536    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 33c:	13 96       	adiw	r26, 0x03	; 3
 33e:	1c 92       	st	X, r1
 340:	13 97       	sbiw	r26, 0x03	; 3
 342:	08 c1       	rjmp	.+528    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 344:	1a 9b       	sbis	0x03, 2	; 3
 346:	05 c0       	rjmp	.+10     	; 0x352 <_ZN3Pin11lese_statusEv+0x60>
 348:	81 e0       	ldi	r24, 0x01	; 1
 34a:	13 96       	adiw	r26, 0x03	; 3
 34c:	8c 93       	st	X, r24
 34e:	13 97       	sbiw	r26, 0x03	; 3
 350:	01 c1       	rjmp	.+514    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 352:	13 96       	adiw	r26, 0x03	; 3
 354:	1c 92       	st	X, r1
 356:	13 97       	sbiw	r26, 0x03	; 3
 358:	fd c0       	rjmp	.+506    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 35a:	1b 9b       	sbis	0x03, 3	; 3
 35c:	05 c0       	rjmp	.+10     	; 0x368 <_ZN3Pin11lese_statusEv+0x76>
 35e:	81 e0       	ldi	r24, 0x01	; 1
 360:	13 96       	adiw	r26, 0x03	; 3
 362:	8c 93       	st	X, r24
 364:	13 97       	sbiw	r26, 0x03	; 3
 366:	f6 c0       	rjmp	.+492    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 368:	13 96       	adiw	r26, 0x03	; 3
 36a:	1c 92       	st	X, r1
 36c:	13 97       	sbiw	r26, 0x03	; 3
 36e:	f2 c0       	rjmp	.+484    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 370:	1c 9b       	sbis	0x03, 4	; 3
 372:	05 c0       	rjmp	.+10     	; 0x37e <_ZN3Pin11lese_statusEv+0x8c>
 374:	81 e0       	ldi	r24, 0x01	; 1
 376:	13 96       	adiw	r26, 0x03	; 3
 378:	8c 93       	st	X, r24
 37a:	13 97       	sbiw	r26, 0x03	; 3
 37c:	eb c0       	rjmp	.+470    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 37e:	13 96       	adiw	r26, 0x03	; 3
 380:	1c 92       	st	X, r1
 382:	13 97       	sbiw	r26, 0x03	; 3
 384:	e7 c0       	rjmp	.+462    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 386:	1d 9b       	sbis	0x03, 5	; 3
 388:	05 c0       	rjmp	.+10     	; 0x394 <_ZN3Pin11lese_statusEv+0xa2>
 38a:	81 e0       	ldi	r24, 0x01	; 1
 38c:	13 96       	adiw	r26, 0x03	; 3
 38e:	8c 93       	st	X, r24
 390:	13 97       	sbiw	r26, 0x03	; 3
 392:	e0 c0       	rjmp	.+448    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 394:	13 96       	adiw	r26, 0x03	; 3
 396:	1c 92       	st	X, r1
 398:	13 97       	sbiw	r26, 0x03	; 3
 39a:	dc c0       	rjmp	.+440    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 39c:	1e 9b       	sbis	0x03, 6	; 3
 39e:	05 c0       	rjmp	.+10     	; 0x3aa <_ZN3Pin11lese_statusEv+0xb8>
 3a0:	81 e0       	ldi	r24, 0x01	; 1
 3a2:	13 96       	adiw	r26, 0x03	; 3
 3a4:	8c 93       	st	X, r24
 3a6:	13 97       	sbiw	r26, 0x03	; 3
 3a8:	d5 c0       	rjmp	.+426    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 3aa:	13 96       	adiw	r26, 0x03	; 3
 3ac:	1c 92       	st	X, r1
 3ae:	13 97       	sbiw	r26, 0x03	; 3
 3b0:	d1 c0       	rjmp	.+418    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 3b2:	1f 9b       	sbis	0x03, 7	; 3
 3b4:	05 c0       	rjmp	.+10     	; 0x3c0 <_ZN3Pin11lese_statusEv+0xce>
 3b6:	81 e0       	ldi	r24, 0x01	; 1
 3b8:	13 96       	adiw	r26, 0x03	; 3
 3ba:	8c 93       	st	X, r24
 3bc:	13 97       	sbiw	r26, 0x03	; 3
 3be:	ca c0       	rjmp	.+404    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 3c0:	13 96       	adiw	r26, 0x03	; 3
 3c2:	1c 92       	st	X, r1
 3c4:	13 97       	sbiw	r26, 0x03	; 3
 3c6:	c6 c0       	rjmp	.+396    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 3c8:	83 34       	cpi	r24, 0x43	; 67
 3ca:	09 f0       	breq	.+2      	; 0x3ce <_ZN3Pin11lese_statusEv+0xdc>
 3cc:	5b c0       	rjmp	.+182    	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 3ce:	11 96       	adiw	r26, 0x01	; 1
 3d0:	ec 91       	ld	r30, X
 3d2:	11 97       	sbiw	r26, 0x01	; 1
 3d4:	4e 2f       	mov	r20, r30
 3d6:	50 e0       	ldi	r21, 0x00	; 0
 3d8:	47 30       	cpi	r20, 0x07	; 7
 3da:	51 05       	cpc	r21, r1
 3dc:	08 f0       	brcs	.+2      	; 0x3e0 <_ZN3Pin11lese_statusEv+0xee>
 3de:	52 c0       	rjmp	.+164    	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 3e0:	fa 01       	movw	r30, r20
 3e2:	e4 5c       	subi	r30, 0xC4	; 196
 3e4:	ff 4f       	sbci	r31, 0xFF	; 255
 3e6:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__tablejump2__>
 3ea:	30 9b       	sbis	0x06, 0	; 6
 3ec:	05 c0       	rjmp	.+10     	; 0x3f8 <_ZN3Pin11lese_statusEv+0x106>
 3ee:	81 e0       	ldi	r24, 0x01	; 1
 3f0:	13 96       	adiw	r26, 0x03	; 3
 3f2:	8c 93       	st	X, r24
 3f4:	13 97       	sbiw	r26, 0x03	; 3
 3f6:	ae c0       	rjmp	.+348    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 3f8:	13 96       	adiw	r26, 0x03	; 3
 3fa:	1c 92       	st	X, r1
 3fc:	13 97       	sbiw	r26, 0x03	; 3
 3fe:	aa c0       	rjmp	.+340    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 400:	31 9b       	sbis	0x06, 1	; 6
 402:	05 c0       	rjmp	.+10     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 404:	81 e0       	ldi	r24, 0x01	; 1
 406:	13 96       	adiw	r26, 0x03	; 3
 408:	8c 93       	st	X, r24
 40a:	13 97       	sbiw	r26, 0x03	; 3
 40c:	a3 c0       	rjmp	.+326    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 40e:	13 96       	adiw	r26, 0x03	; 3
 410:	1c 92       	st	X, r1
 412:	13 97       	sbiw	r26, 0x03	; 3
 414:	9f c0       	rjmp	.+318    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 416:	32 9b       	sbis	0x06, 2	; 6
 418:	05 c0       	rjmp	.+10     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 41a:	81 e0       	ldi	r24, 0x01	; 1
 41c:	13 96       	adiw	r26, 0x03	; 3
 41e:	8c 93       	st	X, r24
 420:	13 97       	sbiw	r26, 0x03	; 3
 422:	98 c0       	rjmp	.+304    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 424:	13 96       	adiw	r26, 0x03	; 3
 426:	1c 92       	st	X, r1
 428:	13 97       	sbiw	r26, 0x03	; 3
 42a:	94 c0       	rjmp	.+296    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 42c:	33 9b       	sbis	0x06, 3	; 6
 42e:	05 c0       	rjmp	.+10     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 430:	81 e0       	ldi	r24, 0x01	; 1
 432:	13 96       	adiw	r26, 0x03	; 3
 434:	8c 93       	st	X, r24
 436:	13 97       	sbiw	r26, 0x03	; 3
 438:	8d c0       	rjmp	.+282    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 43a:	13 96       	adiw	r26, 0x03	; 3
 43c:	1c 92       	st	X, r1
 43e:	13 97       	sbiw	r26, 0x03	; 3
 440:	89 c0       	rjmp	.+274    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 442:	34 9b       	sbis	0x06, 4	; 6
 444:	05 c0       	rjmp	.+10     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 446:	81 e0       	ldi	r24, 0x01	; 1
 448:	13 96       	adiw	r26, 0x03	; 3
 44a:	8c 93       	st	X, r24
 44c:	13 97       	sbiw	r26, 0x03	; 3
 44e:	82 c0       	rjmp	.+260    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 450:	13 96       	adiw	r26, 0x03	; 3
 452:	1c 92       	st	X, r1
 454:	13 97       	sbiw	r26, 0x03	; 3
 456:	7e c0       	rjmp	.+252    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 458:	35 9b       	sbis	0x06, 5	; 6
 45a:	05 c0       	rjmp	.+10     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	13 96       	adiw	r26, 0x03	; 3
 460:	8c 93       	st	X, r24
 462:	13 97       	sbiw	r26, 0x03	; 3
 464:	77 c0       	rjmp	.+238    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 466:	13 96       	adiw	r26, 0x03	; 3
 468:	1c 92       	st	X, r1
 46a:	13 97       	sbiw	r26, 0x03	; 3
 46c:	73 c0       	rjmp	.+230    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 46e:	36 9b       	sbis	0x06, 6	; 6
 470:	05 c0       	rjmp	.+10     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 472:	81 e0       	ldi	r24, 0x01	; 1
 474:	13 96       	adiw	r26, 0x03	; 3
 476:	8c 93       	st	X, r24
 478:	13 97       	sbiw	r26, 0x03	; 3
 47a:	6c c0       	rjmp	.+216    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 47c:	13 96       	adiw	r26, 0x03	; 3
 47e:	1c 92       	st	X, r1
 480:	13 97       	sbiw	r26, 0x03	; 3
 482:	68 c0       	rjmp	.+208    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 484:	84 34       	cpi	r24, 0x44	; 68
 486:	09 f0       	breq	.+2      	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 488:	65 c0       	rjmp	.+202    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 48a:	11 96       	adiw	r26, 0x01	; 1
 48c:	ec 91       	ld	r30, X
 48e:	11 97       	sbiw	r26, 0x01	; 1
 490:	4e 2f       	mov	r20, r30
 492:	50 e0       	ldi	r21, 0x00	; 0
 494:	48 30       	cpi	r20, 0x08	; 8
 496:	51 05       	cpc	r21, r1
 498:	08 f0       	brcs	.+2      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 49a:	5c c0       	rjmp	.+184    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 49c:	fa 01       	movw	r30, r20
 49e:	ed 5b       	subi	r30, 0xBD	; 189
 4a0:	ff 4f       	sbci	r31, 0xFF	; 255
 4a2:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__tablejump2__>
 4a6:	48 9b       	sbis	0x09, 0	; 9
 4a8:	05 c0       	rjmp	.+10     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 4aa:	81 e0       	ldi	r24, 0x01	; 1
 4ac:	13 96       	adiw	r26, 0x03	; 3
 4ae:	8c 93       	st	X, r24
 4b0:	13 97       	sbiw	r26, 0x03	; 3
 4b2:	50 c0       	rjmp	.+160    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 4b4:	13 96       	adiw	r26, 0x03	; 3
 4b6:	1c 92       	st	X, r1
 4b8:	13 97       	sbiw	r26, 0x03	; 3
 4ba:	4c c0       	rjmp	.+152    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 4bc:	49 9b       	sbis	0x09, 1	; 9
 4be:	05 c0       	rjmp	.+10     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4c0:	81 e0       	ldi	r24, 0x01	; 1
 4c2:	13 96       	adiw	r26, 0x03	; 3
 4c4:	8c 93       	st	X, r24
 4c6:	13 97       	sbiw	r26, 0x03	; 3
 4c8:	45 c0       	rjmp	.+138    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 4ca:	13 96       	adiw	r26, 0x03	; 3
 4cc:	1c 92       	st	X, r1
 4ce:	13 97       	sbiw	r26, 0x03	; 3
 4d0:	41 c0       	rjmp	.+130    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 4d2:	4a 9b       	sbis	0x09, 2	; 9
 4d4:	05 c0       	rjmp	.+10     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4d6:	81 e0       	ldi	r24, 0x01	; 1
 4d8:	13 96       	adiw	r26, 0x03	; 3
 4da:	8c 93       	st	X, r24
 4dc:	13 97       	sbiw	r26, 0x03	; 3
 4de:	3a c0       	rjmp	.+116    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 4e0:	13 96       	adiw	r26, 0x03	; 3
 4e2:	1c 92       	st	X, r1
 4e4:	13 97       	sbiw	r26, 0x03	; 3
 4e6:	36 c0       	rjmp	.+108    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 4e8:	4b 9b       	sbis	0x09, 3	; 9
 4ea:	05 c0       	rjmp	.+10     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4ec:	81 e0       	ldi	r24, 0x01	; 1
 4ee:	13 96       	adiw	r26, 0x03	; 3
 4f0:	8c 93       	st	X, r24
 4f2:	13 97       	sbiw	r26, 0x03	; 3
 4f4:	2f c0       	rjmp	.+94     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 4f6:	13 96       	adiw	r26, 0x03	; 3
 4f8:	1c 92       	st	X, r1
 4fa:	13 97       	sbiw	r26, 0x03	; 3
 4fc:	2b c0       	rjmp	.+86     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 4fe:	4c 9b       	sbis	0x09, 4	; 9
 500:	05 c0       	rjmp	.+10     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 502:	81 e0       	ldi	r24, 0x01	; 1
 504:	13 96       	adiw	r26, 0x03	; 3
 506:	8c 93       	st	X, r24
 508:	13 97       	sbiw	r26, 0x03	; 3
 50a:	24 c0       	rjmp	.+72     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 50c:	13 96       	adiw	r26, 0x03	; 3
 50e:	1c 92       	st	X, r1
 510:	13 97       	sbiw	r26, 0x03	; 3
 512:	20 c0       	rjmp	.+64     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 514:	4d 9b       	sbis	0x09, 5	; 9
 516:	05 c0       	rjmp	.+10     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 518:	81 e0       	ldi	r24, 0x01	; 1
 51a:	13 96       	adiw	r26, 0x03	; 3
 51c:	8c 93       	st	X, r24
 51e:	13 97       	sbiw	r26, 0x03	; 3
 520:	19 c0       	rjmp	.+50     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 522:	13 96       	adiw	r26, 0x03	; 3
 524:	1c 92       	st	X, r1
 526:	13 97       	sbiw	r26, 0x03	; 3
 528:	15 c0       	rjmp	.+42     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 52a:	4e 9b       	sbis	0x09, 6	; 9
 52c:	05 c0       	rjmp	.+10     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 52e:	81 e0       	ldi	r24, 0x01	; 1
 530:	13 96       	adiw	r26, 0x03	; 3
 532:	8c 93       	st	X, r24
 534:	13 97       	sbiw	r26, 0x03	; 3
 536:	0e c0       	rjmp	.+28     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 538:	13 96       	adiw	r26, 0x03	; 3
 53a:	1c 92       	st	X, r1
 53c:	13 97       	sbiw	r26, 0x03	; 3
 53e:	0a c0       	rjmp	.+20     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 540:	4f 9b       	sbis	0x09, 7	; 9
 542:	05 c0       	rjmp	.+10     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 544:	81 e0       	ldi	r24, 0x01	; 1
 546:	13 96       	adiw	r26, 0x03	; 3
 548:	8c 93       	st	X, r24
 54a:	13 97       	sbiw	r26, 0x03	; 3
 54c:	03 c0       	rjmp	.+6      	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 54e:	13 96       	adiw	r26, 0x03	; 3
 550:	1c 92       	st	X, r1
 552:	13 97       	sbiw	r26, 0x03	; 3
 554:	13 96       	adiw	r26, 0x03	; 3
 556:	8c 91       	ld	r24, X
 558:	08 95       	ret

0000055a <_ZN3Pin16initialisierePinEv>:
}

void Pin::initialisierePin()
{
 55a:	dc 01       	movw	r26, r24
	if (private_Port == 'A')
	{
		
	}

	if (private_Port == 'B')
 55c:	8c 91       	ld	r24, X
 55e:	82 34       	cpi	r24, 0x42	; 66
 560:	09 f0       	breq	.+2      	; 0x564 <_ZN3Pin16initialisierePinEv+0xa>
 562:	55 c0       	rjmp	.+170    	; 0x60e <_ZN3Pin16initialisierePinEv+0xb4>
	{
		switch(private_Nummer_Pin)
 564:	11 96       	adiw	r26, 0x01	; 1
 566:	ec 91       	ld	r30, X
 568:	11 97       	sbiw	r26, 0x01	; 1
 56a:	4e 2f       	mov	r20, r30
 56c:	50 e0       	ldi	r21, 0x00	; 0
 56e:	48 30       	cpi	r20, 0x08	; 8
 570:	51 05       	cpc	r21, r1
 572:	08 f0       	brcs	.+2      	; 0x576 <_ZN3Pin16initialisierePinEv+0x1c>
 574:	4c c0       	rjmp	.+152    	; 0x60e <_ZN3Pin16initialisierePinEv+0xb4>
 576:	fa 01       	movw	r30, r20
 578:	e5 5b       	subi	r30, 0xB5	; 181
 57a:	ff 4f       	sbci	r31, 0xFF	; 255
 57c:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__tablejump2__>
		{
			case 0:	if (private_Eingang == true)
 580:	12 96       	adiw	r26, 0x02	; 2
 582:	8c 91       	ld	r24, X
 584:	12 97       	sbiw	r26, 0x02	; 2
 586:	88 23       	and	r24, r24
 588:	11 f0       	breq	.+4      	; 0x58e <_ZN3Pin16initialisierePinEv+0x34>
			{DDRB &= ~(1 << DDB0);}
 58a:	20 98       	cbi	0x04, 0	; 4
 58c:	40 c0       	rjmp	.+128    	; 0x60e <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB0);}
 58e:	20 9a       	sbi	0x04, 0	; 4
 590:	3e c0       	rjmp	.+124    	; 0x60e <_ZN3Pin16initialisierePinEv+0xb4>
			break;
			
			case 1:	if (private_Eingang == true)
 592:	12 96       	adiw	r26, 0x02	; 2
 594:	8c 91       	ld	r24, X
 596:	12 97       	sbiw	r26, 0x02	; 2
 598:	88 23       	and	r24, r24
 59a:	11 f0       	breq	.+4      	; 0x5a0 <_ZN3Pin16initialisierePinEv+0x46>
			{DDRB &= ~(1 << DDB1);}
 59c:	21 98       	cbi	0x04, 1	; 4
 59e:	37 c0       	rjmp	.+110    	; 0x60e <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB1);}
 5a0:	21 9a       	sbi	0x04, 1	; 4
 5a2:	35 c0       	rjmp	.+106    	; 0x60e <_ZN3Pin16initialisierePinEv+0xb4>
			break;
			
			case 2:	if (private_Eingang == true)
 5a4:	12 96       	adiw	r26, 0x02	; 2
 5a6:	8c 91       	ld	r24, X
 5a8:	12 97       	sbiw	r26, 0x02	; 2
 5aa:	88 23       	and	r24, r24
 5ac:	11 f0       	breq	.+4      	; 0x5b2 <_ZN3Pin16initialisierePinEv+0x58>
			{DDRB &= ~(1 << DDB2);}
 5ae:	22 98       	cbi	0x04, 2	; 4
 5b0:	2e c0       	rjmp	.+92     	; 0x60e <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB2);}
 5b2:	22 9a       	sbi	0x04, 2	; 4
 5b4:	2c c0       	rjmp	.+88     	; 0x60e <_ZN3Pin16initialisierePinEv+0xb4>
			break;
			
			case 3:	if (private_Eingang == true)
 5b6:	12 96       	adiw	r26, 0x02	; 2
 5b8:	8c 91       	ld	r24, X
 5ba:	12 97       	sbiw	r26, 0x02	; 2
 5bc:	88 23       	and	r24, r24
 5be:	11 f0       	breq	.+4      	; 0x5c4 <_ZN3Pin16initialisierePinEv+0x6a>
			{DDRB &= ~(1 << DDB3);}
 5c0:	23 98       	cbi	0x04, 3	; 4
 5c2:	25 c0       	rjmp	.+74     	; 0x60e <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB3);}
 5c4:	23 9a       	sbi	0x04, 3	; 4
 5c6:	23 c0       	rjmp	.+70     	; 0x60e <_ZN3Pin16initialisierePinEv+0xb4>
			break;
			
			case 4:	if (private_Eingang == true)
 5c8:	12 96       	adiw	r26, 0x02	; 2
 5ca:	8c 91       	ld	r24, X
 5cc:	12 97       	sbiw	r26, 0x02	; 2
 5ce:	88 23       	and	r24, r24
 5d0:	11 f0       	breq	.+4      	; 0x5d6 <_ZN3Pin16initialisierePinEv+0x7c>
			{DDRB &= ~(1 << DDB4);}
 5d2:	24 98       	cbi	0x04, 4	; 4
 5d4:	1c c0       	rjmp	.+56     	; 0x60e <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB4);}
 5d6:	24 9a       	sbi	0x04, 4	; 4
 5d8:	1a c0       	rjmp	.+52     	; 0x60e <_ZN3Pin16initialisierePinEv+0xb4>
			break;
			
			case 5:	if (private_Eingang == true)
 5da:	12 96       	adiw	r26, 0x02	; 2
 5dc:	8c 91       	ld	r24, X
 5de:	12 97       	sbiw	r26, 0x02	; 2
 5e0:	88 23       	and	r24, r24
 5e2:	11 f0       	breq	.+4      	; 0x5e8 <_ZN3Pin16initialisierePinEv+0x8e>
			{DDRB &= ~(1 << DDB5);}
 5e4:	25 98       	cbi	0x04, 5	; 4
 5e6:	13 c0       	rjmp	.+38     	; 0x60e <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB5);}
 5e8:	25 9a       	sbi	0x04, 5	; 4
 5ea:	11 c0       	rjmp	.+34     	; 0x60e <_ZN3Pin16initialisierePinEv+0xb4>
			break;
			
			case 6:	if (private_Eingang == true)
 5ec:	12 96       	adiw	r26, 0x02	; 2
 5ee:	8c 91       	ld	r24, X
 5f0:	12 97       	sbiw	r26, 0x02	; 2
 5f2:	88 23       	and	r24, r24
 5f4:	11 f0       	breq	.+4      	; 0x5fa <_ZN3Pin16initialisierePinEv+0xa0>
			{DDRB &= ~(1 << DDB6);}
 5f6:	26 98       	cbi	0x04, 6	; 4
 5f8:	0a c0       	rjmp	.+20     	; 0x60e <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB6);}
 5fa:	26 9a       	sbi	0x04, 6	; 4
 5fc:	08 c0       	rjmp	.+16     	; 0x60e <_ZN3Pin16initialisierePinEv+0xb4>
			break;
			
			case 7:	if (private_Eingang == true)
 5fe:	12 96       	adiw	r26, 0x02	; 2
 600:	8c 91       	ld	r24, X
 602:	12 97       	sbiw	r26, 0x02	; 2
 604:	88 23       	and	r24, r24
 606:	11 f0       	breq	.+4      	; 0x60c <_ZN3Pin16initialisierePinEv+0xb2>
			{DDRB &= ~(1 << DDB7);}
 608:	27 98       	cbi	0x04, 7	; 4
 60a:	01 c0       	rjmp	.+2      	; 0x60e <_ZN3Pin16initialisierePinEv+0xb4>
			else
			{DDRB |= (1 << DDB7);}
 60c:	27 9a       	sbi	0x04, 7	; 4
			break;
			
		}
	}

	if (private_Port == 'C')
 60e:	8c 91       	ld	r24, X
 610:	83 34       	cpi	r24, 0x43	; 67
 612:	09 f0       	breq	.+2      	; 0x616 <_ZN3Pin16initialisierePinEv+0xbc>
 614:	4c c0       	rjmp	.+152    	; 0x6ae <_ZN3Pin16initialisierePinEv+0x154>
	{
		switch(private_Nummer_Pin)
 616:	11 96       	adiw	r26, 0x01	; 1
 618:	ec 91       	ld	r30, X
 61a:	11 97       	sbiw	r26, 0x01	; 1
 61c:	4e 2f       	mov	r20, r30
 61e:	50 e0       	ldi	r21, 0x00	; 0
 620:	47 30       	cpi	r20, 0x07	; 7
 622:	51 05       	cpc	r21, r1
 624:	08 f0       	brcs	.+2      	; 0x628 <_ZN3Pin16initialisierePinEv+0xce>
 626:	43 c0       	rjmp	.+134    	; 0x6ae <_ZN3Pin16initialisierePinEv+0x154>
 628:	fa 01       	movw	r30, r20
 62a:	ed 5a       	subi	r30, 0xAD	; 173
 62c:	ff 4f       	sbci	r31, 0xFF	; 255
 62e:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__tablejump2__>
		{
			case 0:	if (private_Eingang == true)
 632:	12 96       	adiw	r26, 0x02	; 2
 634:	8c 91       	ld	r24, X
 636:	12 97       	sbiw	r26, 0x02	; 2
 638:	88 23       	and	r24, r24
 63a:	11 f0       	breq	.+4      	; 0x640 <_ZN3Pin16initialisierePinEv+0xe6>
			{DDRC &= ~(1 << DDC0);}
 63c:	38 98       	cbi	0x07, 0	; 7
 63e:	37 c0       	rjmp	.+110    	; 0x6ae <_ZN3Pin16initialisierePinEv+0x154>
			else
			{DDRC |= (1 << DDC0);}
 640:	38 9a       	sbi	0x07, 0	; 7
 642:	35 c0       	rjmp	.+106    	; 0x6ae <_ZN3Pin16initialisierePinEv+0x154>
			break;
			
			case 1:	if (private_Eingang == true)
 644:	12 96       	adiw	r26, 0x02	; 2
 646:	8c 91       	ld	r24, X
 648:	12 97       	sbiw	r26, 0x02	; 2
 64a:	88 23       	and	r24, r24
 64c:	11 f0       	breq	.+4      	; 0x652 <_ZN3Pin16initialisierePinEv+0xf8>
			{DDRC &= ~(1 << DDC1);}
 64e:	39 98       	cbi	0x07, 1	; 7
 650:	2e c0       	rjmp	.+92     	; 0x6ae <_ZN3Pin16initialisierePinEv+0x154>
			else
			{DDRC |= (1 << DDC1);}
 652:	39 9a       	sbi	0x07, 1	; 7
 654:	2c c0       	rjmp	.+88     	; 0x6ae <_ZN3Pin16initialisierePinEv+0x154>
			break;
			
			case 2:	if (private_Eingang == true)
 656:	12 96       	adiw	r26, 0x02	; 2
 658:	8c 91       	ld	r24, X
 65a:	12 97       	sbiw	r26, 0x02	; 2
 65c:	88 23       	and	r24, r24
 65e:	11 f0       	breq	.+4      	; 0x664 <_ZN3Pin16initialisierePinEv+0x10a>
			{DDRC &= ~(1 << DDC2);}
 660:	3a 98       	cbi	0x07, 2	; 7
 662:	25 c0       	rjmp	.+74     	; 0x6ae <_ZN3Pin16initialisierePinEv+0x154>
			else
			{DDRC |= (1 << DDC2);}
 664:	3a 9a       	sbi	0x07, 2	; 7
 666:	23 c0       	rjmp	.+70     	; 0x6ae <_ZN3Pin16initialisierePinEv+0x154>
			break;
			
			case 3:	if (private_Eingang == true)
 668:	12 96       	adiw	r26, 0x02	; 2
 66a:	8c 91       	ld	r24, X
 66c:	12 97       	sbiw	r26, 0x02	; 2
 66e:	88 23       	and	r24, r24
 670:	11 f0       	breq	.+4      	; 0x676 <_ZN3Pin16initialisierePinEv+0x11c>
			{DDRC &= ~(1 << DDC3);}
 672:	3b 98       	cbi	0x07, 3	; 7
 674:	1c c0       	rjmp	.+56     	; 0x6ae <_ZN3Pin16initialisierePinEv+0x154>
			else
			{DDRC |= (1 << DDC3);}
 676:	3b 9a       	sbi	0x07, 3	; 7
 678:	1a c0       	rjmp	.+52     	; 0x6ae <_ZN3Pin16initialisierePinEv+0x154>
			break;
			
			case 4:	if (private_Eingang == true)
 67a:	12 96       	adiw	r26, 0x02	; 2
 67c:	8c 91       	ld	r24, X
 67e:	12 97       	sbiw	r26, 0x02	; 2
 680:	88 23       	and	r24, r24
 682:	11 f0       	breq	.+4      	; 0x688 <_ZN3Pin16initialisierePinEv+0x12e>
			{DDRC &= ~(1 << DDC4);}
 684:	3c 98       	cbi	0x07, 4	; 7
 686:	13 c0       	rjmp	.+38     	; 0x6ae <_ZN3Pin16initialisierePinEv+0x154>
			else
			{DDRC |= (1 << DDC4);}
 688:	3c 9a       	sbi	0x07, 4	; 7
 68a:	11 c0       	rjmp	.+34     	; 0x6ae <_ZN3Pin16initialisierePinEv+0x154>
			break;
			
			case 5:	if (private_Eingang == true)
 68c:	12 96       	adiw	r26, 0x02	; 2
 68e:	8c 91       	ld	r24, X
 690:	12 97       	sbiw	r26, 0x02	; 2
 692:	88 23       	and	r24, r24
 694:	11 f0       	breq	.+4      	; 0x69a <_ZN3Pin16initialisierePinEv+0x140>
			{DDRC &= ~(1 << DDC5);}
 696:	3d 98       	cbi	0x07, 5	; 7
 698:	0a c0       	rjmp	.+20     	; 0x6ae <_ZN3Pin16initialisierePinEv+0x154>
			else
			{DDRC |= (1 << DDC5);}
 69a:	3d 9a       	sbi	0x07, 5	; 7
 69c:	08 c0       	rjmp	.+16     	; 0x6ae <_ZN3Pin16initialisierePinEv+0x154>
			break;
			
			case 6:	if (private_Eingang == true)
 69e:	12 96       	adiw	r26, 0x02	; 2
 6a0:	8c 91       	ld	r24, X
 6a2:	12 97       	sbiw	r26, 0x02	; 2
 6a4:	88 23       	and	r24, r24
 6a6:	11 f0       	breq	.+4      	; 0x6ac <_ZN3Pin16initialisierePinEv+0x152>
			{DDRC &= ~(1 << DDC6);}
 6a8:	3e 98       	cbi	0x07, 6	; 7
 6aa:	01 c0       	rjmp	.+2      	; 0x6ae <_ZN3Pin16initialisierePinEv+0x154>
			else
			{DDRC |= (1 << DDC6);}
 6ac:	3e 9a       	sbi	0x07, 6	; 7
			break;
			
		}
	}
	
	if (private_Port == 'D')
 6ae:	8c 91       	ld	r24, X
 6b0:	84 34       	cpi	r24, 0x44	; 68
 6b2:	09 f0       	breq	.+2      	; 0x6b6 <_ZN3Pin16initialisierePinEv+0x15c>
 6b4:	4d c0       	rjmp	.+154    	; 0x750 <_ZN3Pin16initialisierePinEv+0x1f6>
	{
		switch(private_Nummer_Pin)
 6b6:	11 96       	adiw	r26, 0x01	; 1
 6b8:	ec 91       	ld	r30, X
 6ba:	11 97       	sbiw	r26, 0x01	; 1
 6bc:	4e 2f       	mov	r20, r30
 6be:	50 e0       	ldi	r21, 0x00	; 0
 6c0:	48 30       	cpi	r20, 0x08	; 8
 6c2:	51 05       	cpc	r21, r1
 6c4:	08 f0       	brcs	.+2      	; 0x6c8 <_ZN3Pin16initialisierePinEv+0x16e>
 6c6:	44 c0       	rjmp	.+136    	; 0x750 <_ZN3Pin16initialisierePinEv+0x1f6>
 6c8:	fa 01       	movw	r30, r20
 6ca:	e6 5a       	subi	r30, 0xA6	; 166
 6cc:	ff 4f       	sbci	r31, 0xFF	; 255
 6ce:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__tablejump2__>
		{
			case 0:	if (private_Eingang == true)
 6d2:	12 96       	adiw	r26, 0x02	; 2
 6d4:	8c 91       	ld	r24, X
 6d6:	88 23       	and	r24, r24
 6d8:	11 f0       	breq	.+4      	; 0x6de <_ZN3Pin16initialisierePinEv+0x184>
			{DDRD &= ~(1 << DDD0);}
 6da:	50 98       	cbi	0x0a, 0	; 10
 6dc:	08 95       	ret
			else
			{DDRD |= (1 << DDD0);}
 6de:	50 9a       	sbi	0x0a, 0	; 10
 6e0:	08 95       	ret
			break;
			
			case 1:	if (private_Eingang == true)
 6e2:	12 96       	adiw	r26, 0x02	; 2
 6e4:	8c 91       	ld	r24, X
 6e6:	88 23       	and	r24, r24
 6e8:	11 f0       	breq	.+4      	; 0x6ee <_ZN3Pin16initialisierePinEv+0x194>
			{DDRD &= ~(1 << DDD1);}
 6ea:	51 98       	cbi	0x0a, 1	; 10
 6ec:	08 95       	ret
			else
			{DDRD |= (1 << DDD1);}
 6ee:	51 9a       	sbi	0x0a, 1	; 10
 6f0:	08 95       	ret
			break;
			
			case 2:	if (private_Eingang == true)
 6f2:	12 96       	adiw	r26, 0x02	; 2
 6f4:	8c 91       	ld	r24, X
 6f6:	88 23       	and	r24, r24
 6f8:	11 f0       	breq	.+4      	; 0x6fe <_ZN3Pin16initialisierePinEv+0x1a4>
			{DDRD &= ~(1 << DDD2);}
 6fa:	52 98       	cbi	0x0a, 2	; 10
 6fc:	08 95       	ret
			else
			{DDRD |= (1 << DDD2);}
 6fe:	52 9a       	sbi	0x0a, 2	; 10
 700:	08 95       	ret
			break;
			
			case 3:	if (private_Eingang == true)
 702:	12 96       	adiw	r26, 0x02	; 2
 704:	8c 91       	ld	r24, X
 706:	88 23       	and	r24, r24
 708:	11 f0       	breq	.+4      	; 0x70e <_ZN3Pin16initialisierePinEv+0x1b4>
			{DDRD &= ~(1 << DDD3);}
 70a:	53 98       	cbi	0x0a, 3	; 10
 70c:	08 95       	ret
			else
			{DDRD |= (1 << DDD3);}
 70e:	53 9a       	sbi	0x0a, 3	; 10
 710:	08 95       	ret
			break;
			
			case 4:	if (private_Eingang == true)
 712:	12 96       	adiw	r26, 0x02	; 2
 714:	8c 91       	ld	r24, X
 716:	88 23       	and	r24, r24
 718:	11 f0       	breq	.+4      	; 0x71e <_ZN3Pin16initialisierePinEv+0x1c4>
			{DDRD &= ~(1 << DDD4);}
 71a:	54 98       	cbi	0x0a, 4	; 10
 71c:	08 95       	ret
			else
			{DDRD |= (1 << DDD4);}
 71e:	54 9a       	sbi	0x0a, 4	; 10
 720:	08 95       	ret
			break;
			
			case 5:	if (private_Eingang == true)
 722:	12 96       	adiw	r26, 0x02	; 2
 724:	8c 91       	ld	r24, X
 726:	88 23       	and	r24, r24
 728:	11 f0       	breq	.+4      	; 0x72e <_ZN3Pin16initialisierePinEv+0x1d4>
			{DDRD &= ~(1 << DDD5);}
 72a:	55 98       	cbi	0x0a, 5	; 10
 72c:	08 95       	ret
			else
			{DDRD |= (1 << DDD5);}
 72e:	55 9a       	sbi	0x0a, 5	; 10
 730:	08 95       	ret
			break;
			
			case 6:	if (private_Eingang == true)
 732:	12 96       	adiw	r26, 0x02	; 2
 734:	8c 91       	ld	r24, X
 736:	88 23       	and	r24, r24
 738:	11 f0       	breq	.+4      	; 0x73e <_ZN3Pin16initialisierePinEv+0x1e4>
			{DDRD &= ~(1 << DDD6);}
 73a:	56 98       	cbi	0x0a, 6	; 10
 73c:	08 95       	ret
			else
			{DDRD |= (1 << DDD6);}
 73e:	56 9a       	sbi	0x0a, 6	; 10
 740:	08 95       	ret
			break;
			
			case 7:	if (private_Eingang == true)
 742:	12 96       	adiw	r26, 0x02	; 2
 744:	8c 91       	ld	r24, X
 746:	88 23       	and	r24, r24
 748:	11 f0       	breq	.+4      	; 0x74e <_ZN3Pin16initialisierePinEv+0x1f4>
			{DDRD &= ~(1 << DDD7);}
 74a:	57 98       	cbi	0x0a, 7	; 10
 74c:	08 95       	ret
			else
			{DDRD |= (1 << DDD7);}
 74e:	57 9a       	sbi	0x0a, 7	; 10
 750:	08 95       	ret

00000752 <_ZN3PinC1Echb>:
	return private_Nummer_Pin;
}

void Pin::setze_Port(char PortBuchstabe)
{
	private_Port = PortBuchstabe;
 752:	fc 01       	movw	r30, r24
 754:	60 83       	st	Z, r22
}

void Pin::setze_PinNummer(uint8_t Pin_Nummer)
{
	private_Nummer_Pin = Pin_Nummer;
 756:	41 83       	std	Z+1, r20	; 0x01
}

void Pin::setze_Richtung(bool is_Eingang)
{
	private_Eingang = is_Eingang;
 758:	22 83       	std	Z+2, r18	; 0x02
{
	//ctor
	setze_Port(PublicPort);
	setze_PinNummer(Public_Nummer_Pin);
	setze_Richtung(Eingang);
	initialisierePin();  
 75a:	0e 94 ad 02 	call	0x55a	; 0x55a <_ZN3Pin16initialisierePinEv>
 75e:	08 95       	ret

00000760 <_ZN3Pin12setze_StatusEb>:


}

void Pin::setze_Status(bool Status)
{
 760:	dc 01       	movw	r26, r24
 762:	96 2f       	mov	r25, r22

		if (private_Port == 'B')
 764:	8c 91       	ld	r24, X
 766:	82 34       	cpi	r24, 0x42	; 66
 768:	09 f0       	breq	.+2      	; 0x76c <_ZN3Pin12setze_StatusEb+0xc>
 76a:	75 c0       	rjmp	.+234    	; 0x856 <_ZN3Pin12setze_StatusEb+0xf6>
		{
			switch(private_Nummer_Pin)
 76c:	11 96       	adiw	r26, 0x01	; 1
 76e:	ec 91       	ld	r30, X
 770:	11 97       	sbiw	r26, 0x01	; 1
 772:	4e 2f       	mov	r20, r30
 774:	50 e0       	ldi	r21, 0x00	; 0
 776:	48 30       	cpi	r20, 0x08	; 8
 778:	51 05       	cpc	r21, r1
 77a:	08 f0       	brcs	.+2      	; 0x77e <_ZN3Pin12setze_StatusEb+0x1e>
 77c:	6c c0       	rjmp	.+216    	; 0x856 <_ZN3Pin12setze_StatusEb+0xf6>
 77e:	fa 01       	movw	r30, r20
 780:	ee 59       	subi	r30, 0x9E	; 158
 782:	ff 4f       	sbci	r31, 0xFF	; 255
 784:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__tablejump2__>
			{
				case 0:	if (Status == true)
 788:	99 23       	and	r25, r25
 78a:	31 f0       	breq	.+12     	; 0x798 <_ZN3Pin12setze_StatusEb+0x38>
				{ PORTB |= (1<< PINB0);
 78c:	28 9a       	sbi	0x05, 0	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 78e:	81 e0       	ldi	r24, 0x01	; 1
 790:	13 96       	adiw	r26, 0x03	; 3
 792:	8c 93       	st	X, r24
 794:	13 97       	sbiw	r26, 0x03	; 3
 796:	5f c0       	rjmp	.+190    	; 0x856 <_ZN3Pin12setze_StatusEb+0xf6>
			{
				case 0:	if (Status == true)
				{ PORTB |= (1<< PINB0);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB0);
 798:	28 98       	cbi	0x05, 0	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 79a:	13 96       	adiw	r26, 0x03	; 3
 79c:	1c 92       	st	X, r1
 79e:	13 97       	sbiw	r26, 0x03	; 3
 7a0:	5a c0       	rjmp	.+180    	; 0x856 <_ZN3Pin12setze_StatusEb+0xf6>
				else
				{PORTB &= ~(1<<PINB0);
					merke_status(false);}
				break;
				
				case 1:	if (Status == true)
 7a2:	99 23       	and	r25, r25
 7a4:	31 f0       	breq	.+12     	; 0x7b2 <_ZN3Pin12setze_StatusEb+0x52>
				{ PORTB |= (1<< PINB1);
 7a6:	29 9a       	sbi	0x05, 1	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 7a8:	81 e0       	ldi	r24, 0x01	; 1
 7aa:	13 96       	adiw	r26, 0x03	; 3
 7ac:	8c 93       	st	X, r24
 7ae:	13 97       	sbiw	r26, 0x03	; 3
 7b0:	52 c0       	rjmp	.+164    	; 0x856 <_ZN3Pin12setze_StatusEb+0xf6>
				
				case 1:	if (Status == true)
				{ PORTB |= (1<< PINB1);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB1);
 7b2:	29 98       	cbi	0x05, 1	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 7b4:	13 96       	adiw	r26, 0x03	; 3
 7b6:	1c 92       	st	X, r1
 7b8:	13 97       	sbiw	r26, 0x03	; 3
 7ba:	4d c0       	rjmp	.+154    	; 0x856 <_ZN3Pin12setze_StatusEb+0xf6>
				else
				{PORTB &= ~(1<<PINB1);
					merke_status(false);}
				break;
				
				case 2:	if (Status == true)
 7bc:	99 23       	and	r25, r25
 7be:	31 f0       	breq	.+12     	; 0x7cc <_ZN3Pin12setze_StatusEb+0x6c>
				{ PORTB |= (1<< PINB2);
 7c0:	2a 9a       	sbi	0x05, 2	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 7c2:	81 e0       	ldi	r24, 0x01	; 1
 7c4:	13 96       	adiw	r26, 0x03	; 3
 7c6:	8c 93       	st	X, r24
 7c8:	13 97       	sbiw	r26, 0x03	; 3
 7ca:	45 c0       	rjmp	.+138    	; 0x856 <_ZN3Pin12setze_StatusEb+0xf6>
				
				case 2:	if (Status == true)
				{ PORTB |= (1<< PINB2);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB2);
 7cc:	2a 98       	cbi	0x05, 2	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 7ce:	13 96       	adiw	r26, 0x03	; 3
 7d0:	1c 92       	st	X, r1
 7d2:	13 97       	sbiw	r26, 0x03	; 3
 7d4:	40 c0       	rjmp	.+128    	; 0x856 <_ZN3Pin12setze_StatusEb+0xf6>
				else
				{PORTB &= ~(1<<PINB2);
					merke_status(false);}
				break;
				
				case 3:	if (Status == true)
 7d6:	99 23       	and	r25, r25
 7d8:	31 f0       	breq	.+12     	; 0x7e6 <_ZN3Pin12setze_StatusEb+0x86>
				{ PORTB |= (1<< PINB3);
 7da:	2b 9a       	sbi	0x05, 3	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 7dc:	81 e0       	ldi	r24, 0x01	; 1
 7de:	13 96       	adiw	r26, 0x03	; 3
 7e0:	8c 93       	st	X, r24
 7e2:	13 97       	sbiw	r26, 0x03	; 3
 7e4:	38 c0       	rjmp	.+112    	; 0x856 <_ZN3Pin12setze_StatusEb+0xf6>
				
				case 3:	if (Status == true)
				{ PORTB |= (1<< PINB3);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB3);
 7e6:	2b 98       	cbi	0x05, 3	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 7e8:	13 96       	adiw	r26, 0x03	; 3
 7ea:	1c 92       	st	X, r1
 7ec:	13 97       	sbiw	r26, 0x03	; 3
 7ee:	33 c0       	rjmp	.+102    	; 0x856 <_ZN3Pin12setze_StatusEb+0xf6>
				else
				{PORTB &= ~(1<<PINB3);
					merke_status(false);}
				break;
				
				case 4:	if (Status == true)
 7f0:	99 23       	and	r25, r25
 7f2:	31 f0       	breq	.+12     	; 0x800 <_ZN3Pin12setze_StatusEb+0xa0>
				{ PORTB |= (1<< PINB4);
 7f4:	2c 9a       	sbi	0x05, 4	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 7f6:	81 e0       	ldi	r24, 0x01	; 1
 7f8:	13 96       	adiw	r26, 0x03	; 3
 7fa:	8c 93       	st	X, r24
 7fc:	13 97       	sbiw	r26, 0x03	; 3
 7fe:	2b c0       	rjmp	.+86     	; 0x856 <_ZN3Pin12setze_StatusEb+0xf6>
				
				case 4:	if (Status == true)
				{ PORTB |= (1<< PINB4);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB4);
 800:	2c 98       	cbi	0x05, 4	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 802:	13 96       	adiw	r26, 0x03	; 3
 804:	1c 92       	st	X, r1
 806:	13 97       	sbiw	r26, 0x03	; 3
 808:	26 c0       	rjmp	.+76     	; 0x856 <_ZN3Pin12setze_StatusEb+0xf6>
				else
				{PORTB &= ~(1<<PINB4);
					merke_status(false);}
				break;
				
				case 5:	if (Status == true)
 80a:	99 23       	and	r25, r25
 80c:	31 f0       	breq	.+12     	; 0x81a <_ZN3Pin12setze_StatusEb+0xba>
				{ PORTB |= (1<< PINB5);
 80e:	2d 9a       	sbi	0x05, 5	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 810:	81 e0       	ldi	r24, 0x01	; 1
 812:	13 96       	adiw	r26, 0x03	; 3
 814:	8c 93       	st	X, r24
 816:	13 97       	sbiw	r26, 0x03	; 3
 818:	1e c0       	rjmp	.+60     	; 0x856 <_ZN3Pin12setze_StatusEb+0xf6>
				
				case 5:	if (Status == true)
				{ PORTB |= (1<< PINB5);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB5);
 81a:	2d 98       	cbi	0x05, 5	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 81c:	13 96       	adiw	r26, 0x03	; 3
 81e:	1c 92       	st	X, r1
 820:	13 97       	sbiw	r26, 0x03	; 3
 822:	19 c0       	rjmp	.+50     	; 0x856 <_ZN3Pin12setze_StatusEb+0xf6>
				else
				{PORTB &= ~(1<<PINB5);
					merke_status(false);}
				break;
				
				case 6:	if (Status == true)
 824:	99 23       	and	r25, r25
 826:	31 f0       	breq	.+12     	; 0x834 <_ZN3Pin12setze_StatusEb+0xd4>
				{ PORTB |= (1<< PINB6);
 828:	2e 9a       	sbi	0x05, 6	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 82a:	81 e0       	ldi	r24, 0x01	; 1
 82c:	13 96       	adiw	r26, 0x03	; 3
 82e:	8c 93       	st	X, r24
 830:	13 97       	sbiw	r26, 0x03	; 3
 832:	11 c0       	rjmp	.+34     	; 0x856 <_ZN3Pin12setze_StatusEb+0xf6>
				
				case 6:	if (Status == true)
				{ PORTB |= (1<< PINB6);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB6);
 834:	2e 98       	cbi	0x05, 6	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 836:	13 96       	adiw	r26, 0x03	; 3
 838:	1c 92       	st	X, r1
 83a:	13 97       	sbiw	r26, 0x03	; 3
 83c:	0c c0       	rjmp	.+24     	; 0x856 <_ZN3Pin12setze_StatusEb+0xf6>
				else
				{PORTB &= ~(1<<PINB6);
					merke_status(false);}
				break;
				
				case 7:	if (Status == true)
 83e:	99 23       	and	r25, r25
 840:	31 f0       	breq	.+12     	; 0x84e <_ZN3Pin12setze_StatusEb+0xee>
				{ PORTB |= (1<< PINB7);
 842:	2f 9a       	sbi	0x05, 7	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 844:	81 e0       	ldi	r24, 0x01	; 1
 846:	13 96       	adiw	r26, 0x03	; 3
 848:	8c 93       	st	X, r24
 84a:	13 97       	sbiw	r26, 0x03	; 3
 84c:	04 c0       	rjmp	.+8      	; 0x856 <_ZN3Pin12setze_StatusEb+0xf6>
				
				case 7:	if (Status == true)
				{ PORTB |= (1<< PINB7);
					merke_status(true);}
				else
				{PORTB &= ~(1<<PINB7);
 84e:	2f 98       	cbi	0x05, 7	; 5
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 850:	13 96       	adiw	r26, 0x03	; 3
 852:	1c 92       	st	X, r1
 854:	13 97       	sbiw	r26, 0x03	; 3
				break;
				
			}
		}

		if (private_Port == 'C')
 856:	8c 91       	ld	r24, X
 858:	83 34       	cpi	r24, 0x43	; 67
 85a:	09 f0       	breq	.+2      	; 0x85e <_ZN3Pin12setze_StatusEb+0xfe>
 85c:	68 c0       	rjmp	.+208    	; 0x92e <__stack+0x2f>
		{
			switch(private_Nummer_Pin)
 85e:	11 96       	adiw	r26, 0x01	; 1
 860:	ec 91       	ld	r30, X
 862:	11 97       	sbiw	r26, 0x01	; 1
 864:	4e 2f       	mov	r20, r30
 866:	50 e0       	ldi	r21, 0x00	; 0
 868:	47 30       	cpi	r20, 0x07	; 7
 86a:	51 05       	cpc	r21, r1
 86c:	08 f0       	brcs	.+2      	; 0x870 <_ZN3Pin12setze_StatusEb+0x110>
 86e:	5f c0       	rjmp	.+190    	; 0x92e <__stack+0x2f>
 870:	fa 01       	movw	r30, r20
 872:	e6 59       	subi	r30, 0x96	; 150
 874:	ff 4f       	sbci	r31, 0xFF	; 255
 876:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__tablejump2__>
			{
				case 0:	if (Status == true)
 87a:	99 23       	and	r25, r25
 87c:	31 f0       	breq	.+12     	; 0x88a <_ZN3Pin12setze_StatusEb+0x12a>
				{ PORTC |= (1<< PINC0);
 87e:	40 9a       	sbi	0x08, 0	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 880:	81 e0       	ldi	r24, 0x01	; 1
 882:	13 96       	adiw	r26, 0x03	; 3
 884:	8c 93       	st	X, r24
 886:	13 97       	sbiw	r26, 0x03	; 3
 888:	52 c0       	rjmp	.+164    	; 0x92e <__stack+0x2f>
			{
				case 0:	if (Status == true)
				{ PORTC |= (1<< PINC0);
					merke_status(true);}
				else
				{PORTC &= ~(1<<PINC0);
 88a:	40 98       	cbi	0x08, 0	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 88c:	13 96       	adiw	r26, 0x03	; 3
 88e:	1c 92       	st	X, r1
 890:	13 97       	sbiw	r26, 0x03	; 3
 892:	4d c0       	rjmp	.+154    	; 0x92e <__stack+0x2f>
				else
				{PORTC &= ~(1<<PINC0);
					merke_status(false);}
				break;
				
				case 1:	if (Status == true)
 894:	99 23       	and	r25, r25
 896:	31 f0       	breq	.+12     	; 0x8a4 <_ZN3Pin12setze_StatusEb+0x144>
				{ PORTC |= (1<< PINC1);
 898:	41 9a       	sbi	0x08, 1	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 89a:	81 e0       	ldi	r24, 0x01	; 1
 89c:	13 96       	adiw	r26, 0x03	; 3
 89e:	8c 93       	st	X, r24
 8a0:	13 97       	sbiw	r26, 0x03	; 3
 8a2:	45 c0       	rjmp	.+138    	; 0x92e <__stack+0x2f>
				
				case 1:	if (Status == true)
				{ PORTC |= (1<< PINC1);
					merke_status(true);}
				else
				{PORTC &= ~(1<<PINC1);
 8a4:	41 98       	cbi	0x08, 1	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 8a6:	13 96       	adiw	r26, 0x03	; 3
 8a8:	1c 92       	st	X, r1
 8aa:	13 97       	sbiw	r26, 0x03	; 3
 8ac:	40 c0       	rjmp	.+128    	; 0x92e <__stack+0x2f>
				else
				{PORTC &= ~(1<<PINC1);
					merke_status(false);}
				break;
				
				case 2:	if (Status == true)
 8ae:	99 23       	and	r25, r25
 8b0:	31 f0       	breq	.+12     	; 0x8be <_ZN3Pin12setze_StatusEb+0x15e>
				{ PORTC |= (1<< PINC2);
 8b2:	42 9a       	sbi	0x08, 2	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 8b4:	81 e0       	ldi	r24, 0x01	; 1
 8b6:	13 96       	adiw	r26, 0x03	; 3
 8b8:	8c 93       	st	X, r24
 8ba:	13 97       	sbiw	r26, 0x03	; 3
 8bc:	38 c0       	rjmp	.+112    	; 0x92e <__stack+0x2f>
				
				case 2:	if (Status == true)
				{ PORTC |= (1<< PINC2);
					merke_status(true);}
				else
				{PORTC &= ~(1<<PINC2);
 8be:	42 98       	cbi	0x08, 2	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 8c0:	13 96       	adiw	r26, 0x03	; 3
 8c2:	1c 92       	st	X, r1
 8c4:	13 97       	sbiw	r26, 0x03	; 3
 8c6:	33 c0       	rjmp	.+102    	; 0x92e <__stack+0x2f>
				else
				{PORTC &= ~(1<<PINC2);
					merke_status(false);}
				break;
				
				case 3:	if (Status == true)
 8c8:	99 23       	and	r25, r25
 8ca:	31 f0       	breq	.+12     	; 0x8d8 <_ZN3Pin12setze_StatusEb+0x178>
				{ PORTC |= (1<< PINC3);
 8cc:	43 9a       	sbi	0x08, 3	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 8ce:	81 e0       	ldi	r24, 0x01	; 1
 8d0:	13 96       	adiw	r26, 0x03	; 3
 8d2:	8c 93       	st	X, r24
 8d4:	13 97       	sbiw	r26, 0x03	; 3
 8d6:	2b c0       	rjmp	.+86     	; 0x92e <__stack+0x2f>
				
				case 3:	if (Status == true)
				{ PORTC |= (1<< PINC3);
					merke_status(true);}
				else
				{PORTC &= ~(1<<PINC3);
 8d8:	43 98       	cbi	0x08, 3	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 8da:	13 96       	adiw	r26, 0x03	; 3
 8dc:	1c 92       	st	X, r1
 8de:	13 97       	sbiw	r26, 0x03	; 3
 8e0:	26 c0       	rjmp	.+76     	; 0x92e <__stack+0x2f>
				else
				{PORTC &= ~(1<<PINC3);
					merke_status(false);}
				break;
				
				case 4:	if (Status == true)
 8e2:	99 23       	and	r25, r25
 8e4:	31 f0       	breq	.+12     	; 0x8f2 <_ZN3Pin12setze_StatusEb+0x192>
				{ PORTC |= (1<< PINC4);
 8e6:	44 9a       	sbi	0x08, 4	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 8e8:	81 e0       	ldi	r24, 0x01	; 1
 8ea:	13 96       	adiw	r26, 0x03	; 3
 8ec:	8c 93       	st	X, r24
 8ee:	13 97       	sbiw	r26, 0x03	; 3
 8f0:	1e c0       	rjmp	.+60     	; 0x92e <__stack+0x2f>
				
				case 4:	if (Status == true)
				{ PORTC |= (1<< PINC4);
					merke_status(true);}
				else
				{PORTC &= ~(1<<PINC4);
 8f2:	44 98       	cbi	0x08, 4	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 8f4:	13 96       	adiw	r26, 0x03	; 3
 8f6:	1c 92       	st	X, r1
 8f8:	13 97       	sbiw	r26, 0x03	; 3
 8fa:	19 c0       	rjmp	.+50     	; 0x92e <__stack+0x2f>
				else
				{PORTC &= ~(1<<PINC4);
					merke_status(false);}
				break;
				
				case 5:	if (Status == true)
 8fc:	99 23       	and	r25, r25
 8fe:	31 f0       	breq	.+12     	; 0x90c <__stack+0xd>
				{ PORTC |= (1<< PINC5);
 900:	45 9a       	sbi	0x08, 5	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 902:	81 e0       	ldi	r24, 0x01	; 1
 904:	13 96       	adiw	r26, 0x03	; 3
 906:	8c 93       	st	X, r24
 908:	13 97       	sbiw	r26, 0x03	; 3
 90a:	11 c0       	rjmp	.+34     	; 0x92e <__stack+0x2f>
				
				case 5:	if (Status == true)
				{ PORTC |= (1<< PINC5);
					merke_status(true);}
				else
				{PORTC &= ~(1<<PINC5);
 90c:	45 98       	cbi	0x08, 5	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 90e:	13 96       	adiw	r26, 0x03	; 3
 910:	1c 92       	st	X, r1
 912:	13 97       	sbiw	r26, 0x03	; 3
 914:	0c c0       	rjmp	.+24     	; 0x92e <__stack+0x2f>
				else
				{PORTC &= ~(1<<PINC5);
					merke_status(false);}
				break;
				
				case 6:	if (Status == true)
 916:	99 23       	and	r25, r25
 918:	31 f0       	breq	.+12     	; 0x926 <__stack+0x27>
				{ PORTC |= (1<< PINC6);
 91a:	46 9a       	sbi	0x08, 6	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 91c:	81 e0       	ldi	r24, 0x01	; 1
 91e:	13 96       	adiw	r26, 0x03	; 3
 920:	8c 93       	st	X, r24
 922:	13 97       	sbiw	r26, 0x03	; 3
 924:	04 c0       	rjmp	.+8      	; 0x92e <__stack+0x2f>
				
				case 6:	if (Status == true)
				{ PORTC |= (1<< PINC6);
					merke_status(true);}
				else
				{PORTC &= ~(1<<PINC6);
 926:	46 98       	cbi	0x08, 6	; 8
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 928:	13 96       	adiw	r26, 0x03	; 3
 92a:	1c 92       	st	X, r1
 92c:	13 97       	sbiw	r26, 0x03	; 3
				default: //# warning "The choosen pin number is not valid. Only 0-6 are allowed on Port C"
				break;
							}
		}
		
		if (private_Port == 'D')
 92e:	8c 91       	ld	r24, X
 930:	84 34       	cpi	r24, 0x44	; 68
 932:	09 f0       	breq	.+2      	; 0x936 <__stack+0x37>
 934:	65 c0       	rjmp	.+202    	; 0xa00 <__stack+0x101>
		{
			switch(private_Nummer_Pin)
 936:	11 96       	adiw	r26, 0x01	; 1
 938:	ec 91       	ld	r30, X
 93a:	11 97       	sbiw	r26, 0x01	; 1
 93c:	4e 2f       	mov	r20, r30
 93e:	50 e0       	ldi	r21, 0x00	; 0
 940:	48 30       	cpi	r20, 0x08	; 8
 942:	51 05       	cpc	r21, r1
 944:	08 f0       	brcs	.+2      	; 0x948 <__stack+0x49>
 946:	5c c0       	rjmp	.+184    	; 0xa00 <__stack+0x101>
 948:	fa 01       	movw	r30, r20
 94a:	ef 58       	subi	r30, 0x8F	; 143
 94c:	ff 4f       	sbci	r31, 0xFF	; 255
 94e:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__tablejump2__>
			{
				case 0:	if (Status == true)
 952:	99 23       	and	r25, r25
 954:	29 f0       	breq	.+10     	; 0x960 <__stack+0x61>
				{ PORTD |= (1<< PIND0);
 956:	58 9a       	sbi	0x0b, 0	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 958:	81 e0       	ldi	r24, 0x01	; 1
 95a:	13 96       	adiw	r26, 0x03	; 3
 95c:	8c 93       	st	X, r24
 95e:	08 95       	ret
			{
				case 0:	if (Status == true)
				{ PORTD |= (1<< PIND0);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND0);
 960:	58 98       	cbi	0x0b, 0	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 962:	13 96       	adiw	r26, 0x03	; 3
 964:	1c 92       	st	X, r1
 966:	08 95       	ret
				else
				{PORTD &= ~(1<<PIND0);
					merke_status(false);}
				break;
				
				case 1:	if (Status == true)
 968:	99 23       	and	r25, r25
 96a:	29 f0       	breq	.+10     	; 0x976 <__stack+0x77>
				{ PORTD |= (1<< PIND1);
 96c:	59 9a       	sbi	0x0b, 1	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 96e:	81 e0       	ldi	r24, 0x01	; 1
 970:	13 96       	adiw	r26, 0x03	; 3
 972:	8c 93       	st	X, r24
 974:	08 95       	ret
				
				case 1:	if (Status == true)
				{ PORTD |= (1<< PIND1);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND1);
 976:	59 98       	cbi	0x0b, 1	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 978:	13 96       	adiw	r26, 0x03	; 3
 97a:	1c 92       	st	X, r1
 97c:	08 95       	ret
				else
				{PORTD &= ~(1<<PIND1);
					merke_status(false);}
				break;
				
				case 2:	if (Status == true)
 97e:	99 23       	and	r25, r25
 980:	29 f0       	breq	.+10     	; 0x98c <__stack+0x8d>
				{ PORTD |= (1<< PIND2);
 982:	5a 9a       	sbi	0x0b, 2	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 984:	81 e0       	ldi	r24, 0x01	; 1
 986:	13 96       	adiw	r26, 0x03	; 3
 988:	8c 93       	st	X, r24
 98a:	08 95       	ret
				
				case 2:	if (Status == true)
				{ PORTD |= (1<< PIND2);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND2);
 98c:	5a 98       	cbi	0x0b, 2	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 98e:	13 96       	adiw	r26, 0x03	; 3
 990:	1c 92       	st	X, r1
 992:	08 95       	ret
				else
				{PORTD &= ~(1<<PIND2);
					merke_status(false);}
				break;
				
				case 3:	if (Status == true)
 994:	99 23       	and	r25, r25
 996:	29 f0       	breq	.+10     	; 0x9a2 <__stack+0xa3>
				{ PORTD |= (1<< PIND3);
 998:	5b 9a       	sbi	0x0b, 3	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 99a:	81 e0       	ldi	r24, 0x01	; 1
 99c:	13 96       	adiw	r26, 0x03	; 3
 99e:	8c 93       	st	X, r24
 9a0:	08 95       	ret
				
				case 3:	if (Status == true)
				{ PORTD |= (1<< PIND3);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND3);
 9a2:	5b 98       	cbi	0x0b, 3	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 9a4:	13 96       	adiw	r26, 0x03	; 3
 9a6:	1c 92       	st	X, r1
 9a8:	08 95       	ret
				else
				{PORTD &= ~(1<<PIND3);
					merke_status(false);}
				break;
				
				case 4:	if (Status == true)
 9aa:	99 23       	and	r25, r25
 9ac:	29 f0       	breq	.+10     	; 0x9b8 <__stack+0xb9>
				{ PORTD |= (1<< PIND4);
 9ae:	5c 9a       	sbi	0x0b, 4	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 9b0:	81 e0       	ldi	r24, 0x01	; 1
 9b2:	13 96       	adiw	r26, 0x03	; 3
 9b4:	8c 93       	st	X, r24
 9b6:	08 95       	ret
				
				case 4:	if (Status == true)
				{ PORTD |= (1<< PIND4);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND4);
 9b8:	5c 98       	cbi	0x0b, 4	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 9ba:	13 96       	adiw	r26, 0x03	; 3
 9bc:	1c 92       	st	X, r1
 9be:	08 95       	ret
				else
				{PORTD &= ~(1<<PIND4);
					merke_status(false);}
				break;
				
				case 5:	if (Status == true)
 9c0:	99 23       	and	r25, r25
 9c2:	29 f0       	breq	.+10     	; 0x9ce <__stack+0xcf>
				{ PORTD |= (1<< PIND5);
 9c4:	5d 9a       	sbi	0x0b, 5	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 9c6:	81 e0       	ldi	r24, 0x01	; 1
 9c8:	13 96       	adiw	r26, 0x03	; 3
 9ca:	8c 93       	st	X, r24
 9cc:	08 95       	ret
				
				case 5:	if (Status == true)
				{ PORTD |= (1<< PIND5);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND5);
 9ce:	5d 98       	cbi	0x0b, 5	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 9d0:	13 96       	adiw	r26, 0x03	; 3
 9d2:	1c 92       	st	X, r1
 9d4:	08 95       	ret
				else
				{PORTD &= ~(1<<PIND5);
					merke_status(false);}
				break;
				
				case 6:	if (Status == true)
 9d6:	99 23       	and	r25, r25
 9d8:	29 f0       	breq	.+10     	; 0x9e4 <__stack+0xe5>
				{ PORTD |= (1<< PIND6);
 9da:	5e 9a       	sbi	0x0b, 6	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 9dc:	81 e0       	ldi	r24, 0x01	; 1
 9de:	13 96       	adiw	r26, 0x03	; 3
 9e0:	8c 93       	st	X, r24
 9e2:	08 95       	ret
				
				case 6:	if (Status == true)
				{ PORTD |= (1<< PIND6);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND6);
 9e4:	5e 98       	cbi	0x0b, 6	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 9e6:	13 96       	adiw	r26, 0x03	; 3
 9e8:	1c 92       	st	X, r1
 9ea:	08 95       	ret
				else
				{PORTD &= ~(1<<PIND6);
					merke_status(false);}
				break;
				
				case 7:	if (Status == true)
 9ec:	99 23       	and	r25, r25
 9ee:	29 f0       	breq	.+10     	; 0x9fa <__stack+0xfb>
				{ PORTD |= (1<< PIND7);
 9f0:	5f 9a       	sbi	0x0b, 7	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 9f2:	81 e0       	ldi	r24, 0x01	; 1
 9f4:	13 96       	adiw	r26, 0x03	; 3
 9f6:	8c 93       	st	X, r24
 9f8:	08 95       	ret
				
				case 7:	if (Status == true)
				{ PORTD |= (1<< PIND7);
					merke_status(true);}
				else
				{PORTD &= ~(1<<PIND7);
 9fa:	5f 98       	cbi	0x0b, 7	; 11
	initialisierePin();  
}

void Pin::merke_status(bool status)
{
	status_intern = status;
 9fc:	13 96       	adiw	r26, 0x03	; 3
 9fe:	1c 92       	st	X, r1
 a00:	08 95       	ret

00000a02 <__tablejump2__>:
 a02:	ee 0f       	add	r30, r30
 a04:	ff 1f       	adc	r31, r31
 a06:	05 90       	lpm	r0, Z+
 a08:	f4 91       	lpm	r31, Z
 a0a:	e0 2d       	mov	r30, r0
 a0c:	09 94       	ijmp

00000a0e <_exit>:
 a0e:	f8 94       	cli

00000a10 <__stop_program>:
 a10:	ff cf       	rjmp	.-2      	; 0xa10 <__stop_program>
